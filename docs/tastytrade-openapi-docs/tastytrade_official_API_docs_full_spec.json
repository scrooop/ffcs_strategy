{
  "openapi": "3.0.0",
  "paths": {
    "/market-metrics": {
      "get": {
        "description": "Returns an array of volatility data for given symbols.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbols",
            "description": "Comma separated list of symbols i.e. ?symbols=AAPL,FB,BRK%2FB",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of volatility data for given symbols.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MarketMetricInfo"
              }
            }
          }
        },
        "operationId": "getMarketMetricsIndex"
      }
    },
    "/market-metrics/historic-corporate-events/dividends/{symbol}": {
      "get": {
        "description": "Get historical dividend data",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "description": "Symbol to get dividends data for",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Array of historical dividend data",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DividendInfo"
              }
            }
          }
        },
        "operationId": "getMarketMetricsDividendsSymbol"
      }
    },
    "/market-metrics/historic-corporate-events/earnings-reports/{symbol}": {
      "get": {
        "description": "Get historical earnings data",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "description": "Symbol to get earnings data for",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "type": "string",
            "format": "date",
            "name": "start-date",
            "description": "Limits earnings data from start-date until now",
            "required": true
          },
          {
            "in": "query",
            "type": "string",
            "format": "date",
            "name": "end-date",
            "description": "Limits earnings data from start-date until end-date",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Array of historical earnings data",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EarningsInfo"
              }
            }
          }
        },
        "operationId": "getMarketMetricsEarningsSymbol"
      }
    },
    "/accounts/{account_number}/margin-requirements/{underlying_symbol}/effective": {
      "get": {
        "description": "Get effective margin requirements for account",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_number",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "underlying_symbol",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get effective margin requirements for account",
            "schema": {
              "$ref": "#/definitions/MarginRequirement"
            }
          }
        },
        "tags": [
          "accounts"
        ],
        "operationId": "getAccountsAccountNumberMarginRequirementsUnderlyingSymbolEffective"
      }
    },
    "/accounts/{account_number}/position-limit": {
      "get": {
        "description": "Get the position limit",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_number",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get the position limit",
            "schema": {
              "$ref": "#/definitions/PositionLimit"
            }
          }
        },
        "tags": [
          "accounts"
        ],
        "operationId": "getAccountsAccountNumberPositionLimit"
      }
    },
    "/margin-requirements-public-configuration": {
      "get": {
        "description": "Publicly accessible, read only margin configuration",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Publicly accessible, read only margin configuration",
            "schema": {
              "$ref": "#/definitions/MarginRequirementsGlobalConfiguration"
            }
          }
        },
        "tags": [
          "margin-requirements-public-configuration"
        ],
        "operationId": "getMarginRequirementsPublicConfiguration"
      }
    },
    "/market-data/by-type": {
      "get": {
        "tags": [
          "market-data-controller"
        ],
        "summary": "Get market data for many symbols of type. Combined limit across all types is 100",
        "operationId": "getMarketDataByType",
        "parameters": [
          {
            "name": "index",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": []
            }
          },
          {
            "name": "equity",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": []
            }
          },
          {
            "name": "equity-option",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": []
            }
          },
          {
            "name": "future",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": []
            }
          },
          {
            "name": "future-option",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": []
            }
          },
          {
            "name": "cryptocurrency",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": []
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MarketData"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_number}/trading-status": {
      "get": {
        "description": "Returns current trading status for an account.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_number",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns current trading status for an account.",
            "schema": {
              "$ref": "#/definitions/TradingStatus"
            }
          }
        },
        "tags": [
          "trading-status"
        ],
        "operationId": "getAccountsAccountNumberTradingStatus"
      }
    },
    "/accounts/{account_number}/complex-orders": {
      "get": {
        "description": "Returns a paginated list of all Complex Orders",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_number",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "query",
            "name": "page-offset",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          },
          {
            "in": "query",
            "name": "per-page",
            "type": "integer",
            "format": "int32",
            "default": 10,
            "minimum": 1,
            "maximum": 200,
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated list of all Complex Orders",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ComplexOrder"
              }
            }
          }
        },
        "tags": [
          "complex-orders"
        ],
        "operationId": "getAccountsAccountNumberComplexOrders"
      },
      "post": {
        "description": "Creates a new Complex Order from supplied params",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_number",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "name": "postAccountsAccountNumberComplexOrders",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postAccountsAccountNumberComplexOrders"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Creates a new Complex Order from supplied params",
            "schema": {
              "$ref": "#/definitions/PlacedOrderResponse"
            }
          }
        },
        "tags": [
          "complex-orders"
        ],
        "operationId": "postAccountsAccountNumberComplexOrders"
      }
    },
    "/accounts/{account_number}/complex-orders/live": {
      "get": {
        "description": "Returns all Complex Orders where a compenent order was placed today",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_number",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all Complex Orders where a compenent order was placed today",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ComplexOrder"
              }
            }
          }
        },
        "tags": [
          "complex-orders"
        ],
        "operationId": "getAccountsAccountNumberComplexOrdersLive"
      }
    },
    "/accounts/{account_number}/complex-orders/dry-run": {
      "post": {
        "description": "Performs a dry-run for a new ComplexOrder from supplied params. Allows validation of potential orders.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_number",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "name": "postAccountsAccountNumberComplexOrdersDryRun",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postAccountsAccountNumberComplexOrdersDryRun"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Performs a dry-run for a new ComplexOrder from supplied params. Allows validation of potential orders.",
            "schema": {
              "$ref": "#/definitions/PlacedOrderResponse"
            }
          }
        },
        "tags": [
          "complex-orders"
        ],
        "operationId": "postAccountsAccountNumberComplexOrdersDryRun"
      }
    },
    "/accounts/{account_number}/complex-orders/{id}": {
      "get": {
        "description": "Returns a full representation of a Complex Order",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_number",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a full representation of a Complex Order",
            "schema": {
              "$ref": "#/definitions/ComplexOrder"
            }
          }
        },
        "tags": [
          "complex-orders"
        ],
        "operationId": "getAccountsAccountNumberComplexOrdersId"
      },
      "patch": {
        "description": "Edit threshold-price of a PAIRS trade.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_number",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "name": "patchAccountsAccountNumberComplexOrdersId",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/patchAccountsAccountNumberComplexOrdersId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Edit threshold-price of a PAIRS trade.",
            "schema": {
              "$ref": "#/definitions/PlacedOrderResponse"
            }
          }
        },
        "tags": [
          "complex-orders"
        ],
        "operationId": "patchAccountsAccountNumberComplexOrdersId"
      },
      "delete": {
        "description": "Request cancellation for all non terminal components of a Complex Order",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_number",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request cancellation for all non terminal components of a Complex Order",
            "schema": {
              "$ref": "#/definitions/ComplexOrder"
            }
          }
        },
        "tags": [
          "complex-orders"
        ],
        "operationId": "deleteAccountsAccountNumberComplexOrdersId"
      }
    },
    "/accounts/{account_number}/complex-orders/{id}/dry-run": {
      "post": {
        "description": "Performs a dry-run for editing a ComplexOrder from supplied params.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_number",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "name": "postAccountsAccountNumberComplexOrdersIdDryRun",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postAccountsAccountNumberComplexOrdersIdDryRun"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Performs a dry-run for editing a ComplexOrder from supplied params.",
            "schema": {
              "$ref": "#/definitions/PlacedOrderResponse"
            }
          }
        },
        "tags": [
          "complex-orders"
        ],
        "operationId": "postAccountsAccountNumberComplexOrdersIdDryRun"
      }
    },
    "/accounts/{account_number}/orders": {
      "post": {
        "description": "Accepts a json document containing parameters to create an order for the client.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_number",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "name": "postAccountsAccountNumberOrders",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postAccountsAccountNumberOrders"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Accepts a json document containing parameters to create an order for the client.",
            "schema": {
              "$ref": "#/definitions/PlacedOrderResponse"
            }
          }
        },
        "tags": [
          "orders"
        ],
        "operationId": "postAccountsAccountNumberOrders"
      },
      "get": {
        "description": "Returns a paginated list of the customer's orders (as identified by the provided authentication token)\n        based on sort param. If no sort is passed in, it defaults to descending order.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_number",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "query",
            "name": "page-offset",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          },
          {
            "in": "query",
            "name": "per-page",
            "type": "integer",
            "format": "int32",
            "default": 10,
            "minimum": 1,
            "maximum": 200,
            "required": false
          },
          {
            "in": "query",
            "name": "end-date",
            "type": "string",
            "format": "date",
            "required": false
          },
          {
            "in": "query",
            "name": "futures-symbol",
            "description": "Used to fetch both futures and futures options orders",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "start-date",
            "type": "string",
            "format": "date",
            "required": false
          },
          {
            "in": "query",
            "name": "status",
            "description": " (example: status[]={value1}&status[]={value2})",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "underlying-instrument-type",
            "description": "Underlying instrument type",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "underlying-symbol",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "description": "The order to sort results in. Accepts `Desc` or `Asc`. Defaults to `Desc`",
            "type": "string",
            "default": "Desc",
            "enum": [
              "Desc",
              "Asc"
            ],
            "required": false
          },
          {
            "in": "query",
            "name": "end-at",
            "description": "DateTime end range for filtering orders in full date-time",
            "type": "string",
            "format": "date-time",
            "required": false
          },
          {
            "in": "query",
            "name": "start-at",
            "description": "DateTime start rage for filtering orders in full date-time",
            "type": "string",
            "format": "date-time",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated list of the customer's orders (as identified by the provided authentication token)\n        based on sort param. If no sort is passed in, it defaults to descending order.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Order"
              }
            }
          }
        },
        "tags": [
          "orders"
        ],
        "operationId": "getAccountsAccountNumberOrders"
      }
    },
    "/accounts/{account_number}/orders/dry-run": {
      "post": {
        "description": "Accepts a json document containing parameters to create an order and \\\n          then runs the prefights without placing the order.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_number",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "name": "postAccountsAccountNumberOrdersDryRun",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postAccountsAccountNumberOrdersDryRun"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Accepts a json document containing parameters to create an order and \\\n          then runs the prefights without placing the order.",
            "schema": {
              "$ref": "#/definitions/PlacedOrderResponse"
            }
          }
        },
        "tags": [
          "orders"
        ],
        "operationId": "postAccountsAccountNumberOrdersDryRun"
      }
    },
    "/accounts/{account_number}/orders/live": {
      "get": {
        "description": "Returns a list of orders from the current trading day. Includes all statuses, not only Live.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_number",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of orders from the current trading day. Includes all statuses, not only Live.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Order"
              }
            }
          }
        },
        "tags": [
          "orders"
        ],
        "operationId": "getAccountsAccountNumberOrdersLive"
      }
    },
    "/accounts/{account_number}/orders/{id}": {
      "patch": {
        "description": "Edit price and execution properties of a live order by replacement. Subsequent fills of the original order\n      will abort the replacement.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_number",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "name": "patchAccountsAccountNumberOrdersId",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/patchAccountsAccountNumberOrdersId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Edit price and execution properties of a live order by replacement. Subsequent fills of the original order\n      will abort the replacement.",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        },
        "tags": [
          "orders"
        ],
        "operationId": "patchAccountsAccountNumberOrdersId"
      },
      "put": {
        "description": "Replaces a live order with a new one. Subsequent fills of the original order will abort the replacement.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_number",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "name": "putAccountsAccountNumberOrdersId",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putAccountsAccountNumberOrdersId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Replaces a live order with a new one. Subsequent fills of the original order will abort the replacement.",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        },
        "tags": [
          "orders"
        ],
        "operationId": "putAccountsAccountNumberOrdersId"
      },
      "delete": {
        "description": "Requests order cancellation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_number",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Requests order cancellation",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        },
        "tags": [
          "orders"
        ],
        "operationId": "deleteAccountsAccountNumberOrdersId"
      },
      "get": {
        "description": "Returns a single order based on the id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_number",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single order based on the id",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        },
        "tags": [
          "orders"
        ],
        "operationId": "getAccountsAccountNumberOrdersId"
      }
    },
    "/accounts/{account_number}/orders/{id}/dry-run": {
      "post": {
        "description": "Runs through preflights for cancel-replace and edit without routing",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_number",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "name": "postAccountsAccountNumberOrdersIdDryRun",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postAccountsAccountNumberOrdersIdDryRun"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Runs through preflights for cancel-replace and edit without routing",
            "schema": {
              "$ref": "#/definitions/PlacedOrderResponse"
            }
          }
        },
        "tags": [
          "orders"
        ],
        "operationId": "postAccountsAccountNumberOrdersIdDryRun"
      }
    },
    "/accounts/{account_number}/orders/{id}/reconfirm": {
      "post": {
        "description": "Reconfirm an order",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_number",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Reconfirm an order",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        },
        "tags": [
          "orders"
        ],
        "operationId": "postAccountsAccountNumberOrdersIdReconfirm"
      }
    },
    "/customers/{customer_id}/orders": {
      "get": {
        "description": "Returns a paginated list of the customer's orders (as identified by the provided authentication token)\n        based on sort param. If no sort is passed in, it defaults to descending order.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "customer_id",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "query",
            "name": "page-offset",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          },
          {
            "in": "query",
            "name": "per-page",
            "type": "integer",
            "format": "int32",
            "default": 10,
            "minimum": 1,
            "maximum": 200,
            "required": false
          },
          {
            "in": "query",
            "name": "end-date",
            "type": "string",
            "format": "date",
            "required": false
          },
          {
            "in": "query",
            "name": "futures-symbol",
            "description": "Used to fetch both futures and futures options orders",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "start-date",
            "type": "string",
            "format": "date",
            "required": false
          },
          {
            "in": "query",
            "name": "status",
            "description": " (example: status[]={value1}&status[]={value2})",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "underlying-instrument-type",
            "description": "Underlying instrument type",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "underlying-symbol",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "description": "The order to sort results in. Accepts `Desc` or `Asc`. Defaults to `Desc`",
            "type": "string",
            "default": "Desc",
            "enum": [
              "Desc",
              "Asc"
            ],
            "required": false
          },
          {
            "in": "query",
            "name": "end-at",
            "description": "DateTime end range for filtering orders in full date-time",
            "type": "string",
            "format": "date-time",
            "required": false
          },
          {
            "in": "query",
            "name": "start-at",
            "description": "DateTime start rage for filtering orders in full date-time",
            "type": "string",
            "format": "date-time",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated list of the customer's orders (as identified by the provided authentication token)\n        based on sort param. If no sort is passed in, it defaults to descending order.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Order"
              }
            }
          }
        },
        "tags": [
          "orders"
        ],
        "operationId": "getCustomersCustomerIdOrders"
      }
    },
    "/customers/{customer_id}/orders/live": {
      "get": {
        "description": "Returns a list of orders from the current trading day. Includes all statuses, not only Live.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "customer_id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of orders from the current trading day. Includes all statuses, not only Live.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Order"
              }
            }
          }
        },
        "tags": [
          "orders"
        ],
        "operationId": "getCustomersCustomerIdOrdersLive"
      }
    },
    "/accounts/{accountNumber}/net-liq/history": {
      "get": {
        "tags": [
          "net-liq-controller"
        ],
        "summary": "Get net-liq history for account",
        "operationId": "getNetLiqHistory",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "time-back",
            "in": "query",
            "description": "A request of data relative to the current time",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "1d",
                "1w",
                "1m",
                "3m",
                "6m",
                "1y",
                "all"
              ]
            }
          },
          {
            "name": "start-time",
            "in": "query",
            "description": "The start-time of a windowed request in format '2011-12-03T10:15:30+01:00[Europe/Paris]'",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end-time",
            "in": "query",
            "description": "The end-time of a windowed request in format '2011-12-03T10:15:30+01:00[Europe/Paris]'",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "interval",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/NetLiqOhlc"
                }
              }
            }
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "summary": "Create backtester session",
        "description": "Request new backtester session token, this request will accept your tastytrade session token and return backtester token to be passed in Authorization header",
        "operationId": "PostSession",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tastytradeToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Session created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "summary": "Invalidate backtester session",
        "description": "Delete current backtester session, this will not delete tastytrade session token",
        "operationId": "DeleteSession",
        "responses": {
          "204": {
            "description": "Session invalidated successfully"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/margin/accounts/{account_number}/requirements": {
      "get": {
        "description": "Fetch current margin/captial requirements report for an account",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_number",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve account margin/capital requirements report"
          }
        },
        "tags": [
          "margin-requirements"
        ],
        "operationId": "getMarginAccountsAccountNumberRequirements"
      }
    },
    "/margin/accounts/{account_number}/dry-run": {
      "post": {
        "description": "Estimate margin requirements for an order given an account",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_number",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "order",
            "description": "the order to evaluate for margin requirements",
            "schema": {
              "type": "object",
              "required": [
                "order-type",
                "time-in-force",
                "account-number",
                "underlying-symbol"
              ],
              "properties": {
                "account-number": {
                  "type": "string"
                },
                "underlying-symbol": {
                  "type": "string"
                },
                "order-type": {
                  "type": "string"
                },
                "time-in-force": {
                  "type": "string"
                },
                "gtc-date": {
                  "type": "string",
                  "format": "date"
                },
                "price": {
                  "type": "string",
                  "format": "numeric"
                },
                "price-effect": {
                  "type": "string",
                  "enum": [
                    "Credit",
                    "Debit"
                  ]
                },
                "stop-trigger": {
                  "type": "string",
                  "format": "numeric"
                },
                "replaces-order-id": {
                  "type": "string",
                  "format": "numeric"
                },
                "legs": {
                  "type": "array",
                  "minItems": 1,
                  "maxItems": 4,
                  "uniqueItems": true,
                  "items": {
                    "type": "object",
                    "required": [
                      "symbol",
                      "instrument-type",
                      "action"
                    ],
                    "properties": {
                      "symbol": {
                        "type": "string"
                      },
                      "instrument-type": {
                        "type": "string"
                      },
                      "quantity": {
                        "type": "string",
                        "format": "numeric"
                      },
                      "action": {
                        "type": "string"
                      },
                      "remaining-quantity": {
                        "type": "string",
                        "format": "numeric"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve account margin/capital requirements report"
          }
        },
        "tags": [
          "margin-requirements"
        ],
        "operationId": "createMarginAccountsAccountNumberDryRun"
      }
    },
    "/accounts/{account_number}/positions": {
      "get": {
        "description": "Returns a list of the account's positions.\n            Can be filtered by symbol, underlying_symbol",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "underlying-symbol",
            "description": "An array of Underlying symbol(s) for positions (example: underlying-symbol[]={value1}&underlying-symbol[]={value2})",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "symbol",
            "description": "A single symbol. Stock Ticker Symbol `AAPL`, \\\n                                 OCC Option Symbol `AAPL  191004P00275000`, \\\n                                 TW Future Symbol `/ESZ9`, or \\\n                                 TW Future Option Symbol `./ESZ9 EW4U9 190927P2975`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "instrument-type",
            "description": "The type of Instrument",
            "type": "string",
            "enum": [
              "Bond",
              "Cryptocurrency",
              "Currency Pair",
              "Equity",
              "Equity Offering",
              "Equity Option",
              "Future",
              "Future Option",
              "Index",
              "Unknown",
              "Warrant"
            ],
            "required": false
          },
          {
            "in": "query",
            "name": "include-closed-positions",
            "description": "If closed positions should be included in the query",
            "type": "boolean",
            "default": false,
            "required": false
          },
          {
            "in": "query",
            "name": "underlying-product-code",
            "description": "The underlying Future's Product code. i.e `ES`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "partition-keys",
            "description": "Account partition keys (example: partition-keys[]={value1}&partition-keys[]={value2})",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "net-positions",
            "description": "Returns net positions grouped by instrument type and symbol",
            "type": "boolean",
            "default": false,
            "required": false
          },
          {
            "in": "query",
            "name": "include-marks",
            "description": "Include current quote mark (note: can decrease performance)",
            "type": "boolean",
            "default": false,
            "required": false
          },
          {
            "in": "path",
            "name": "account_number",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of the account's positions.\n            Can be filtered by symbol, underlying_symbol",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CurrentPosition"
              }
            }
          }
        },
        "tags": [
          "positions"
        ],
        "operationId": "getAccountsAccountNumberPositions"
      }
    },
    "/accounts/{account_number}/balances": {
      "get": {
        "description": "Returns the current balance values for an account",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "currency",
            "description": "Currency balance to get for account",
            "type": "string",
            "default": "USD",
            "required": false
          },
          {
            "in": "path",
            "name": "account_number",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the current balance values for an account",
            "schema": {
              "$ref": "#/definitions/AccountBalance"
            }
          }
        },
        "tags": [
          "accounts"
        ],
        "operationId": "getAccountsAccountNumberBalances"
      }
    },
    "/accounts/{account_number}/balances/{currency}": {
      "get": {
        "description": "Returns the current balance values for an account and currency",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "currency",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "account_number",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the current balance values for an account and currency",
            "schema": {
              "$ref": "#/definitions/AccountBalance"
            }
          }
        },
        "tags": [
          "accounts"
        ],
        "operationId": "getAccountsAccountNumberBalancesCurrency"
      }
    },
    "/accounts/{account_number}/balance-snapshots": {
      "get": {
        "description": "Returns most recent snapshot and current balance for an account",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "per-page",
            "type": "integer",
            "format": "int32",
            "default": 250,
            "minimum": 1,
            "maximum": 2000,
            "required": false
          },
          {
            "in": "query",
            "name": "page-offset",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          },
          {
            "in": "query",
            "name": "currency",
            "description": "Currency",
            "type": "string",
            "default": "USD",
            "required": false
          },
          {
            "in": "query",
            "name": "snapshot-date",
            "description": "The day of the balance snapshot to retrieve",
            "type": "string",
            "format": "date",
            "required": false
          },
          {
            "in": "query",
            "name": "time-of-day",
            "description": "The abbreviation for the time of day.",
            "type": "string",
            "enum": [
              "EOD",
              "BOD"
            ],
            "required": true
          },
          {
            "in": "query",
            "name": "start-date",
            "description": "The first date in a range of dates to retrieve",
            "type": "string",
            "format": "date",
            "required": false
          },
          {
            "in": "query",
            "name": "end-date",
            "description": "The last date in a range of dates to retrieve",
            "type": "string",
            "format": "date",
            "required": false
          },
          {
            "in": "path",
            "name": "account_number",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns most recent snapshot and current balance for an account",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountBalanceSnapshot"
              }
            }
          }
        },
        "tags": [
          "balance-snapshots"
        ],
        "operationId": "getAccountsAccountNumberBalanceSnapshots"
      }
    },
    "/symbols/search/{symbol}": {
      "get": {
        "description": "Returns an array of symbol data.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns an array of symbol data.",
            "schema": {
              "$ref": "#/definitions/SymbolData"
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "type": "string",
            "required": true,
            "description": "Symbol or fragment of a symbol to search, i.e. `AAP` will return AAP and AAPL data"
          }
        ],
        "operationId": "searchSymbols"
      }
    },
    "/api-quote-tokens": {
      "get": {
        "description": "Returns the appropriate API quote streamer endpoint, level and identification token \\\n            for the current customer to receive market data.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the appropriate API quote streamer endpoint, level and identification token \\\n            for the current customer to receive market data.",
            "schema": {
              "$ref": "#/definitions/QuoteStreamerTokenAuthResult"
            }
          }
        },
        "tags": [
          "api-quote-tokens"
        ],
        "operationId": "getApiQuoteTokens"
      }
    },
    "/customers/{customer_id}/accounts": {
      "get": {
        "description": "Get a list of all the customer account resources attached to the current customer.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "customer_id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get a list of all the customer account resources attached to the current customer.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountAuthorityDecorator"
              }
            }
          }
        },
        "tags": [
          "customers"
        ],
        "operationId": "getCustomersCustomerIdAccounts"
      }
    },
    "/customers/{customer_id}/accounts/{account_number}": {
      "get": {
        "description": "Get a full customer account resource.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "customer_id",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "path",
            "name": "account_number",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get a full customer account resource.",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "tags": [
          "customers"
        ],
        "operationId": "getCustomersCustomerIdAccountsAccountNumber"
      }
    },
    "/customers/{customer_id}": {
      "get": {
        "description": "Get a full customer resource.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "customer_id",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "query",
            "name": "allow-missing",
            "description": "Does not raise a 404 if customer is missing",
            "type": "boolean",
            "default": false,
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Get a full customer resource.",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        },
        "tags": [
          "customers"
        ],
        "operationId": "getCustomersCustomerId"
      }
    },
    "/public-watchlists": {
      "get": {
        "description": "Returns a list of all tastyworks watchlists",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "counts-only",
            "type": "boolean",
            "default": false,
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of all tastyworks watchlists",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Watchlist"
              }
            }
          }
        },
        "tags": [
          "public-watchlists"
        ],
        "operationId": "getPublicWatchlists"
      }
    },
    "/public-watchlists/{watchlist_name}": {
      "get": {
        "description": "Returns a requested tastyworks watchlist",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "watchlist_name",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a requested tastyworks watchlist",
            "schema": {
              "$ref": "#/definitions/Watchlist"
            }
          }
        },
        "tags": [
          "public-watchlists"
        ],
        "operationId": "getPublicWatchlistsWatchlistName"
      }
    },
    "/watchlists": {
      "post": {
        "description": "Create an account watchlist",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "postWatchlists",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postWatchlists"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Create an account watchlist",
            "schema": {
              "$ref": "#/definitions/Watchlist"
            }
          }
        },
        "tags": [
          "user-watchlists"
        ],
        "operationId": "postWatchlists"
      },
      "get": {
        "description": "Returns a list of all watchlists for the given account",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns a list of all watchlists for the given account",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Watchlist"
              }
            }
          }
        },
        "tags": [
          "user-watchlists"
        ],
        "operationId": "getWatchlists"
      }
    },
    "/watchlists/{watchlist_name}": {
      "put": {
        "description": "Replace all properties of an account watchlist",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "watchlist_name",
            "type": "string",
            "required": true
          },
          {
            "name": "putWatchlistsWatchlistName",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putWatchlistsWatchlistName"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Replace all properties of an account watchlist",
            "schema": {
              "$ref": "#/definitions/Watchlist"
            }
          }
        },
        "tags": [
          "user-watchlists"
        ],
        "operationId": "putWatchlistsWatchlistName"
      },
      "delete": {
        "description": "Delete a watchlist for the given account",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "watchlist_name",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete a watchlist for the given account",
            "schema": {
              "$ref": "#/definitions/Watchlist"
            }
          }
        },
        "tags": [
          "user-watchlists"
        ],
        "operationId": "deleteWatchlistsWatchlistName"
      },
      "get": {
        "description": "Returns a requested account watchlist",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "watchlist_name",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a requested account watchlist",
            "schema": {
              "$ref": "#/definitions/Watchlist"
            }
          }
        },
        "tags": [
          "user-watchlists"
        ],
        "operationId": "getWatchlistsWatchlistName"
      }
    },
    "/pairs-watchlists": {
      "get": {
        "description": "Returns a list of all tastyworks pairs watchlists",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns a list of all tastyworks pairs watchlists",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PairsWatchlist"
              }
            }
          }
        },
        "tags": [
          "pairs-watchlists"
        ],
        "operationId": "getPairsWatchlists"
      }
    },
    "/pairs-watchlists/{pairs_watchlist_name}": {
      "get": {
        "description": "Returns a requested tastyworks pairs watchlist",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "pairs_watchlist_name",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a requested tastyworks pairs watchlist",
            "schema": {
              "$ref": "#/definitions/PairsWatchlist"
            }
          }
        },
        "tags": [
          "pairs-watchlists"
        ],
        "operationId": "getPairsWatchlistsPairsWatchlistName"
      }
    },
    "/instruments/cryptocurrencies": {
      "get": {
        "description": "Retrieve a set of cryptocurrencies given an array of one or more symbols.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol(s) (example: symbol[]={value1}&symbol[]={value2})",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve a set of cryptocurrencies given an array of one or more symbols.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Cryptocurrency"
              }
            }
          }
        },
        "tags": [
          "instruments"
        ],
        "operationId": "getInstrumentsCryptocurrencies"
      }
    },
    "/instruments/cryptocurrencies/{symbol}": {
      "get": {
        "description": "Retrieve a cryptocurrency given a symbol.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "description": "Symbol",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve a cryptocurrency given a symbol.",
            "schema": {
              "$ref": "#/definitions/Cryptocurrency"
            }
          }
        },
        "tags": [
          "instruments"
        ],
        "operationId": "getInstrumentsCryptocurrenciesSymbol"
      }
    },
    "/instruments/equities": {
      "get": {
        "description": "Returns a set of equity definitions given an array of one or more symbols",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "The symbol of the equity(s), i.e `AAPL` (example: symbol[]={value1}&symbol[]={value2})",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "is-etf",
            "description": "Flag indicating if equity is an etf instrument",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "is-index",
            "description": "Flag indicating if equity is an index instrument",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "lendability",
            "description": "Lendability",
            "type": "string",
            "enum": [
              "Easy To Borrow",
              "Locate Required",
              "Preborrow"
            ],
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a set of equity definitions given an array of one or more symbols",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Equity"
              }
            }
          }
        },
        "tags": [
          "instruments"
        ],
        "operationId": "getInstrumentsEquities"
      }
    },
    "/instruments/equities/active": {
      "get": {
        "description": "Returns all active equities in a paginated fashion",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page-offset",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          },
          {
            "in": "query",
            "name": "per-page",
            "type": "integer",
            "format": "int32",
            "default": 1000,
            "minimum": 1,
            "maximum": 5000,
            "required": false
          },
          {
            "in": "query",
            "name": "lendability",
            "description": "Lendability. i.e. `Easy To Borrow`, `Locate Required` or `Preborrow`",
            "type": "string",
            "enum": [
              "Easy To Borrow",
              "Locate Required",
              "Preborrow"
            ],
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all active equities in a paginated fashion",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Equity"
              }
            }
          }
        },
        "tags": [
          "instruments"
        ],
        "operationId": "getInstrumentsEquitiesActive"
      }
    },
    "/instruments/equities/{symbol}": {
      "get": {
        "description": "Returns a single equity definition for the provided symbol",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "description": "The symbol of the equity, i.e. `AAPL`",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single equity definition for the provided symbol",
            "schema": {
              "$ref": "#/definitions/Equity"
            }
          }
        },
        "tags": [
          "instruments"
        ],
        "operationId": "getInstrumentsEquitiesSymbol"
      }
    },
    "/instruments/equity-options": {
      "get": {
        "description": "Returns a set of equity options given one or more symbols",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "active",
            "description": "Whether an option is available for trading with the broker.\n                 Terminology is somewhat misleading as this is generally used to filter non-standard / flex options out.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "symbol",
            "description": "The symbol of the equity option(s) using OCC Symbology, i.e. `[FB    180629C00200000]` (example: symbol[]={value1}&symbol[]={value2})",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "with-expired",
            "description": "Include expired options",
            "type": "boolean",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a set of equity options given one or more symbols",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EquityOption"
              }
            }
          }
        },
        "tags": [
          "instruments"
        ],
        "operationId": "getInstrumentsEquityOptions"
      }
    },
    "/instruments/equity-options/{symbol}": {
      "get": {
        "description": "Get equity option by symbol",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "description": "The symbol of the equity option using OCC Symbology, i.e. `FB    180629C00200000`",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "active",
            "description": "Whether an option is available for trading with the broker.\n                   Terminology is somewhat misleading as this is generally used to filter non-standard / flex options out.",
            "type": "boolean",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Get equity option by symbol",
            "schema": {
              "$ref": "#/definitions/EquityOption"
            }
          }
        },
        "tags": [
          "instruments"
        ],
        "operationId": "getInstrumentsEquityOptionsSymbol"
      }
    },
    "/instruments/futures": {
      "get": {
        "description": "Returns a set of outright futures given an array of one or more symbols.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "exchange",
            "description": "Name of the exchange for the product. Only used to avoid security id collisions if that is also given.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "only-active-futures",
            "description": "If true (defaults to true), only active futures are returned.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "product-code",
            "description": "The product code of the future(s), i.e. `product-code[]=ES&product-code[]=6A`. \\\n                 Ignored if `symbol` parameter is given. (example: product-code[]={value1}&product-code[]={value2})",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "security-id",
            "description": "Exchange-specific ID used for order routing (example: security-id[]={value1}&security-id[]={value2})",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "symbol",
            "description": "The symbol of the future(s), i.e. `symbol[]=ESZ9`. Leading forward slash is not required. (example: symbol[]={value1}&symbol[]={value2})",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a set of outright futures given an array of one or more symbols.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Future"
              }
            }
          }
        },
        "tags": [
          "instruments"
        ],
        "operationId": "getInstrumentsFutures"
      }
    },
    "/instruments/futures/{symbol}": {
      "get": {
        "description": "Returns an outright future given a symbol.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "description": "The symbol of the future, i.e. `ESZ9`. Leading forward slash is not required.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an outright future given a symbol.",
            "schema": {
              "$ref": "#/definitions/Future"
            }
          }
        },
        "tags": [
          "instruments"
        ],
        "operationId": "getInstrumentsFuturesSymbol"
      }
    },
    "/instruments/future-option-products": {
      "get": {
        "description": "Returns metadata for all supported future option products",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns metadata for all supported future option products",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FutureOptionProduct"
              }
            }
          }
        },
        "tags": [
          "instruments"
        ],
        "operationId": "getInstrumentsFutureOptionProducts"
      }
    },
    "/instruments/future-option-products/{exchange}/{root_symbol}": {
      "get": {
        "description": "Get a future option product by exchange and root symbol",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "exchange",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "root_symbol",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get a future option product by exchange and root symbol",
            "schema": {
              "$ref": "#/definitions/FutureOptionProduct"
            }
          }
        },
        "tags": [
          "instruments"
        ],
        "operationId": "getInstrumentsFutureOptionProductsExchangeRootSymbol"
      }
    },
    "/instruments/future-option-products/{root_symbol}": {
      "get": {
        "description": "Get a future option product by root symbol",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "root_symbol",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get a future option product by root symbol",
            "schema": {
              "$ref": "#/definitions/FutureOptionProduct"
            }
          }
        },
        "tags": [
          "instruments"
        ],
        "operationId": "getInstrumentsFutureOptionProductsRootSymbol",
        "deprecated": true
      }
    },
    "/instruments/future-options": {
      "get": {
        "description": "Returns a set of future option(s) given an array of one or more symbols.\n        Uses TW symbology: `[./ESZ9 EW4U9 190927P2975]`",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "exchange",
            "description": "Name of the exchange for the product",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "expiration-date",
            "description": "Expiration date",
            "type": "string",
            "format": "date",
            "required": false
          },
          {
            "in": "query",
            "name": "maturity-date",
            "description": "Maturity date",
            "type": "string",
            "format": "date",
            "required": false
          },
          {
            "in": "query",
            "name": "option-root-symbol",
            "description": "Future option root, i.e. EW3 or SO",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "option-type",
            "description": "P(ut) or C(all)",
            "type": "string",
            "enum": [
              "C",
              "P"
            ],
            "required": false
          },
          {
            "in": "query",
            "name": "security-id",
            "description": "Exchange-specific ID used for order routing (example: security-id[]={value1}&security-id[]={value2})",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "strike-price",
            "description": "Strike price using display factor",
            "type": "number",
            "format": "double",
            "required": false
          },
          {
            "in": "query",
            "name": "symbol",
            "description": "The symbol of the future option(s) (example: symbol[]={value1}&symbol[]={value2})",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a set of future option(s) given an array of one or more symbols.\n        Uses TW symbology: `[./ESZ9 EW4U9 190927P2975]`",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FutureOption"
              }
            }
          }
        },
        "tags": [
          "instruments"
        ],
        "operationId": "getInstrumentsFutureOptions"
      }
    },
    "/instruments/future-options/{symbol}": {
      "get": {
        "description": "Returns a future option given a symbol. Uses TW symbology: `./ESZ9 EW4U9 190927P2975`",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "description": "The symbol of the future option",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a future option given a symbol. Uses TW symbology: `./ESZ9 EW4U9 190927P2975`",
            "schema": {
              "$ref": "#/definitions/FutureOption"
            }
          }
        },
        "tags": [
          "instruments"
        ],
        "operationId": "getInstrumentsFutureOptionsSymbol"
      }
    },
    "/instruments/future-products": {
      "get": {
        "description": "Returns metadata for all supported futures products",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns metadata for all supported futures products",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FutureProduct"
              }
            }
          }
        },
        "tags": [
          "instruments"
        ],
        "operationId": "getInstrumentsFutureProducts"
      }
    },
    "/instruments/future-products/{exchange}/{code}": {
      "get": {
        "description": "Get future product from exchange and product code",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "exchange",
            "description": "The exchange code",
            "type": "string",
            "enum": [
              "CBOED",
              "CFE",
              "CME",
              "SMALLS"
            ],
            "required": true
          },
          {
            "in": "path",
            "name": "code",
            "description": "The product code, i.e. `ES`",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get future product from exchange and product code",
            "schema": {
              "$ref": "#/definitions/FutureProduct"
            }
          }
        },
        "tags": [
          "instruments"
        ],
        "operationId": "getInstrumentsFutureProductsExchangeCode"
      }
    },
    "/instruments/quantity-decimal-precisions": {
      "get": {
        "description": "Retrieve all quantity decimal precisions.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Retrieve all quantity decimal precisions.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QuantityDecimalPrecision"
              }
            }
          }
        },
        "tags": [
          "instruments"
        ],
        "operationId": "getInstrumentsQuantityDecimalPrecisions"
      }
    },
    "/instruments/warrants": {
      "get": {
        "description": "Returns a set of warrant definitions that can be filtered by parameters",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "The symbol of the warrant(s), i.e `NKLAW` (example: symbol[]={value1}&symbol[]={value2})",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a set of warrant definitions that can be filtered by parameters",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Warrant"
              }
            }
          }
        },
        "tags": [
          "instruments"
        ],
        "operationId": "getInstrumentsWarrants"
      }
    },
    "/instruments/warrants/{symbol}": {
      "get": {
        "description": "Returns a single warrant definition for the provided symbol",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single warrant definition for the provided symbol",
            "schema": {
              "$ref": "#/definitions/Warrant"
            }
          }
        },
        "tags": [
          "instruments"
        ],
        "operationId": "getInstrumentsWarrantsSymbol"
      }
    },
    "/futures-option-chains/{symbol}": {
      "get": {
        "description": "Returns a futures option chain given a futures product code, i.e. `ES`",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a futures option chain given a futures product code, i.e. `ES`",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FutureOption"
              }
            }
          }
        },
        "tags": [
          "futures-option-chains"
        ],
        "operationId": "getFuturesOptionChainsSymbol"
      }
    },
    "/futures-option-chains/{symbol}/nested": {
      "get": {
        "description": "Returns a futures option chain given a futures product code in a nested form to minimize redundant processing",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a futures option chain given a futures product code in a nested form to minimize redundant processing",
            "schema": {
              "$ref": "#/definitions/FuturesNestedOptionChainSerializer"
            }
          }
        },
        "tags": [
          "futures-option-chains"
        ],
        "operationId": "getFuturesOptionChainsSymbolNested"
      }
    },
    "/option-chains/{symbol}": {
      "get": {
        "description": "Returns an option chain given an underlying symbol, i.e. `AAPL`",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an option chain given an underlying symbol, i.e. `AAPL`",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EquityOption"
              }
            }
          }
        },
        "tags": [
          "option-chains"
        ],
        "operationId": "getOptionChainsSymbol"
      }
    },
    "/option-chains/{symbol}/compact": {
      "get": {
        "description": "Returns an option chain given an underlying symbol, i.e. `AAPL` in a compact form to minimize content size",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an option chain given an underlying symbol, i.e. `AAPL` in a compact form to minimize content size",
            "schema": {
              "$ref": "#/definitions/CompactOptionChainSerializer"
            }
          }
        },
        "tags": [
          "option-chains"
        ],
        "operationId": "getOptionChainsSymbolCompact"
      }
    },
    "/option-chains/{symbol}/nested": {
      "get": {
        "description": "Returns an option chain given an underlying symbol, \\\n          i.e. `AAPL` in a nested form to minimize redundant processing",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an option chain given an underlying symbol, \\\n          i.e. `AAPL` in a nested form to minimize redundant processing",
            "schema": {
              "$ref": "#/definitions/NestedOptionChainSerializer"
            }
          }
        },
        "tags": [
          "option-chains"
        ],
        "operationId": "getOptionChainsSymbolNested"
      }
    },
    "/backtests": {
      "post": {
        "summary": "Create backtest",
        "description": "Create new backtest",
        "operationId": "PostBacktests",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BacktestPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Backtest ready",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BacktestGet"
                }
              }
            }
          },
          "201": {
            "description": "Backtest pending",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BacktestGet"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/backtests/{id}": {
      "get": {
        "summary": "Get backtest",
        "description": "Get backtest by ID",
        "operationId": "GetBacktests",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Backtest details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BacktestGet"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/backtests/{id}/logs": {
      "get": {
        "summary": "Get backtest Logs",
        "description": "Read logs of specified backtest",
        "operationId": "GetBacktestsLogs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Backtest logs"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/backtests/{id}/cancel": {
      "post": {
        "summary": "Cancel backtest",
        "description": "Cancel running backtest",
        "operationId": "CancelBacktests",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Backtest cancelled"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/backtests/const/available-dates": {
      "get": {
        "summary": "Available historical date ranges",
        "description": "Available historical date ranges for every individual symbol",
        "operationId": "GetAvailableDates",
        "responses": {
          "200": {
            "description": "List of available symbols and dates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AvailableSymbolDates"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/market-time/sessions": {
      "get": {
        "description": "Retrieve a list of session timings for a date range",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "from-date",
            "description": "The date to start from",
            "type": "string",
            "format": "date",
            "default": "2025-01-21",
            "required": false
          },
          {
            "in": "query",
            "name": "instrument-collection",
            "description": "The instrument collection to get sessions for",
            "type": "string",
            "default": "Equity",
            "enum": [
              "Equity",
              "CME",
              "CFE",
              "Zero Hash CLOB"
            ],
            "required": false
          },
          {
            "in": "query",
            "name": "to-date",
            "description": "The date to end at, the difference between from and to date must not exceed 9 months",
            "type": "string",
            "format": "date",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve a list of session timings for a date range",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SimpleSessionDeserializer"
              }
            }
          }
        },
        "tags": [
          "market-time"
        ],
        "operationId": "getMarketTimeSessions"
      }
    },
    "/market-time/sessions/current": {
      "get": {
        "description": "Retrieve the current session timings for an instrument collection",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "instrument-collections",
            "description": "List of instrument collections . i.e. `CFE`, `CME`, `Equity` or `Smalls` (example: instrument-collections[]={value1}&instrument-collections[]={value2})",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve the current session timings for an instrument collection",
            "schema": {
              "$ref": "#/definitions/CurrentSessionDeserializer"
            }
          }
        },
        "tags": [
          "market-time"
        ],
        "operationId": "getMarketTimeSessionsCurrent"
      }
    },
    "/market-time/equities/sessions/current": {
      "get": {
        "description": "Get current equities session",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "current-time",
            "description": "The time the current session is based on",
            "type": "string",
            "format": "date-time",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Get current equities session",
            "schema": {
              "$ref": "#/definitions/CurrentSession"
            }
          }
        },
        "tags": [
          "market-time"
        ],
        "operationId": "getMarketTimeEquitiesSessionsCurrent"
      }
    },
    "/market-time/equities/sessions/next": {
      "get": {
        "description": "Get next equities session or session after date",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Find session on or after this date",
            "type": "string",
            "format": "date",
            "default": "2025-01-21",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Get next equities session or session after date",
            "schema": {
              "$ref": "#/definitions/NextSession"
            }
          }
        },
        "tags": [
          "market-time"
        ],
        "operationId": "getMarketTimeEquitiesSessionsNext"
      }
    },
    "/market-time/equities/sessions/previous": {
      "get": {
        "description": "Get previous session or session before date",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Find session before this date",
            "type": "string",
            "format": "date",
            "default": "2025-01-21",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Get previous session or session before date",
            "schema": {
              "$ref": "#/definitions/PreviousSession"
            }
          }
        },
        "tags": [
          "market-time"
        ],
        "operationId": "getMarketTimeEquitiesSessionsPrevious"
      }
    },
    "/market-time/equities/holidays": {
      "get": {
        "description": "Get equity holidays",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Get equity holidays",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MarketCalendarDeserializer"
              }
            }
          }
        },
        "tags": [
          "market-time"
        ],
        "operationId": "getMarketTimeEquitiesHolidays"
      }
    },
    "/market-time/futures/sessions/current": {
      "get": {
        "description": "Get current futures sessions",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Get current futures sessions",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CurrentSession"
              }
            }
          }
        },
        "tags": [
          "market-time"
        ],
        "operationId": "getMarketTimeFuturesSessionsCurrent"
      }
    },
    "/market-time/futures/sessions/current/{instrument_collection}": {
      "get": {
        "description": "Get current futures session for exchange",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instrument_collection",
            "description": "Futures exchange, one of: CFE, CME, Smalls",
            "type": "string",
            "enum": [
              "CFE",
              "CME",
              "Smalls"
            ],
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get current futures session for exchange",
            "schema": {
              "$ref": "#/definitions/CurrentSession"
            }
          }
        },
        "tags": [
          "market-time"
        ],
        "operationId": "getMarketTimeFuturesSessionsCurrentInstrumentCollection"
      }
    },
    "/market-time/futures/sessions/next/{instrument_collection}": {
      "get": {
        "description": "Get next futures session for exchange",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instrument_collection",
            "description": "Futures exchange, one of: CFE, CME, Smalls",
            "type": "string",
            "enum": [
              "CFE",
              "CME",
              "Smalls"
            ],
            "required": true
          },
          {
            "in": "query",
            "name": "date",
            "description": "Find session on or after this date",
            "type": "string",
            "format": "date",
            "default": "2025-01-21",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Get next futures session for exchange",
            "schema": {
              "$ref": "#/definitions/NextSession"
            }
          }
        },
        "tags": [
          "market-time"
        ],
        "operationId": "getMarketTimeFuturesSessionsNextInstrumentCollection"
      }
    },
    "/market-time/futures/sessions/previous/{instrument_collection}": {
      "get": {
        "description": "Get previous futures sessions for exchange",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instrument_collection",
            "description": "Futures exchange, one of: CFE, CME, Smalls",
            "type": "string",
            "enum": [
              "CFE",
              "CME",
              "Smalls"
            ],
            "required": true
          },
          {
            "in": "query",
            "name": "date",
            "description": "Find session before this date",
            "type": "string",
            "format": "date",
            "default": "2025-01-21",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Get previous futures sessions for exchange",
            "schema": {
              "$ref": "#/definitions/PreviousSession"
            }
          }
        },
        "tags": [
          "market-time"
        ],
        "operationId": "getMarketTimeFuturesSessionsPreviousInstrumentCollection"
      }
    },
    "/market-time/futures/holidays/{instrument_collection}": {
      "get": {
        "description": "Get future holidays for exchange",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instrument_collection",
            "description": "Futures exchange, one of: CFE, CME, Smalls",
            "type": "string",
            "enum": [
              "CFE",
              "CME",
              "Smalls"
            ],
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get future holidays for exchange",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MarketCalendarDeserializer"
              }
            }
          }
        },
        "tags": [
          "market-time"
        ],
        "operationId": "getMarketTimeFuturesHolidaysInstrumentCollection"
      }
    },
    "/accounts/{account_number}/transactions": {
      "get": {
        "description": "Returns a paginated list of the account's transactions (as identified by the provided authentication token)\n            based on sort param. If no sort is passed in, it defaults to descending order.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_number",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "page-offset",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          },
          {
            "in": "query",
            "name": "per-page",
            "type": "integer",
            "format": "int32",
            "default": 250,
            "minimum": 1,
            "maximum": 2000,
            "required": false
          },
          {
            "in": "query",
            "name": "currency",
            "description": "Currency",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "description": "The order to sort results in. Defaults to Desc, Accepts `Desc` or `Asc`.",
            "type": "string",
            "default": "Desc",
            "enum": [
              "Desc",
              "Asc"
            ],
            "required": false
          },
          {
            "in": "query",
            "name": "sub-type",
            "description": "Filter based on transaction_sub_type (example: sub-type[]={value1}&sub-type[]={value2})",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "type",
            "description": "Filter based on transaction_type",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "types",
            "description": "Allows filtering on multiple transaction_types (example: types[]={value1}&types[]={value2})",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "action",
            "description": "The action of the transaction. i.e. `Allocate`, `Buy`, `Buy to Close`, `Buy to Open`, `Sell`, `Sell to Close` or `Sell to Open`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "end-date",
            "description": "The end date of transactions to query. Defaults to now.",
            "type": "string",
            "format": "date",
            "default": {},
            "required": false
          },
          {
            "in": "query",
            "name": "futures-symbol",
            "description": "The full TW Future Symbol `/ESZ9` or \\\n                                          `/NGZ19` if two year digit are appropriate",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "instrument-type",
            "description": "The type of Instrument. i.e. `Bond`, `Cryptocurrency`, `Currency Pair`, `Equity`, `Equity Offering`, `Equity Option`, `Fixed Income Security`, `Future`, `Future Option`, `Index`, `Liquidity Pool`, `Unknown` or `Warrant`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "partition-key",
            "description": "Account partition key",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "start-date",
            "description": "The start date of transactions to query.",
            "type": "string",
            "format": "date",
            "required": false
          },
          {
            "in": "query",
            "name": "symbol",
            "description": "The Stock Ticker Symbol `AAPL`, OCC Option Symbol `AAPL  191004P00275000`, \\\n                                                 TW Future Symbol `/ESZ9`, or TW Future Option Symbol `./ESZ9 EW4U9 190927P2975`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "underlying-symbol",
            "description": "The Underlying Symbol. The Ticker Symbol `FB` or \\\n                                                              TW Future Symbol with out date component `/M6E` or\n                                                              the full TW Future Symbol `/ESU9`",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "end-at",
            "description": "DateTime end range for filtering transactions in full date-time",
            "type": "string",
            "format": "date-time",
            "required": false
          },
          {
            "in": "query",
            "name": "start-at",
            "description": "DateTime start range for filtering transactions in full date-time",
            "type": "string",
            "format": "date-time",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated list of the account's transactions (as identified by the provided authentication token)\n            based on sort param. If no sort is passed in, it defaults to descending order.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Transaction"
              }
            }
          }
        },
        "tags": [
          "transactions"
        ],
        "operationId": "getAccountsAccountNumberTransactions"
      }
    },
    "/accounts/{account_number}/transactions/total-fees": {
      "get": {
        "description": "Return the total fees for an account for a given day",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_number",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "date",
            "description": "The date to get fees for, defaults to today",
            "type": "string",
            "format": "date",
            "default": {},
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Return the total fees for an account for a given day"
          }
        },
        "tags": [
          "accounts"
        ],
        "operationId": "getAccountsAccountNumberTransactionsTotalFees"
      }
    },
    "/accounts/{account_number}/transactions/{id}": {
      "get": {
        "description": "Retrieve a transaction by account number and ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_number",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve a transaction by account number and ID",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        },
        "tags": [
          "accounts"
        ],
        "operationId": "getAccountsAccountNumberTransactionsId"
      }
    }
  },
  "definitions": {
    "DividendInfo": {
      "type": "object",
      "properties": {
        "occurred-date": {
          "description": "Date of dividend",
          "type": "string",
          "format": "date"
        },
        "amount": {
          "description": "Per share amount",
          "type": "number",
          "format": "float"
        }
      }
    },
    "EarningsInfo": {
      "type": "object",
      "properties": {
        "occurred-date": {
          "description": "Date of earnings announcement",
          "type": "string",
          "format": "date"
        },
        "eps": {
          "description": "Earnings per share amount",
          "type": "number",
          "format": "float"
        }
      }
    },
    "MarketMetricInfo": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Symbol",
          "type": "string"
        },
        "implied-volatility-index": {
          "description": "IV Index of underlying",
          "type": "number",
          "format": "float"
        },
        "implied-volatility-index-5-day-change": {
          "description": "5 day change of IV index of underlying",
          "type": "number",
          "format": "float"
        },
        "implied-volatility-rank": {
          "description": "IV Rank of underlying",
          "type": "number",
          "format": "float"
        },
        "implied-volatility-percentile": {
          "description": "IV percentile of underlying",
          "type": "number",
          "format": "float"
        },
        "liquidity": {
          "description": "liquidity of underlying",
          "type": "number",
          "format": "float"
        },
        "liquidity-rank": {
          "description": "liquidity rank of underlying",
          "type": "number",
          "format": "float"
        },
        "liquidity-rating": {
          "description": "liquidity rating of underlying",
          "type": "number",
          "format": "int32"
        },
        "option-expiration-implied-volatilities": {
          "description": "List of option volatility data",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "expiration-date": {
                "description": "Option expiration date",
                "type": "string",
                "format": "date-time"
              },
              "settlement-type": {
                "description": "AM or PM settlement",
                "type": "string"
              },
              "option-chain-type": {
                "description": "Option chain type i.e. Standard or Non-standard.",
                "type": "string"
              },
              "implied-volatility": {
                "description": "Implied volatility of option expiration",
                "type": "number",
                "format": "double"
              }
            }
          }
        }
      },
      "description": "Includes underlying volatility and liquidity data as well as option volatility data."
    },
    "MarginRequirement": {
      "type": "object",
      "properties": {
        "underlying-symbol": {
          "description": "",
          "type": "string"
        },
        "long-equity-initial": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "short-equity-initial": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "long-equity-maintenance": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "short-equity-maintenance": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "naked-option-standard": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "naked-option-minimum": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "naked-option-floor": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "clearing-identifier": {
          "description": "",
          "type": "string"
        },
        "is-deleted": {
          "description": "",
          "type": "boolean"
        }
      },
      "description": "MarginRequirement model"
    },
    "PositionLimit": {
      "type": "object",
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "account-number": {
          "description": "",
          "type": "string"
        },
        "equity-order-size": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "equity-option-order-size": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "future-order-size": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "future-option-order-size": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "underlying-opening-order-limit": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "equity-position-size": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "equity-option-position-size": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "future-position-size": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "future-option-position-size": {
          "description": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "PositionLimit model"
    },
    "MarginRequirementsGlobalConfiguration": {
      "type": "object",
      "properties": {
        "risk-free-rate": {
          "description": "",
          "type": "number",
          "format": "double"
        }
      },
      "description": "MarginRequirementsGlobalConfiguration model"
    },
    "Instrument": {
      "type": "object",
      "properties": {
        "symbol": {
          "type": "string"
        },
        "instrumentType": {
          "type": "string",
          "enum": [
            "Bond",
            "Cryptocurrency",
            "Equity",
            "Equity Offering",
            "Equity Option",
            "Fixed Income Security",
            "Future",
            "Future Option",
            "Index",
            "Liquidity Pool",
            "Mutual Fund",
            "Unknown"
          ]
        },
        "instrumentKey": {
          "$ref": "#/components/schemas/InstrumentKey"
        },
        "underlyingInstrument": {
          "$ref": "#/components/schemas/Instrument"
        },
        "rootSymbol": {
          "type": "string"
        },
        "exchange": {
          "type": "string",
          "enum": [
            "EQUITY",
            "SMALLS",
            "CME",
            "CFE",
            "CBOED",
            "BOND",
            "CRYPTOCURRENCY",
            "EQUITY_OFFERING",
            "UNKNOWN"
          ]
        }
      }
    },
    "InstrumentKey": {
      "type": "object",
      "properties": {
        "symbol": {
          "type": "string"
        },
        "instrumentType": {
          "type": "string",
          "enum": [
            "Bond",
            "Cryptocurrency",
            "Equity",
            "Equity Offering",
            "Equity Option",
            "Fixed Income Security",
            "Future",
            "Future Option",
            "Index",
            "Liquidity Pool",
            "Mutual Fund",
            "Unknown"
          ]
        }
      }
    },
    "MarketData": {
      "type": "object",
      "properties": {
        "symbol": {
          "type": "string"
        },
        "instrumentType": {
          "type": "string",
          "enum": [
            "Bond",
            "Cryptocurrency",
            "Equity",
            "Equity Offering",
            "Equity Option",
            "Fixed Income Security",
            "Future",
            "Future Option",
            "Index",
            "Liquidity Pool",
            "Mutual Fund",
            "Unknown"
          ]
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "bid": {
          "type": "number",
          "format": "double"
        },
        "bidSize": {
          "type": "number",
          "format": "double"
        },
        "ask": {
          "type": "number",
          "format": "double"
        },
        "askSize": {
          "type": "number",
          "format": "double"
        },
        "mid": {
          "type": "number",
          "format": "double"
        },
        "mark": {
          "type": "number",
          "format": "double"
        },
        "last": {
          "type": "number",
          "format": "double"
        },
        "lastExt": {
          "type": "number",
          "format": "double"
        },
        "lastMkt": {
          "type": "number",
          "format": "double"
        },
        "beta": {
          "type": "number",
          "format": "double"
        },
        "dividendAmount": {
          "type": "number",
          "format": "double"
        },
        "dividendFrequency": {
          "type": "number",
          "format": "double"
        },
        "open": {
          "type": "number",
          "format": "double"
        },
        "dayHighPrice": {
          "type": "number",
          "format": "double"
        },
        "dayLowPrice": {
          "type": "number",
          "format": "double"
        },
        "close": {
          "type": "number",
          "format": "double"
        },
        "closePriceType": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "REGULAR",
            "INDICATIVE",
            "PRELIMINARY",
            "FINAL"
          ]
        },
        "prevClose": {
          "type": "number",
          "format": "double"
        },
        "prevClosePriceType": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "REGULAR",
            "INDICATIVE",
            "PRELIMINARY",
            "FINAL"
          ]
        },
        "summaryDate": {
          "type": "string",
          "format": "date"
        },
        "prevCloseDate": {
          "type": "string",
          "format": "date"
        },
        "lowLimitPrice": {
          "type": "number",
          "format": "double"
        },
        "highLimitPrice": {
          "type": "number",
          "format": "double"
        },
        "tradingHaltedReason": {
          "type": "string"
        },
        "haltStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "haltEndTime": {
          "type": "integer",
          "format": "int64"
        },
        "yearLowPrice": {
          "type": "number",
          "format": "double"
        },
        "yearHighPrice": {
          "type": "number",
          "format": "double"
        },
        "volume": {
          "type": "number",
          "format": "double"
        },
        "tradingHalted": {
          "type": "boolean"
        },
        "lastTradeTime": {
          "type": "integer",
          "format": "int64"
        },
        "dayOpen": {
          "type": "number",
          "format": "double",
          "deprecated": true
        },
        "dayHigh": {
          "type": "number",
          "format": "double",
          "deprecated": true
        },
        "dayLow": {
          "type": "number",
          "format": "double",
          "deprecated": true
        },
        "dayClose": {
          "type": "number",
          "format": "double",
          "deprecated": true
        },
        "prevDayClose": {
          "type": "number",
          "format": "double",
          "deprecated": true
        },
        "instrument": {
          "$ref": "#/components/schemas/Instrument"
        }
      }
    },
    "TradingStatus": {
      "type": "object",
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "account-number": {
          "description": "",
          "type": "string"
        },
        "are-deep-itm-carry-options-enabled": {
          "description": "",
          "type": "boolean"
        },
        "are-far-otm-net-options-restricted": {
          "description": "",
          "type": "boolean"
        },
        "are-options-values-restricted-to-nlv": {
          "description": "",
          "type": "boolean"
        },
        "are-single-tick-expiring-hedges-ignored": {
          "description": "",
          "type": "boolean"
        },
        "autotrade-account-type": {
          "description": "",
          "type": "string"
        },
        "clearing-account-number": {
          "description": "",
          "type": "string"
        },
        "clearing-aggregation-identifier": {
          "description": "",
          "type": "string"
        },
        "cmta-override": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "day-trade-count": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "enhanced-fraud-safeguards-enabled-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "equities-margin-calculation-type": {
          "description": "",
          "type": "string"
        },
        "ext-crm-id": {
          "description": "",
          "type": "string"
        },
        "fee-schedule-name": {
          "description": "",
          "type": "string"
        },
        "futures-margin-rate-multiplier": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "has-intraday-equities-margin": {
          "description": "",
          "type": "boolean"
        },
        "is-aggregated-at-clearing": {
          "description": "",
          "type": "boolean"
        },
        "is-closed": {
          "description": "",
          "type": "boolean"
        },
        "is-closing-only": {
          "description": "",
          "type": "boolean"
        },
        "is-cryptocurrency-closing-only": {
          "description": "",
          "type": "boolean"
        },
        "is-cryptocurrency-enabled": {
          "description": "",
          "type": "boolean"
        },
        "is-equity-offering-closing-only": {
          "description": "",
          "type": "boolean"
        },
        "is-equity-offering-enabled": {
          "description": "",
          "type": "boolean"
        },
        "is-frozen": {
          "description": "",
          "type": "boolean"
        },
        "is-full-equity-margin-required": {
          "description": "",
          "type": "boolean"
        },
        "is-futures-closing-only": {
          "description": "",
          "type": "boolean"
        },
        "is-futures-enabled": {
          "description": "",
          "type": "boolean"
        },
        "is-futures-intra-day-enabled": {
          "description": "",
          "type": "boolean"
        },
        "is-in-day-trade-equity-maintenance-call": {
          "description": "",
          "type": "boolean"
        },
        "is-in-margin-call": {
          "description": "",
          "type": "boolean"
        },
        "is-pattern-day-trader": {
          "description": "",
          "type": "boolean"
        },
        "is-portfolio-margin-enabled": {
          "description": "",
          "type": "boolean"
        },
        "is-risk-reducing-only": {
          "description": "",
          "type": "boolean"
        },
        "is-roll-the-day-forward-enabled": {
          "description": "",
          "type": "boolean"
        },
        "is-small-notional-futures-intra-day-enabled": {
          "description": "",
          "type": "boolean"
        },
        "options-level": {
          "description": "",
          "type": "string"
        },
        "pdt-reset-on": {
          "description": "",
          "type": "string",
          "format": "date"
        },
        "short-calls-enabled": {
          "description": "",
          "type": "boolean"
        },
        "small-notional-futures-margin-rate-multiplier": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "updated-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "TradingStatus model"
    },
    "ComplexOrder": {
      "type": "object",
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "account-number": {
          "description": "",
          "type": "string"
        },
        "ratio-price-comparator": {
          "description": "",
          "type": "string"
        },
        "ratio-price-is-threshold-based-on-notional": {
          "description": "",
          "type": "boolean"
        },
        "ratio-price-threshold": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "terminal-at": {
          "description": "",
          "type": "string"
        },
        "type": {
          "description": "",
          "type": "string"
        },
        "related-orders": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "description": "",
                "type": "string"
              },
              "complex-order-id": {
                "description": "",
                "type": "string"
              },
              "complex-order-tag": {
                "description": "",
                "type": "string"
              },
              "replaces-order-id": {
                "description": "",
                "type": "string"
              },
              "replacing-order-id": {
                "description": "",
                "type": "string"
              },
              "status": {
                "description": "",
                "type": "string"
              }
            },
            "description": "Non-current orders. This includes replaced orders, unfilled orders, and terminal orders."
          }
        },
        "orders": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "description": "",
                "type": "string"
              },
              "account-number": {
                "description": "",
                "type": "string"
              },
              "cancel-user-id": {
                "description": "",
                "type": "string"
              },
              "cancel-username": {
                "description": "",
                "type": "string"
              },
              "cancellable": {
                "description": "",
                "type": "boolean"
              },
              "cancelled-at": {
                "description": "",
                "type": "string",
                "format": "date-time"
              },
              "complex-order-id": {
                "description": "",
                "type": "string"
              },
              "complex-order-tag": {
                "description": "",
                "type": "string"
              },
              "confirmation-status": {
                "description": "",
                "type": "string"
              },
              "contingent-status": {
                "description": "",
                "type": "string"
              },
              "editable": {
                "description": "",
                "type": "boolean"
              },
              "edited": {
                "description": "",
                "type": "boolean"
              },
              "external-identifier": {
                "description": "",
                "type": "string"
              },
              "global-request-id": {
                "description": "",
                "type": "string"
              },
              "gtc-date": {
                "description": "",
                "type": "string",
                "format": "date"
              },
              "in-flight-at": {
                "description": "",
                "type": "string",
                "format": "date-time"
              },
              "liquidity-pool-instrument-type": {
                "description": "",
                "type": "string"
              },
              "live-at": {
                "description": "",
                "type": "string",
                "format": "date-time"
              },
              "max-value-per-liquidity-allocation-fill": {
                "description": "",
                "type": "string"
              },
              "order-type": {
                "description": "",
                "type": "string"
              },
              "preflight-id": {
                "description": "",
                "type": "string"
              },
              "price": {
                "description": "",
                "type": "number",
                "format": "double"
              },
              "price-effect": {
                "description": "",
                "type": "string"
              },
              "received-at": {
                "description": "",
                "type": "string",
                "format": "date-time"
              },
              "reject-reason": {
                "description": "",
                "type": "string"
              },
              "replaces-order-id": {
                "description": "",
                "type": "string"
              },
              "replacing-order-id": {
                "description": "",
                "type": "string"
              },
              "size": {
                "description": "",
                "type": "string"
              },
              "source": {
                "description": "",
                "type": "string"
              },
              "status": {
                "description": "",
                "type": "string"
              },
              "stop-trigger": {
                "description": "",
                "type": "string"
              },
              "terminal-at": {
                "description": "",
                "type": "string",
                "format": "date-time"
              },
              "time-in-force": {
                "description": "",
                "type": "string"
              },
              "underlying-instrument-type": {
                "description": "",
                "type": "string"
              },
              "underlying-symbol": {
                "description": "",
                "type": "string"
              },
              "updated-at": {
                "description": "",
                "type": "string"
              },
              "user-id": {
                "description": "",
                "type": "string"
              },
              "username": {
                "description": "",
                "type": "string"
              },
              "value": {
                "description": "",
                "type": "number",
                "format": "double"
              },
              "value-effect": {
                "description": "",
                "type": "string"
              },
              "legs": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "description": "",
                      "type": "string"
                    },
                    "instrument-type": {
                      "description": "",
                      "type": "string"
                    },
                    "quantity": {
                      "description": "",
                      "type": "string"
                    },
                    "remaining-quantity": {
                      "description": "",
                      "type": "string"
                    },
                    "symbol": {
                      "description": "",
                      "type": "string"
                    },
                    "fills": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "destination-venue": {
                            "description": "",
                            "type": "string"
                          },
                          "ext-exec-id": {
                            "description": "",
                            "type": "string"
                          },
                          "ext-group-fill-id": {
                            "description": "",
                            "type": "string"
                          },
                          "fill-id": {
                            "description": "",
                            "type": "string"
                          },
                          "fill-price": {
                            "description": "",
                            "type": "number",
                            "format": "double"
                          },
                          "filled-at": {
                            "description": "",
                            "type": "string",
                            "format": "date-time"
                          },
                          "quantity": {
                            "description": "",
                            "type": "string"
                          }
                        },
                        "description": ""
                      }
                    }
                  },
                  "description": ""
                }
              },
              "order-rule": {
                "type": "object",
                "properties": {
                  "cancel-at": {
                    "description": "",
                    "type": "string",
                    "format": "date-time"
                  },
                  "cancelled-at": {
                    "description": "",
                    "type": "string",
                    "format": "date-time"
                  },
                  "route-after": {
                    "description": "",
                    "type": "string",
                    "format": "date-time"
                  },
                  "routed-at": {
                    "description": "",
                    "type": "string",
                    "format": "date-time"
                  },
                  "order-conditions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "",
                          "type": "string"
                        },
                        "action": {
                          "description": "",
                          "type": "string"
                        },
                        "comparator": {
                          "description": "",
                          "type": "string"
                        },
                        "indicator": {
                          "description": "",
                          "type": "string"
                        },
                        "instrument-type": {
                          "description": "",
                          "type": "string"
                        },
                        "is-threshold-based-on-notional": {
                          "description": "",
                          "type": "boolean"
                        },
                        "symbol": {
                          "description": "",
                          "type": "string"
                        },
                        "threshold": {
                          "description": "",
                          "type": "number",
                          "format": "double"
                        },
                        "triggered-at": {
                          "description": "",
                          "type": "string",
                          "format": "date-time"
                        },
                        "triggered-value": {
                          "description": "",
                          "type": "number",
                          "format": "double"
                        },
                        "price-components": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "instrument-type": {
                                "description": "",
                                "type": "string"
                              },
                              "quantity": {
                                "description": "",
                                "type": "string"
                              },
                              "quantity-direction": {
                                "description": "",
                                "type": "string"
                              },
                              "symbol": {
                                "description": "",
                                "type": "string"
                              }
                            },
                            "description": ""
                          }
                        }
                      },
                      "description": ""
                    }
                  }
                },
                "description": ""
              }
            },
            "description": "Orders with complex-order-tag: '<type>::order'. For example, 'OTO::order' for OTO complex orders."
          }
        },
        "trigger-order": {
          "type": "object",
          "properties": {
            "id": {
              "description": "",
              "type": "string"
            },
            "account-number": {
              "description": "",
              "type": "string"
            },
            "cancel-user-id": {
              "description": "",
              "type": "string"
            },
            "cancel-username": {
              "description": "",
              "type": "string"
            },
            "cancellable": {
              "description": "",
              "type": "boolean"
            },
            "cancelled-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "complex-order-id": {
              "description": "",
              "type": "string"
            },
            "complex-order-tag": {
              "description": "",
              "type": "string"
            },
            "confirmation-status": {
              "description": "",
              "type": "string"
            },
            "contingent-status": {
              "description": "",
              "type": "string"
            },
            "editable": {
              "description": "",
              "type": "boolean"
            },
            "edited": {
              "description": "",
              "type": "boolean"
            },
            "external-identifier": {
              "description": "",
              "type": "string"
            },
            "global-request-id": {
              "description": "",
              "type": "string"
            },
            "gtc-date": {
              "description": "",
              "type": "string",
              "format": "date"
            },
            "in-flight-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "liquidity-pool-instrument-type": {
              "description": "",
              "type": "string"
            },
            "live-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "max-value-per-liquidity-allocation-fill": {
              "description": "",
              "type": "string"
            },
            "order-type": {
              "description": "",
              "type": "string"
            },
            "preflight-id": {
              "description": "",
              "type": "string"
            },
            "price": {
              "description": "",
              "type": "number",
              "format": "double"
            },
            "price-effect": {
              "description": "",
              "type": "string"
            },
            "received-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "reject-reason": {
              "description": "",
              "type": "string"
            },
            "replaces-order-id": {
              "description": "",
              "type": "string"
            },
            "replacing-order-id": {
              "description": "",
              "type": "string"
            },
            "size": {
              "description": "",
              "type": "string"
            },
            "source": {
              "description": "",
              "type": "string"
            },
            "status": {
              "description": "",
              "type": "string"
            },
            "stop-trigger": {
              "description": "",
              "type": "string"
            },
            "terminal-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "time-in-force": {
              "description": "",
              "type": "string"
            },
            "underlying-instrument-type": {
              "description": "",
              "type": "string"
            },
            "underlying-symbol": {
              "description": "",
              "type": "string"
            },
            "updated-at": {
              "description": "",
              "type": "string"
            },
            "user-id": {
              "description": "",
              "type": "string"
            },
            "username": {
              "description": "",
              "type": "string"
            },
            "value": {
              "description": "",
              "type": "number",
              "format": "double"
            },
            "value-effect": {
              "description": "",
              "type": "string"
            },
            "legs": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "action": {
                    "description": "",
                    "type": "string"
                  },
                  "instrument-type": {
                    "description": "",
                    "type": "string"
                  },
                  "quantity": {
                    "description": "",
                    "type": "string"
                  },
                  "remaining-quantity": {
                    "description": "",
                    "type": "string"
                  },
                  "symbol": {
                    "description": "",
                    "type": "string"
                  },
                  "fills": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "destination-venue": {
                          "description": "",
                          "type": "string"
                        },
                        "ext-exec-id": {
                          "description": "",
                          "type": "string"
                        },
                        "ext-group-fill-id": {
                          "description": "",
                          "type": "string"
                        },
                        "fill-id": {
                          "description": "",
                          "type": "string"
                        },
                        "fill-price": {
                          "description": "",
                          "type": "number",
                          "format": "double"
                        },
                        "filled-at": {
                          "description": "",
                          "type": "string",
                          "format": "date-time"
                        },
                        "quantity": {
                          "description": "",
                          "type": "string"
                        }
                      },
                      "description": ""
                    }
                  }
                },
                "description": ""
              }
            },
            "order-rule": {
              "type": "object",
              "properties": {
                "cancel-at": {
                  "description": "",
                  "type": "string",
                  "format": "date-time"
                },
                "cancelled-at": {
                  "description": "",
                  "type": "string",
                  "format": "date-time"
                },
                "route-after": {
                  "description": "",
                  "type": "string",
                  "format": "date-time"
                },
                "routed-at": {
                  "description": "",
                  "type": "string",
                  "format": "date-time"
                },
                "order-conditions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "",
                        "type": "string"
                      },
                      "action": {
                        "description": "",
                        "type": "string"
                      },
                      "comparator": {
                        "description": "",
                        "type": "string"
                      },
                      "indicator": {
                        "description": "",
                        "type": "string"
                      },
                      "instrument-type": {
                        "description": "",
                        "type": "string"
                      },
                      "is-threshold-based-on-notional": {
                        "description": "",
                        "type": "boolean"
                      },
                      "symbol": {
                        "description": "",
                        "type": "string"
                      },
                      "threshold": {
                        "description": "",
                        "type": "number",
                        "format": "double"
                      },
                      "triggered-at": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                      },
                      "triggered-value": {
                        "description": "",
                        "type": "number",
                        "format": "double"
                      },
                      "price-components": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "instrument-type": {
                              "description": "",
                              "type": "string"
                            },
                            "quantity": {
                              "description": "",
                              "type": "string"
                            },
                            "quantity-direction": {
                              "description": "",
                              "type": "string"
                            },
                            "symbol": {
                              "description": "",
                              "type": "string"
                            }
                          },
                          "description": ""
                        }
                      }
                    },
                    "description": ""
                  }
                }
              },
              "description": ""
            }
          },
          "description": "Order with complex-order-tag: '<type>::trigger-order'. For example, 'OTO::trigger-order for OTO complex orders."
        }
      },
      "description": "ComplexOrder model"
    },
    "postAccountsAccountNumberComplexOrders": {
      "type": "object",
      "properties": {
        "orders": {
          "type": "array",
          "description": "Array of orders for OCO/BLAST orders",
          "items": {
            "type": "object",
            "properties": {
              "gtc-date": {
                "type": "string",
                "format": "date",
                "description": "The date in which a GTD order will expire. Can only be provided if time-in-force is GTD."
              },
              "order-type": {
                "type": "string",
                "description": "The type of order in regards to the price. i.e.\n                                    `Limit`, `Liquidity Allocation`, `Market`, `Marketable Limit`, `Notional Market`, `Stop` or `Stop Limit`",
                "enum": [
                  "Limit",
                  "Liquidity Allocation",
                  "Market",
                  "Marketable Limit",
                  "Notional Market",
                  "Stop",
                  "Stop Limit"
                ]
              },
              "time-in-force": {
                "type": "string",
                "description": "The length in time before the order expires. i.e.\n                                       `Day`, `Ext`, `GTC`, `GTC Ext`, `GTD` or `IOC`",
                "enum": [
                  "Day",
                  "Ext",
                  "GTC",
                  "GTC Ext",
                  "GTD",
                  "IOC"
                ]
              },
              "stop-trigger": {
                "type": "number",
                "format": "double",
                "description": "The price trigger at which a stop or stop-limit order becomes valid."
              },
              "price": {
                "type": "number",
                "format": "double",
                "description": "The price of the Order. Required for limit and stop-limit orders."
              },
              "price-effect": {
                "type": "string",
                "description": "If pay or receive payment for placing the order. i.e. `Credit` or `Debit`",
                "enum": [
                  "Credit",
                  "Debit"
                ]
              },
              "value": {
                "type": "number",
                "format": "double",
                "description": "The notional value of the Order, required for notional market orders."
              },
              "value-effect": {
                "type": "string",
                "description": "If pay or receive payment for placing the notional market order. i.e. `Credit` or `Debit`",
                "enum": [
                  "Credit",
                  "Debit"
                ]
              },
              "automated-source": {
                "type": "boolean",
                "description": "If the order was placed from an automated source",
                "default": false
              },
              "external-identifier": {
                "type": "string",
                "description": "External identifier for the order"
              },
              "max-value-per-liquidity-allocation-fill": {
                "type": "number",
                "format": "double",
                "description": "Max value per liquidity allocation fill"
              },
              "partition-key": {
                "type": "string",
                "description": "Account partition key"
              },
              "preflight-id": {
                "type": "string",
                "description": "Transient order identifier used for matching preflight errors to an individual order"
              },
              "source": {
                "type": "string",
                "description": "The source the order is coming from"
              },
              "legs": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string",
                      "description": "The directional action of the leg. i.e.\n                                  `Allocate`, `Buy`, `Buy to Close`, `Buy to Open`, `Sell`, `Sell to Close` or `Sell to Open`.\n                                  Note: `Buy` and `Sell` are only applicable to Futures orders.",
                      "enum": [
                        "Allocate",
                        "Buy",
                        "Buy to Close",
                        "Buy to Open",
                        "Sell",
                        "Sell to Close",
                        "Sell to Open"
                      ]
                    },
                    "instrument-type": {
                      "type": "string",
                      "description": "The type of Instrument. i.e.\n                                           `Cryptocurrency`, `Equity`, `Equity Offering`, `Equity Option`, `Fixed Income Security`, `Future`, `Future Option` or `Liquidity Pool`",
                      "enum": [
                        "Cryptocurrency",
                        "Equity",
                        "Equity Offering",
                        "Equity Option",
                        "Fixed Income Security",
                        "Future",
                        "Future Option",
                        "Liquidity Pool"
                      ]
                    },
                    "quantity": {
                      "type": "number",
                      "format": "double",
                      "description": "The size of the contract. Required for all orders but notional market."
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The Stock Ticker Symbol `AAPL`, OCC Option Symbol `AAPL  191004P00275000`, \\\n                                    TW Future Symbol `/ESZ9`, or TW Future Option Symbol `./ESZ9 EW4U9 190927P2975`"
                    }
                  },
                  "required": [
                    "action",
                    "instrument-type",
                    "symbol"
                  ]
                }
              },
              "rules": {
                "type": "object",
                "properties": {
                  "cancel-at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Latest time an order should be canceled at"
                  },
                  "conditions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "type": "string",
                          "description": "The action in which the trigger is enacted. i.e.\n                                    `cancel` and `route`",
                          "enum": [
                            "cancel",
                            "route"
                          ]
                        },
                        "instrument-type": {
                          "type": "string",
                          "description": "The instrument's type in relation to the condition. i.e. \\\n                                              `Equity` or `Future`",
                          "enum": [
                            "Equity",
                            "Future"
                          ]
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The symbol to apply the condition to. \\\n                                      i.e. Stock Ticker Symbol `AAPL` or the TW Future Symbol `/ESZ9`"
                        },
                        "comparator": {
                          "type": "string",
                          "description": "How to compare against the threshold. \\\n                                        Currently Supports `gte` (Greater than or Equal To) or `lte` (Less than or Equal to)",
                          "enum": [
                            "gte",
                            "lte"
                          ]
                        },
                        "indicator": {
                          "type": "string",
                          "description": "The indicator for the trigger, currently only supports `last`",
                          "enum": [
                            "last",
                            "nat"
                          ]
                        },
                        "threshold": {
                          "type": "number",
                          "format": "double",
                          "description": "The price at which the condition triggers."
                        },
                        "price-components": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "instrument-type": {
                                "type": "string",
                                "description": "The instrument's type in relation to the symbol.",
                                "enum": [
                                  "Bond",
                                  "Cryptocurrency",
                                  "Currency Pair",
                                  "Equity",
                                  "Equity Offering",
                                  "Equity Option",
                                  "Fixed Income Security",
                                  "Future",
                                  "Future Option",
                                  "Index",
                                  "Liquidity Pool",
                                  "Unknown",
                                  "Warrant"
                                ]
                              },
                              "quantity": {
                                "type": "number",
                                "format": "double",
                                "description": "The Ratio quantity in relation to the symbol"
                              },
                              "quantity-direction": {
                                "type": "string",
                                "description": "The quantity direction(ie Long or Short) in relation to the symbol",
                                "enum": [
                                  "Long",
                                  "Short"
                                ]
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The symbol to apply the condition to. \\\n                                      i.e. Stock Ticker Symbol `AAPL` or the TW Future Symbol `/ESZ9`"
                              }
                            },
                            "required": [
                              "instrument-type",
                              "quantity",
                              "quantity-direction",
                              "symbol"
                            ]
                          }
                        }
                      },
                      "required": [
                        "action",
                        "comparator",
                        "indicator",
                        "threshold"
                      ]
                    }
                  },
                  "route-after": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Earliest time an order should route at"
                  }
                }
              },
              "advanced-instructions": {
                "type": "object",
                "properties": {
                  "strict-position-effect-validation": {
                    "type": "boolean",
                    "description": "If the order should be rejected the open/close position effect is not valid",
                    "default": false
                  }
                }
              }
            },
            "required": [
              "order-type",
              "time-in-force",
              "stop-trigger",
              "price-effect",
              "value-effect",
              "legs"
            ]
          }
        },
        "trigger-order": {
          "type": "object",
          "description": "Initial live order for OTO based orders",
          "properties": {
            "gtc-date": {
              "type": "string",
              "format": "date",
              "description": "The date in which a GTD order will expire. Can only be provided if time-in-force is GTD."
            },
            "order-type": {
              "type": "string",
              "description": "The type of order in regards to the price. i.e.\n                                    `Limit`, `Liquidity Allocation`, `Market`, `Marketable Limit`, `Notional Market`, `Stop` or `Stop Limit`",
              "enum": [
                "Limit",
                "Liquidity Allocation",
                "Market",
                "Marketable Limit",
                "Notional Market",
                "Stop",
                "Stop Limit"
              ]
            },
            "time-in-force": {
              "type": "string",
              "description": "The length in time before the order expires. i.e.\n                                       `Day`, `Ext`, `GTC`, `GTC Ext`, `GTD` or `IOC`",
              "enum": [
                "Day",
                "Ext",
                "GTC",
                "GTC Ext",
                "GTD",
                "IOC"
              ]
            },
            "stop-trigger": {
              "type": "number",
              "format": "double",
              "description": "The price trigger at which a stop or stop-limit order becomes valid."
            },
            "price": {
              "type": "number",
              "format": "double",
              "description": "The price of the Order. Required for limit and stop-limit orders."
            },
            "price-effect": {
              "type": "string",
              "description": "If pay or receive payment for placing the order. i.e. `Credit` or `Debit`",
              "enum": [
                "Credit",
                "Debit"
              ]
            },
            "value": {
              "type": "number",
              "format": "double",
              "description": "The notional value of the Order, required for notional market orders."
            },
            "value-effect": {
              "type": "string",
              "description": "If pay or receive payment for placing the notional market order. i.e. `Credit` or `Debit`",
              "enum": [
                "Credit",
                "Debit"
              ]
            },
            "automated-source": {
              "type": "boolean",
              "description": "If the order was placed from an automated source",
              "default": false
            },
            "external-identifier": {
              "type": "string",
              "description": "External identifier for the order"
            },
            "max-value-per-liquidity-allocation-fill": {
              "type": "number",
              "format": "double",
              "description": "Max value per liquidity allocation fill"
            },
            "partition-key": {
              "type": "string",
              "description": "Account partition key"
            },
            "preflight-id": {
              "type": "string",
              "description": "Transient order identifier used for matching preflight errors to an individual order"
            },
            "source": {
              "type": "string",
              "description": "The source the order is coming from"
            },
            "legs": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "The directional action of the leg. i.e.\n                                  `Allocate`, `Buy`, `Buy to Close`, `Buy to Open`, `Sell`, `Sell to Close` or `Sell to Open`.\n                                  Note: `Buy` and `Sell` are only applicable to Futures orders.",
                    "enum": [
                      "Allocate",
                      "Buy",
                      "Buy to Close",
                      "Buy to Open",
                      "Sell",
                      "Sell to Close",
                      "Sell to Open"
                    ]
                  },
                  "instrument-type": {
                    "type": "string",
                    "description": "The type of Instrument. i.e.\n                                           `Cryptocurrency`, `Equity`, `Equity Offering`, `Equity Option`, `Fixed Income Security`, `Future`, `Future Option` or `Liquidity Pool`",
                    "enum": [
                      "Cryptocurrency",
                      "Equity",
                      "Equity Offering",
                      "Equity Option",
                      "Fixed Income Security",
                      "Future",
                      "Future Option",
                      "Liquidity Pool"
                    ]
                  },
                  "quantity": {
                    "type": "number",
                    "format": "double",
                    "description": "The size of the contract. Required for all orders but notional market."
                  },
                  "symbol": {
                    "type": "string",
                    "description": "The Stock Ticker Symbol `AAPL`, OCC Option Symbol `AAPL  191004P00275000`, \\\n                                    TW Future Symbol `/ESZ9`, or TW Future Option Symbol `./ESZ9 EW4U9 190927P2975`"
                  }
                },
                "required": [
                  "action",
                  "instrument-type",
                  "symbol"
                ]
              }
            },
            "rules": {
              "type": "object",
              "properties": {
                "cancel-at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Latest time an order should be canceled at"
                },
                "conditions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "action": {
                        "type": "string",
                        "description": "The action in which the trigger is enacted. i.e.\n                                    `cancel` and `route`",
                        "enum": [
                          "cancel",
                          "route"
                        ]
                      },
                      "instrument-type": {
                        "type": "string",
                        "description": "The instrument's type in relation to the condition. i.e. \\\n                                              `Equity` or `Future`",
                        "enum": [
                          "Equity",
                          "Future"
                        ]
                      },
                      "symbol": {
                        "type": "string",
                        "description": "The symbol to apply the condition to. \\\n                                      i.e. Stock Ticker Symbol `AAPL` or the TW Future Symbol `/ESZ9`"
                      },
                      "comparator": {
                        "type": "string",
                        "description": "How to compare against the threshold. \\\n                                        Currently Supports `gte` (Greater than or Equal To) or `lte` (Less than or Equal to)",
                        "enum": [
                          "gte",
                          "lte"
                        ]
                      },
                      "indicator": {
                        "type": "string",
                        "description": "The indicator for the trigger, currently only supports `last`",
                        "enum": [
                          "last",
                          "nat"
                        ]
                      },
                      "threshold": {
                        "type": "number",
                        "format": "double",
                        "description": "The price at which the condition triggers."
                      },
                      "price-components": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "instrument-type": {
                              "type": "string",
                              "description": "The instrument's type in relation to the symbol.",
                              "enum": [
                                "Bond",
                                "Cryptocurrency",
                                "Currency Pair",
                                "Equity",
                                "Equity Offering",
                                "Equity Option",
                                "Fixed Income Security",
                                "Future",
                                "Future Option",
                                "Index",
                                "Liquidity Pool",
                                "Unknown",
                                "Warrant"
                              ]
                            },
                            "quantity": {
                              "type": "number",
                              "format": "double",
                              "description": "The Ratio quantity in relation to the symbol"
                            },
                            "quantity-direction": {
                              "type": "string",
                              "description": "The quantity direction(ie Long or Short) in relation to the symbol",
                              "enum": [
                                "Long",
                                "Short"
                              ]
                            },
                            "symbol": {
                              "type": "string",
                              "description": "The symbol to apply the condition to. \\\n                                      i.e. Stock Ticker Symbol `AAPL` or the TW Future Symbol `/ESZ9`"
                            }
                          },
                          "required": [
                            "instrument-type",
                            "quantity",
                            "quantity-direction",
                            "symbol"
                          ]
                        }
                      }
                    },
                    "required": [
                      "action",
                      "comparator",
                      "indicator",
                      "threshold"
                    ]
                  }
                },
                "route-after": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Earliest time an order should route at"
                }
              }
            },
            "advanced-instructions": {
              "type": "object",
              "properties": {
                "strict-position-effect-validation": {
                  "type": "boolean",
                  "description": "If the order should be rejected the open/close position effect is not valid",
                  "default": false
                }
              }
            }
          },
          "required": [
            "order-type",
            "time-in-force",
            "stop-trigger",
            "price-effect",
            "value-effect",
            "legs"
          ]
        },
        "type": {
          "type": "string",
          "description": "The type of stragegy for the complex order i.e.\n                              `BLAST`, `OCO`, `OTO`, `OTOCO` or `PAIRS`",
          "enum": [
            "BLAST",
            "OCO",
            "OTO",
            "OTOCO",
            "PAIRS"
          ]
        },
        "ratio-price-comparator": {
          "type": "string",
          "description": "How to compare against the ratio price. \\\n                                            Supports `gte` (Greater than or Equal To) or `lte` (Less than or Equal to)",
          "enum": [
            "gte",
            "lte"
          ]
        },
        "ratio-price-is-threshold-based-on-notional": {
          "type": "boolean",
          "description": "If comparison is in notional value instead of price."
        },
        "ratio-price-threshold": {
          "type": "number",
          "format": "double",
          "description": "Ratio price for a PAIRS trade"
        },
        "source": {
          "type": "string",
          "description": "The source the order is coming from"
        }
      },
      "required": [
        "orders",
        "type",
        "ratio-price-comparator",
        "ratio-price-threshold"
      ],
      "description": "Creates a new Complex Order from supplied params"
    },
    "PlacedOrderResponse": {
      "type": "object",
      "properties": {
        "buying-power-effect": {
          "description": "",
          "type": "string"
        },
        "closing-fee-calculation": {
          "description": "",
          "type": "string"
        },
        "complex-order": {
          "type": "object",
          "properties": {
            "id": {
              "description": "",
              "type": "string"
            },
            "account-number": {
              "description": "",
              "type": "string"
            },
            "ratio-price-comparator": {
              "description": "",
              "type": "string"
            },
            "ratio-price-is-threshold-based-on-notional": {
              "description": "",
              "type": "boolean"
            },
            "ratio-price-threshold": {
              "description": "",
              "type": "number",
              "format": "double"
            },
            "terminal-at": {
              "description": "",
              "type": "string"
            },
            "type": {
              "description": "",
              "type": "string"
            },
            "related-orders": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "",
                    "type": "string"
                  },
                  "complex-order-id": {
                    "description": "",
                    "type": "string"
                  },
                  "complex-order-tag": {
                    "description": "",
                    "type": "string"
                  },
                  "replaces-order-id": {
                    "description": "",
                    "type": "string"
                  },
                  "replacing-order-id": {
                    "description": "",
                    "type": "string"
                  },
                  "status": {
                    "description": "",
                    "type": "string"
                  }
                },
                "description": "Non-current orders. This includes replaced orders, unfilled orders, and terminal orders."
              }
            },
            "orders": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "",
                    "type": "string"
                  },
                  "account-number": {
                    "description": "",
                    "type": "string"
                  },
                  "cancel-user-id": {
                    "description": "",
                    "type": "string"
                  },
                  "cancel-username": {
                    "description": "",
                    "type": "string"
                  },
                  "cancellable": {
                    "description": "",
                    "type": "boolean"
                  },
                  "cancelled-at": {
                    "description": "",
                    "type": "string",
                    "format": "date-time"
                  },
                  "complex-order-id": {
                    "description": "",
                    "type": "string"
                  },
                  "complex-order-tag": {
                    "description": "",
                    "type": "string"
                  },
                  "confirmation-status": {
                    "description": "",
                    "type": "string"
                  },
                  "contingent-status": {
                    "description": "",
                    "type": "string"
                  },
                  "editable": {
                    "description": "",
                    "type": "boolean"
                  },
                  "edited": {
                    "description": "",
                    "type": "boolean"
                  },
                  "external-identifier": {
                    "description": "",
                    "type": "string"
                  },
                  "global-request-id": {
                    "description": "",
                    "type": "string"
                  },
                  "gtc-date": {
                    "description": "",
                    "type": "string",
                    "format": "date"
                  },
                  "in-flight-at": {
                    "description": "",
                    "type": "string",
                    "format": "date-time"
                  },
                  "liquidity-pool-instrument-type": {
                    "description": "",
                    "type": "string"
                  },
                  "live-at": {
                    "description": "",
                    "type": "string",
                    "format": "date-time"
                  },
                  "max-value-per-liquidity-allocation-fill": {
                    "description": "",
                    "type": "string"
                  },
                  "order-type": {
                    "description": "",
                    "type": "string"
                  },
                  "preflight-id": {
                    "description": "",
                    "type": "string"
                  },
                  "price": {
                    "description": "",
                    "type": "number",
                    "format": "double"
                  },
                  "price-effect": {
                    "description": "",
                    "type": "string"
                  },
                  "received-at": {
                    "description": "",
                    "type": "string",
                    "format": "date-time"
                  },
                  "reject-reason": {
                    "description": "",
                    "type": "string"
                  },
                  "replaces-order-id": {
                    "description": "",
                    "type": "string"
                  },
                  "replacing-order-id": {
                    "description": "",
                    "type": "string"
                  },
                  "size": {
                    "description": "",
                    "type": "string"
                  },
                  "source": {
                    "description": "",
                    "type": "string"
                  },
                  "status": {
                    "description": "",
                    "type": "string"
                  },
                  "stop-trigger": {
                    "description": "",
                    "type": "string"
                  },
                  "terminal-at": {
                    "description": "",
                    "type": "string",
                    "format": "date-time"
                  },
                  "time-in-force": {
                    "description": "",
                    "type": "string"
                  },
                  "underlying-instrument-type": {
                    "description": "",
                    "type": "string"
                  },
                  "underlying-symbol": {
                    "description": "",
                    "type": "string"
                  },
                  "updated-at": {
                    "description": "",
                    "type": "string"
                  },
                  "user-id": {
                    "description": "",
                    "type": "string"
                  },
                  "username": {
                    "description": "",
                    "type": "string"
                  },
                  "value": {
                    "description": "",
                    "type": "number",
                    "format": "double"
                  },
                  "value-effect": {
                    "description": "",
                    "type": "string"
                  },
                  "legs": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "",
                          "type": "string"
                        },
                        "instrument-type": {
                          "description": "",
                          "type": "string"
                        },
                        "quantity": {
                          "description": "",
                          "type": "string"
                        },
                        "remaining-quantity": {
                          "description": "",
                          "type": "string"
                        },
                        "symbol": {
                          "description": "",
                          "type": "string"
                        },
                        "fills": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "destination-venue": {
                                "description": "",
                                "type": "string"
                              },
                              "ext-exec-id": {
                                "description": "",
                                "type": "string"
                              },
                              "ext-group-fill-id": {
                                "description": "",
                                "type": "string"
                              },
                              "fill-id": {
                                "description": "",
                                "type": "string"
                              },
                              "fill-price": {
                                "description": "",
                                "type": "number",
                                "format": "double"
                              },
                              "filled-at": {
                                "description": "",
                                "type": "string",
                                "format": "date-time"
                              },
                              "quantity": {
                                "description": "",
                                "type": "string"
                              }
                            },
                            "description": ""
                          }
                        }
                      },
                      "description": ""
                    }
                  },
                  "order-rule": {
                    "type": "object",
                    "properties": {
                      "cancel-at": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                      },
                      "cancelled-at": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                      },
                      "route-after": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                      },
                      "routed-at": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                      },
                      "order-conditions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "",
                              "type": "string"
                            },
                            "action": {
                              "description": "",
                              "type": "string"
                            },
                            "comparator": {
                              "description": "",
                              "type": "string"
                            },
                            "indicator": {
                              "description": "",
                              "type": "string"
                            },
                            "instrument-type": {
                              "description": "",
                              "type": "string"
                            },
                            "is-threshold-based-on-notional": {
                              "description": "",
                              "type": "boolean"
                            },
                            "symbol": {
                              "description": "",
                              "type": "string"
                            },
                            "threshold": {
                              "description": "",
                              "type": "number",
                              "format": "double"
                            },
                            "triggered-at": {
                              "description": "",
                              "type": "string",
                              "format": "date-time"
                            },
                            "triggered-value": {
                              "description": "",
                              "type": "number",
                              "format": "double"
                            },
                            "price-components": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "instrument-type": {
                                    "description": "",
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "description": "",
                                    "type": "string"
                                  },
                                  "quantity-direction": {
                                    "description": "",
                                    "type": "string"
                                  },
                                  "symbol": {
                                    "description": "",
                                    "type": "string"
                                  }
                                },
                                "description": ""
                              }
                            }
                          },
                          "description": ""
                        }
                      }
                    },
                    "description": ""
                  }
                },
                "description": "Orders with complex-order-tag: '<type>::order'. For example, 'OTO::order' for OTO complex orders."
              }
            },
            "trigger-order": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "",
                  "type": "string"
                },
                "account-number": {
                  "description": "",
                  "type": "string"
                },
                "cancel-user-id": {
                  "description": "",
                  "type": "string"
                },
                "cancel-username": {
                  "description": "",
                  "type": "string"
                },
                "cancellable": {
                  "description": "",
                  "type": "boolean"
                },
                "cancelled-at": {
                  "description": "",
                  "type": "string",
                  "format": "date-time"
                },
                "complex-order-id": {
                  "description": "",
                  "type": "string"
                },
                "complex-order-tag": {
                  "description": "",
                  "type": "string"
                },
                "confirmation-status": {
                  "description": "",
                  "type": "string"
                },
                "contingent-status": {
                  "description": "",
                  "type": "string"
                },
                "editable": {
                  "description": "",
                  "type": "boolean"
                },
                "edited": {
                  "description": "",
                  "type": "boolean"
                },
                "external-identifier": {
                  "description": "",
                  "type": "string"
                },
                "global-request-id": {
                  "description": "",
                  "type": "string"
                },
                "gtc-date": {
                  "description": "",
                  "type": "string",
                  "format": "date"
                },
                "in-flight-at": {
                  "description": "",
                  "type": "string",
                  "format": "date-time"
                },
                "liquidity-pool-instrument-type": {
                  "description": "",
                  "type": "string"
                },
                "live-at": {
                  "description": "",
                  "type": "string",
                  "format": "date-time"
                },
                "max-value-per-liquidity-allocation-fill": {
                  "description": "",
                  "type": "string"
                },
                "order-type": {
                  "description": "",
                  "type": "string"
                },
                "preflight-id": {
                  "description": "",
                  "type": "string"
                },
                "price": {
                  "description": "",
                  "type": "number",
                  "format": "double"
                },
                "price-effect": {
                  "description": "",
                  "type": "string"
                },
                "received-at": {
                  "description": "",
                  "type": "string",
                  "format": "date-time"
                },
                "reject-reason": {
                  "description": "",
                  "type": "string"
                },
                "replaces-order-id": {
                  "description": "",
                  "type": "string"
                },
                "replacing-order-id": {
                  "description": "",
                  "type": "string"
                },
                "size": {
                  "description": "",
                  "type": "string"
                },
                "source": {
                  "description": "",
                  "type": "string"
                },
                "status": {
                  "description": "",
                  "type": "string"
                },
                "stop-trigger": {
                  "description": "",
                  "type": "string"
                },
                "terminal-at": {
                  "description": "",
                  "type": "string",
                  "format": "date-time"
                },
                "time-in-force": {
                  "description": "",
                  "type": "string"
                },
                "underlying-instrument-type": {
                  "description": "",
                  "type": "string"
                },
                "underlying-symbol": {
                  "description": "",
                  "type": "string"
                },
                "updated-at": {
                  "description": "",
                  "type": "string"
                },
                "user-id": {
                  "description": "",
                  "type": "string"
                },
                "username": {
                  "description": "",
                  "type": "string"
                },
                "value": {
                  "description": "",
                  "type": "number",
                  "format": "double"
                },
                "value-effect": {
                  "description": "",
                  "type": "string"
                },
                "legs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "action": {
                        "description": "",
                        "type": "string"
                      },
                      "instrument-type": {
                        "description": "",
                        "type": "string"
                      },
                      "quantity": {
                        "description": "",
                        "type": "string"
                      },
                      "remaining-quantity": {
                        "description": "",
                        "type": "string"
                      },
                      "symbol": {
                        "description": "",
                        "type": "string"
                      },
                      "fills": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "destination-venue": {
                              "description": "",
                              "type": "string"
                            },
                            "ext-exec-id": {
                              "description": "",
                              "type": "string"
                            },
                            "ext-group-fill-id": {
                              "description": "",
                              "type": "string"
                            },
                            "fill-id": {
                              "description": "",
                              "type": "string"
                            },
                            "fill-price": {
                              "description": "",
                              "type": "number",
                              "format": "double"
                            },
                            "filled-at": {
                              "description": "",
                              "type": "string",
                              "format": "date-time"
                            },
                            "quantity": {
                              "description": "",
                              "type": "string"
                            }
                          },
                          "description": ""
                        }
                      }
                    },
                    "description": ""
                  }
                },
                "order-rule": {
                  "type": "object",
                  "properties": {
                    "cancel-at": {
                      "description": "",
                      "type": "string",
                      "format": "date-time"
                    },
                    "cancelled-at": {
                      "description": "",
                      "type": "string",
                      "format": "date-time"
                    },
                    "route-after": {
                      "description": "",
                      "type": "string",
                      "format": "date-time"
                    },
                    "routed-at": {
                      "description": "",
                      "type": "string",
                      "format": "date-time"
                    },
                    "order-conditions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "",
                            "type": "string"
                          },
                          "action": {
                            "description": "",
                            "type": "string"
                          },
                          "comparator": {
                            "description": "",
                            "type": "string"
                          },
                          "indicator": {
                            "description": "",
                            "type": "string"
                          },
                          "instrument-type": {
                            "description": "",
                            "type": "string"
                          },
                          "is-threshold-based-on-notional": {
                            "description": "",
                            "type": "boolean"
                          },
                          "symbol": {
                            "description": "",
                            "type": "string"
                          },
                          "threshold": {
                            "description": "",
                            "type": "number",
                            "format": "double"
                          },
                          "triggered-at": {
                            "description": "",
                            "type": "string",
                            "format": "date-time"
                          },
                          "triggered-value": {
                            "description": "",
                            "type": "number",
                            "format": "double"
                          },
                          "price-components": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "instrument-type": {
                                  "description": "",
                                  "type": "string"
                                },
                                "quantity": {
                                  "description": "",
                                  "type": "string"
                                },
                                "quantity-direction": {
                                  "description": "",
                                  "type": "string"
                                },
                                "symbol": {
                                  "description": "",
                                  "type": "string"
                                }
                              },
                              "description": ""
                            }
                          }
                        },
                        "description": ""
                      }
                    }
                  },
                  "description": ""
                }
              },
              "description": "Order with complex-order-tag: '<type>::trigger-order'. For example, 'OTO::trigger-order for OTO complex orders."
            }
          },
          "description": ""
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "code": {
                "description": "",
                "type": "string"
              },
              "message": {
                "description": "",
                "type": "string"
              },
              "preflight-id": {
                "description": "",
                "type": "string"
              }
            },
            "description": ""
          }
        },
        "fee-calculation": {
          "description": "",
          "type": "string"
        },
        "order": {
          "type": "object",
          "properties": {
            "id": {
              "description": "",
              "type": "string"
            },
            "account-number": {
              "description": "",
              "type": "string"
            },
            "cancel-user-id": {
              "description": "",
              "type": "string"
            },
            "cancel-username": {
              "description": "",
              "type": "string"
            },
            "cancellable": {
              "description": "",
              "type": "boolean"
            },
            "cancelled-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "complex-order-id": {
              "description": "",
              "type": "string"
            },
            "complex-order-tag": {
              "description": "",
              "type": "string"
            },
            "confirmation-status": {
              "description": "",
              "type": "string"
            },
            "contingent-status": {
              "description": "",
              "type": "string"
            },
            "editable": {
              "description": "",
              "type": "boolean"
            },
            "edited": {
              "description": "",
              "type": "boolean"
            },
            "external-identifier": {
              "description": "",
              "type": "string"
            },
            "global-request-id": {
              "description": "",
              "type": "string"
            },
            "gtc-date": {
              "description": "",
              "type": "string",
              "format": "date"
            },
            "in-flight-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "liquidity-pool-instrument-type": {
              "description": "",
              "type": "string"
            },
            "live-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "max-value-per-liquidity-allocation-fill": {
              "description": "",
              "type": "string"
            },
            "order-type": {
              "description": "",
              "type": "string"
            },
            "preflight-id": {
              "description": "",
              "type": "string"
            },
            "price": {
              "description": "",
              "type": "number",
              "format": "double"
            },
            "price-effect": {
              "description": "",
              "type": "string"
            },
            "received-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "reject-reason": {
              "description": "",
              "type": "string"
            },
            "replaces-order-id": {
              "description": "",
              "type": "string"
            },
            "replacing-order-id": {
              "description": "",
              "type": "string"
            },
            "size": {
              "description": "",
              "type": "string"
            },
            "source": {
              "description": "",
              "type": "string"
            },
            "status": {
              "description": "",
              "type": "string"
            },
            "stop-trigger": {
              "description": "",
              "type": "string"
            },
            "terminal-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "time-in-force": {
              "description": "",
              "type": "string"
            },
            "underlying-instrument-type": {
              "description": "",
              "type": "string"
            },
            "underlying-symbol": {
              "description": "",
              "type": "string"
            },
            "updated-at": {
              "description": "",
              "type": "string"
            },
            "user-id": {
              "description": "",
              "type": "string"
            },
            "username": {
              "description": "",
              "type": "string"
            },
            "value": {
              "description": "",
              "type": "number",
              "format": "double"
            },
            "value-effect": {
              "description": "",
              "type": "string"
            },
            "legs": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "action": {
                    "description": "",
                    "type": "string"
                  },
                  "instrument-type": {
                    "description": "",
                    "type": "string"
                  },
                  "quantity": {
                    "description": "",
                    "type": "string"
                  },
                  "remaining-quantity": {
                    "description": "",
                    "type": "string"
                  },
                  "symbol": {
                    "description": "",
                    "type": "string"
                  },
                  "fills": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "destination-venue": {
                          "description": "",
                          "type": "string"
                        },
                        "ext-exec-id": {
                          "description": "",
                          "type": "string"
                        },
                        "ext-group-fill-id": {
                          "description": "",
                          "type": "string"
                        },
                        "fill-id": {
                          "description": "",
                          "type": "string"
                        },
                        "fill-price": {
                          "description": "",
                          "type": "number",
                          "format": "double"
                        },
                        "filled-at": {
                          "description": "",
                          "type": "string",
                          "format": "date-time"
                        },
                        "quantity": {
                          "description": "",
                          "type": "string"
                        }
                      },
                      "description": ""
                    }
                  }
                },
                "description": ""
              }
            },
            "order-rule": {
              "type": "object",
              "properties": {
                "cancel-at": {
                  "description": "",
                  "type": "string",
                  "format": "date-time"
                },
                "cancelled-at": {
                  "description": "",
                  "type": "string",
                  "format": "date-time"
                },
                "route-after": {
                  "description": "",
                  "type": "string",
                  "format": "date-time"
                },
                "routed-at": {
                  "description": "",
                  "type": "string",
                  "format": "date-time"
                },
                "order-conditions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "",
                        "type": "string"
                      },
                      "action": {
                        "description": "",
                        "type": "string"
                      },
                      "comparator": {
                        "description": "",
                        "type": "string"
                      },
                      "indicator": {
                        "description": "",
                        "type": "string"
                      },
                      "instrument-type": {
                        "description": "",
                        "type": "string"
                      },
                      "is-threshold-based-on-notional": {
                        "description": "",
                        "type": "boolean"
                      },
                      "symbol": {
                        "description": "",
                        "type": "string"
                      },
                      "threshold": {
                        "description": "",
                        "type": "number",
                        "format": "double"
                      },
                      "triggered-at": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                      },
                      "triggered-value": {
                        "description": "",
                        "type": "number",
                        "format": "double"
                      },
                      "price-components": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "instrument-type": {
                              "description": "",
                              "type": "string"
                            },
                            "quantity": {
                              "description": "",
                              "type": "string"
                            },
                            "quantity-direction": {
                              "description": "",
                              "type": "string"
                            },
                            "symbol": {
                              "description": "",
                              "type": "string"
                            }
                          },
                          "description": ""
                        }
                      }
                    },
                    "description": ""
                  }
                }
              },
              "description": ""
            }
          },
          "description": ""
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "code": {
                "description": "",
                "type": "string"
              },
              "message": {
                "description": "",
                "type": "string"
              },
              "preflight-id": {
                "description": "",
                "type": "string"
              }
            },
            "description": ""
          }
        }
      },
      "description": "PlacedOrderResponse model"
    },
    "postAccountsAccountNumberComplexOrdersDryRun": {
      "type": "object",
      "properties": {
        "orders": {
          "type": "array",
          "description": "Array of orders for OCO/BLAST orders",
          "items": {
            "type": "object",
            "properties": {
              "gtc-date": {
                "type": "string",
                "format": "date",
                "description": "The date in which a GTD order will expire. Can only be provided if time-in-force is GTD."
              },
              "order-type": {
                "type": "string",
                "description": "The type of order in regards to the price. i.e.\n                                    `Limit`, `Liquidity Allocation`, `Market`, `Marketable Limit`, `Notional Market`, `Stop` or `Stop Limit`",
                "enum": [
                  "Limit",
                  "Liquidity Allocation",
                  "Market",
                  "Marketable Limit",
                  "Notional Market",
                  "Stop",
                  "Stop Limit"
                ]
              },
              "time-in-force": {
                "type": "string",
                "description": "The length in time before the order expires. i.e.\n                                       `Day`, `Ext`, `GTC`, `GTC Ext`, `GTD` or `IOC`",
                "enum": [
                  "Day",
                  "Ext",
                  "GTC",
                  "GTC Ext",
                  "GTD",
                  "IOC"
                ]
              },
              "stop-trigger": {
                "type": "number",
                "format": "double",
                "description": "The price trigger at which a stop or stop-limit order becomes valid."
              },
              "price": {
                "type": "number",
                "format": "double",
                "description": "The price of the Order. Required for limit and stop-limit orders."
              },
              "price-effect": {
                "type": "string",
                "description": "If pay or receive payment for placing the order. i.e. `Credit` or `Debit`",
                "enum": [
                  "Credit",
                  "Debit"
                ]
              },
              "value": {
                "type": "number",
                "format": "double",
                "description": "The notional value of the Order, required for notional market orders."
              },
              "value-effect": {
                "type": "string",
                "description": "If pay or receive payment for placing the notional market order. i.e. `Credit` or `Debit`",
                "enum": [
                  "Credit",
                  "Debit"
                ]
              },
              "automated-source": {
                "type": "boolean",
                "description": "If the order was placed from an automated source",
                "default": false
              },
              "external-identifier": {
                "type": "string",
                "description": "External identifier for the order"
              },
              "max-value-per-liquidity-allocation-fill": {
                "type": "number",
                "format": "double",
                "description": "Max value per liquidity allocation fill"
              },
              "partition-key": {
                "type": "string",
                "description": "Account partition key"
              },
              "preflight-id": {
                "type": "string",
                "description": "Transient order identifier used for matching preflight errors to an individual order"
              },
              "source": {
                "type": "string",
                "description": "The source the order is coming from"
              },
              "legs": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string",
                      "description": "The directional action of the leg. i.e.\n                                  `Allocate`, `Buy`, `Buy to Close`, `Buy to Open`, `Sell`, `Sell to Close` or `Sell to Open`.\n                                  Note: `Buy` and `Sell` are only applicable to Futures orders.",
                      "enum": [
                        "Allocate",
                        "Buy",
                        "Buy to Close",
                        "Buy to Open",
                        "Sell",
                        "Sell to Close",
                        "Sell to Open"
                      ]
                    },
                    "instrument-type": {
                      "type": "string",
                      "description": "The type of Instrument. i.e.\n                                           `Cryptocurrency`, `Equity`, `Equity Offering`, `Equity Option`, `Fixed Income Security`, `Future`, `Future Option` or `Liquidity Pool`",
                      "enum": [
                        "Cryptocurrency",
                        "Equity",
                        "Equity Offering",
                        "Equity Option",
                        "Fixed Income Security",
                        "Future",
                        "Future Option",
                        "Liquidity Pool"
                      ]
                    },
                    "quantity": {
                      "type": "number",
                      "format": "double",
                      "description": "The size of the contract. Required for all orders but notional market."
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The Stock Ticker Symbol `AAPL`, OCC Option Symbol `AAPL  191004P00275000`, \\\n                                    TW Future Symbol `/ESZ9`, or TW Future Option Symbol `./ESZ9 EW4U9 190927P2975`"
                    }
                  },
                  "required": [
                    "action",
                    "instrument-type",
                    "symbol"
                  ]
                }
              },
              "rules": {
                "type": "object",
                "properties": {
                  "cancel-at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Latest time an order should be canceled at"
                  },
                  "conditions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "type": "string",
                          "description": "The action in which the trigger is enacted. i.e.\n                                    `cancel` and `route`",
                          "enum": [
                            "cancel",
                            "route"
                          ]
                        },
                        "instrument-type": {
                          "type": "string",
                          "description": "The instrument's type in relation to the condition. i.e. \\\n                                              `Equity` or `Future`",
                          "enum": [
                            "Equity",
                            "Future"
                          ]
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The symbol to apply the condition to. \\\n                                      i.e. Stock Ticker Symbol `AAPL` or the TW Future Symbol `/ESZ9`"
                        },
                        "comparator": {
                          "type": "string",
                          "description": "How to compare against the threshold. \\\n                                        Currently Supports `gte` (Greater than or Equal To) or `lte` (Less than or Equal to)",
                          "enum": [
                            "gte",
                            "lte"
                          ]
                        },
                        "indicator": {
                          "type": "string",
                          "description": "The indicator for the trigger, currently only supports `last`",
                          "enum": [
                            "last",
                            "nat"
                          ]
                        },
                        "threshold": {
                          "type": "number",
                          "format": "double",
                          "description": "The price at which the condition triggers."
                        },
                        "price-components": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "instrument-type": {
                                "type": "string",
                                "description": "The instrument's type in relation to the symbol.",
                                "enum": [
                                  "Bond",
                                  "Cryptocurrency",
                                  "Currency Pair",
                                  "Equity",
                                  "Equity Offering",
                                  "Equity Option",
                                  "Fixed Income Security",
                                  "Future",
                                  "Future Option",
                                  "Index",
                                  "Liquidity Pool",
                                  "Unknown",
                                  "Warrant"
                                ]
                              },
                              "quantity": {
                                "type": "number",
                                "format": "double",
                                "description": "The Ratio quantity in relation to the symbol"
                              },
                              "quantity-direction": {
                                "type": "string",
                                "description": "The quantity direction(ie Long or Short) in relation to the symbol",
                                "enum": [
                                  "Long",
                                  "Short"
                                ]
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The symbol to apply the condition to. \\\n                                      i.e. Stock Ticker Symbol `AAPL` or the TW Future Symbol `/ESZ9`"
                              }
                            },
                            "required": [
                              "instrument-type",
                              "quantity",
                              "quantity-direction",
                              "symbol"
                            ]
                          }
                        }
                      },
                      "required": [
                        "action",
                        "comparator",
                        "indicator",
                        "threshold"
                      ]
                    }
                  },
                  "route-after": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Earliest time an order should route at"
                  }
                }
              },
              "advanced-instructions": {
                "type": "object",
                "properties": {
                  "strict-position-effect-validation": {
                    "type": "boolean",
                    "description": "If the order should be rejected the open/close position effect is not valid",
                    "default": false
                  }
                }
              }
            },
            "required": [
              "order-type",
              "time-in-force",
              "stop-trigger",
              "price-effect",
              "value-effect",
              "legs"
            ]
          }
        },
        "trigger-order": {
          "type": "object",
          "description": "Initial live order for OTO based orders",
          "properties": {
            "gtc-date": {
              "type": "string",
              "format": "date",
              "description": "The date in which a GTD order will expire. Can only be provided if time-in-force is GTD."
            },
            "order-type": {
              "type": "string",
              "description": "The type of order in regards to the price. i.e.\n                                    `Limit`, `Liquidity Allocation`, `Market`, `Marketable Limit`, `Notional Market`, `Stop` or `Stop Limit`",
              "enum": [
                "Limit",
                "Liquidity Allocation",
                "Market",
                "Marketable Limit",
                "Notional Market",
                "Stop",
                "Stop Limit"
              ]
            },
            "time-in-force": {
              "type": "string",
              "description": "The length in time before the order expires. i.e.\n                                       `Day`, `Ext`, `GTC`, `GTC Ext`, `GTD` or `IOC`",
              "enum": [
                "Day",
                "Ext",
                "GTC",
                "GTC Ext",
                "GTD",
                "IOC"
              ]
            },
            "stop-trigger": {
              "type": "number",
              "format": "double",
              "description": "The price trigger at which a stop or stop-limit order becomes valid."
            },
            "price": {
              "type": "number",
              "format": "double",
              "description": "The price of the Order. Required for limit and stop-limit orders."
            },
            "price-effect": {
              "type": "string",
              "description": "If pay or receive payment for placing the order. i.e. `Credit` or `Debit`",
              "enum": [
                "Credit",
                "Debit"
              ]
            },
            "value": {
              "type": "number",
              "format": "double",
              "description": "The notional value of the Order, required for notional market orders."
            },
            "value-effect": {
              "type": "string",
              "description": "If pay or receive payment for placing the notional market order. i.e. `Credit` or `Debit`",
              "enum": [
                "Credit",
                "Debit"
              ]
            },
            "automated-source": {
              "type": "boolean",
              "description": "If the order was placed from an automated source",
              "default": false
            },
            "external-identifier": {
              "type": "string",
              "description": "External identifier for the order"
            },
            "max-value-per-liquidity-allocation-fill": {
              "type": "number",
              "format": "double",
              "description": "Max value per liquidity allocation fill"
            },
            "partition-key": {
              "type": "string",
              "description": "Account partition key"
            },
            "preflight-id": {
              "type": "string",
              "description": "Transient order identifier used for matching preflight errors to an individual order"
            },
            "source": {
              "type": "string",
              "description": "The source the order is coming from"
            },
            "legs": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "The directional action of the leg. i.e.\n                                  `Allocate`, `Buy`, `Buy to Close`, `Buy to Open`, `Sell`, `Sell to Close` or `Sell to Open`.\n                                  Note: `Buy` and `Sell` are only applicable to Futures orders.",
                    "enum": [
                      "Allocate",
                      "Buy",
                      "Buy to Close",
                      "Buy to Open",
                      "Sell",
                      "Sell to Close",
                      "Sell to Open"
                    ]
                  },
                  "instrument-type": {
                    "type": "string",
                    "description": "The type of Instrument. i.e.\n                                           `Cryptocurrency`, `Equity`, `Equity Offering`, `Equity Option`, `Fixed Income Security`, `Future`, `Future Option` or `Liquidity Pool`",
                    "enum": [
                      "Cryptocurrency",
                      "Equity",
                      "Equity Offering",
                      "Equity Option",
                      "Fixed Income Security",
                      "Future",
                      "Future Option",
                      "Liquidity Pool"
                    ]
                  },
                  "quantity": {
                    "type": "number",
                    "format": "double",
                    "description": "The size of the contract. Required for all orders but notional market."
                  },
                  "symbol": {
                    "type": "string",
                    "description": "The Stock Ticker Symbol `AAPL`, OCC Option Symbol `AAPL  191004P00275000`, \\\n                                    TW Future Symbol `/ESZ9`, or TW Future Option Symbol `./ESZ9 EW4U9 190927P2975`"
                  }
                },
                "required": [
                  "action",
                  "instrument-type",
                  "symbol"
                ]
              }
            },
            "rules": {
              "type": "object",
              "properties": {
                "cancel-at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Latest time an order should be canceled at"
                },
                "conditions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "action": {
                        "type": "string",
                        "description": "The action in which the trigger is enacted. i.e.\n                                    `cancel` and `route`",
                        "enum": [
                          "cancel",
                          "route"
                        ]
                      },
                      "instrument-type": {
                        "type": "string",
                        "description": "The instrument's type in relation to the condition. i.e. \\\n                                              `Equity` or `Future`",
                        "enum": [
                          "Equity",
                          "Future"
                        ]
                      },
                      "symbol": {
                        "type": "string",
                        "description": "The symbol to apply the condition to. \\\n                                      i.e. Stock Ticker Symbol `AAPL` or the TW Future Symbol `/ESZ9`"
                      },
                      "comparator": {
                        "type": "string",
                        "description": "How to compare against the threshold. \\\n                                        Currently Supports `gte` (Greater than or Equal To) or `lte` (Less than or Equal to)",
                        "enum": [
                          "gte",
                          "lte"
                        ]
                      },
                      "indicator": {
                        "type": "string",
                        "description": "The indicator for the trigger, currently only supports `last`",
                        "enum": [
                          "last",
                          "nat"
                        ]
                      },
                      "threshold": {
                        "type": "number",
                        "format": "double",
                        "description": "The price at which the condition triggers."
                      },
                      "price-components": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "instrument-type": {
                              "type": "string",
                              "description": "The instrument's type in relation to the symbol.",
                              "enum": [
                                "Bond",
                                "Cryptocurrency",
                                "Currency Pair",
                                "Equity",
                                "Equity Offering",
                                "Equity Option",
                                "Fixed Income Security",
                                "Future",
                                "Future Option",
                                "Index",
                                "Liquidity Pool",
                                "Unknown",
                                "Warrant"
                              ]
                            },
                            "quantity": {
                              "type": "number",
                              "format": "double",
                              "description": "The Ratio quantity in relation to the symbol"
                            },
                            "quantity-direction": {
                              "type": "string",
                              "description": "The quantity direction(ie Long or Short) in relation to the symbol",
                              "enum": [
                                "Long",
                                "Short"
                              ]
                            },
                            "symbol": {
                              "type": "string",
                              "description": "The symbol to apply the condition to. \\\n                                      i.e. Stock Ticker Symbol `AAPL` or the TW Future Symbol `/ESZ9`"
                            }
                          },
                          "required": [
                            "instrument-type",
                            "quantity",
                            "quantity-direction",
                            "symbol"
                          ]
                        }
                      }
                    },
                    "required": [
                      "action",
                      "comparator",
                      "indicator",
                      "threshold"
                    ]
                  }
                },
                "route-after": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Earliest time an order should route at"
                }
              }
            },
            "advanced-instructions": {
              "type": "object",
              "properties": {
                "strict-position-effect-validation": {
                  "type": "boolean",
                  "description": "If the order should be rejected the open/close position effect is not valid",
                  "default": false
                }
              }
            }
          },
          "required": [
            "order-type",
            "time-in-force",
            "stop-trigger",
            "price-effect",
            "value-effect",
            "legs"
          ]
        },
        "type": {
          "type": "string",
          "description": "The type of stragegy for the complex order i.e.\n                              `BLAST`, `OCO`, `OTO`, `OTOCO` or `PAIRS`",
          "enum": [
            "BLAST",
            "OCO",
            "OTO",
            "OTOCO",
            "PAIRS"
          ]
        },
        "ratio-price-comparator": {
          "type": "string",
          "description": "How to compare against the ratio price. \\\n                                            Supports `gte` (Greater than or Equal To) or `lte` (Less than or Equal to)",
          "enum": [
            "gte",
            "lte"
          ]
        },
        "ratio-price-is-threshold-based-on-notional": {
          "type": "boolean",
          "description": "If comparison is in notional value instead of price."
        },
        "ratio-price-threshold": {
          "type": "number",
          "format": "double",
          "description": "Ratio price for a PAIRS trade"
        },
        "source": {
          "type": "string",
          "description": "The source the order is coming from"
        }
      },
      "required": [
        "orders",
        "type",
        "ratio-price-comparator",
        "ratio-price-threshold"
      ],
      "description": "Performs a dry-run for a new ComplexOrder from supplied params. Allows validation of potential orders."
    },
    "patchAccountsAccountNumberComplexOrdersId": {
      "type": "object",
      "properties": {
        "ratio-price-comparator": {
          "type": "string",
          "description": "How to compare against the ratio price. \\\n                                                      Supports `gte` (Greater than or Equal To) or `lte` (Less than or Equal to)",
          "enum": [
            "gte",
            "lte"
          ]
        },
        "ratio-price-threshold": {
          "type": "number",
          "format": "double",
          "description": "Ratio price for a PAIRS trade"
        }
      },
      "description": "Edit threshold-price of a PAIRS trade."
    },
    "postAccountsAccountNumberComplexOrdersIdDryRun": {
      "type": "object",
      "properties": {
        "ratio-price-comparator": {
          "type": "string",
          "description": "How to compare against the ratio price. \\\n                                                      Supports `gte` (Greater than or Equal To) or `lte` (Less than or Equal to)",
          "enum": [
            "gte",
            "lte"
          ]
        },
        "ratio-price-threshold": {
          "type": "number",
          "format": "double",
          "description": "Ratio price for a PAIRS trade"
        }
      },
      "description": "Performs a dry-run for editing a ComplexOrder from supplied params."
    },
    "postAccountsAccountNumberOrders": {
      "type": "object",
      "properties": {
        "gtc-date": {
          "type": "string",
          "format": "date",
          "description": "The date in which a GTD order will expire. Can only be provided if time-in-force is GTD."
        },
        "order-type": {
          "type": "string",
          "description": "The type of order in regards to the price. i.e.\n                                    `Limit`, `Liquidity Allocation`, `Market`, `Marketable Limit`, `Notional Market`, `Stop` or `Stop Limit`",
          "enum": [
            "Limit",
            "Liquidity Allocation",
            "Market",
            "Marketable Limit",
            "Notional Market",
            "Stop",
            "Stop Limit"
          ]
        },
        "time-in-force": {
          "type": "string",
          "description": "The length in time before the order expires. i.e.\n                                       `Day`, `Ext`, `GTC`, `GTC Ext`, `GTD` or `IOC`",
          "enum": [
            "Day",
            "Ext",
            "GTC",
            "GTC Ext",
            "GTD",
            "IOC"
          ]
        },
        "stop-trigger": {
          "type": "number",
          "format": "double",
          "description": "The price trigger at which a stop or stop-limit order becomes valid."
        },
        "price": {
          "type": "number",
          "format": "double",
          "description": "The price of the Order. Required for limit and stop-limit orders."
        },
        "price-effect": {
          "type": "string",
          "description": "If pay or receive payment for placing the order. i.e. `Credit` or `Debit`",
          "enum": [
            "Credit",
            "Debit"
          ]
        },
        "value": {
          "type": "number",
          "format": "double",
          "description": "The notional value of the Order, required for notional market orders."
        },
        "value-effect": {
          "type": "string",
          "description": "If pay or receive payment for placing the notional market order. i.e. `Credit` or `Debit`",
          "enum": [
            "Credit",
            "Debit"
          ]
        },
        "automated-source": {
          "type": "boolean",
          "description": "If the order was placed from an automated source",
          "default": false
        },
        "external-identifier": {
          "type": "string",
          "description": "External identifier for the order"
        },
        "max-value-per-liquidity-allocation-fill": {
          "type": "number",
          "format": "double",
          "description": "Max value per liquidity allocation fill"
        },
        "partition-key": {
          "type": "string",
          "description": "Account partition key"
        },
        "preflight-id": {
          "type": "string",
          "description": "Transient order identifier used for matching preflight errors to an individual order"
        },
        "source": {
          "type": "string",
          "description": "The source the order is coming from"
        },
        "legs": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "action": {
                "type": "string",
                "description": "The directional action of the leg. i.e.\n                                  `Allocate`, `Buy`, `Buy to Close`, `Buy to Open`, `Sell`, `Sell to Close` or `Sell to Open`.\n                                  Note: `Buy` and `Sell` are only applicable to Futures orders.",
                "enum": [
                  "Allocate",
                  "Buy",
                  "Buy to Close",
                  "Buy to Open",
                  "Sell",
                  "Sell to Close",
                  "Sell to Open"
                ]
              },
              "instrument-type": {
                "type": "string",
                "description": "The type of Instrument. i.e.\n                                           `Cryptocurrency`, `Equity`, `Equity Offering`, `Equity Option`, `Fixed Income Security`, `Future`, `Future Option` or `Liquidity Pool`",
                "enum": [
                  "Cryptocurrency",
                  "Equity",
                  "Equity Offering",
                  "Equity Option",
                  "Fixed Income Security",
                  "Future",
                  "Future Option",
                  "Liquidity Pool"
                ]
              },
              "quantity": {
                "type": "number",
                "format": "double",
                "description": "The size of the contract. Required for all orders but notional market."
              },
              "symbol": {
                "type": "string",
                "description": "The Stock Ticker Symbol `AAPL`, OCC Option Symbol `AAPL  191004P00275000`, \\\n                                    TW Future Symbol `/ESZ9`, or TW Future Option Symbol `./ESZ9 EW4U9 190927P2975`"
              }
            },
            "required": [
              "action",
              "instrument-type",
              "symbol"
            ]
          }
        },
        "rules": {
          "type": "object",
          "properties": {
            "cancel-at": {
              "type": "string",
              "format": "date-time",
              "description": "Latest time an order should be canceled at"
            },
            "conditions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "The action in which the trigger is enacted. i.e.\n                                    `cancel` and `route`",
                    "enum": [
                      "cancel",
                      "route"
                    ]
                  },
                  "instrument-type": {
                    "type": "string",
                    "description": "The instrument's type in relation to the condition. i.e. \\\n                                              `Equity` or `Future`",
                    "enum": [
                      "Equity",
                      "Future"
                    ]
                  },
                  "symbol": {
                    "type": "string",
                    "description": "The symbol to apply the condition to. \\\n                                      i.e. Stock Ticker Symbol `AAPL` or the TW Future Symbol `/ESZ9`"
                  },
                  "comparator": {
                    "type": "string",
                    "description": "How to compare against the threshold. \\\n                                        Currently Supports `gte` (Greater than or Equal To) or `lte` (Less than or Equal to)",
                    "enum": [
                      "gte",
                      "lte"
                    ]
                  },
                  "indicator": {
                    "type": "string",
                    "description": "The indicator for the trigger, currently only supports `last`",
                    "enum": [
                      "last",
                      "nat"
                    ]
                  },
                  "threshold": {
                    "type": "number",
                    "format": "double",
                    "description": "The price at which the condition triggers."
                  },
                  "price-components": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "instrument-type": {
                          "type": "string",
                          "description": "The instrument's type in relation to the symbol.",
                          "enum": [
                            "Bond",
                            "Cryptocurrency",
                            "Currency Pair",
                            "Equity",
                            "Equity Offering",
                            "Equity Option",
                            "Fixed Income Security",
                            "Future",
                            "Future Option",
                            "Index",
                            "Liquidity Pool",
                            "Unknown",
                            "Warrant"
                          ]
                        },
                        "quantity": {
                          "type": "number",
                          "format": "double",
                          "description": "The Ratio quantity in relation to the symbol"
                        },
                        "quantity-direction": {
                          "type": "string",
                          "description": "The quantity direction(ie Long or Short) in relation to the symbol",
                          "enum": [
                            "Long",
                            "Short"
                          ]
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The symbol to apply the condition to. \\\n                                      i.e. Stock Ticker Symbol `AAPL` or the TW Future Symbol `/ESZ9`"
                        }
                      },
                      "required": [
                        "instrument-type",
                        "quantity",
                        "quantity-direction",
                        "symbol"
                      ]
                    }
                  }
                },
                "required": [
                  "action",
                  "comparator",
                  "indicator",
                  "threshold"
                ]
              }
            },
            "route-after": {
              "type": "string",
              "format": "date-time",
              "description": "Earliest time an order should route at"
            }
          }
        },
        "advanced-instructions": {
          "type": "object",
          "properties": {
            "strict-position-effect-validation": {
              "type": "boolean",
              "description": "If the order should be rejected the open/close position effect is not valid",
              "default": false
            }
          }
        }
      },
      "required": [
        "order-type",
        "time-in-force",
        "stop-trigger",
        "price-effect",
        "value-effect",
        "legs"
      ],
      "description": "Accepts a json document containing parameters to create an order for the client."
    },
    "postAccountsAccountNumberOrdersDryRun": {
      "type": "object",
      "properties": {
        "gtc-date": {
          "type": "string",
          "format": "date",
          "description": "The date in which a GTD order will expire. Can only be provided if time-in-force is GTD."
        },
        "order-type": {
          "type": "string",
          "description": "The type of order in regards to the price. i.e.\n                                    `Limit`, `Liquidity Allocation`, `Market`, `Marketable Limit`, `Notional Market`, `Stop` or `Stop Limit`",
          "enum": [
            "Limit",
            "Liquidity Allocation",
            "Market",
            "Marketable Limit",
            "Notional Market",
            "Stop",
            "Stop Limit"
          ]
        },
        "time-in-force": {
          "type": "string",
          "description": "The length in time before the order expires. i.e.\n                                       `Day`, `Ext`, `GTC`, `GTC Ext`, `GTD` or `IOC`",
          "enum": [
            "Day",
            "Ext",
            "GTC",
            "GTC Ext",
            "GTD",
            "IOC"
          ]
        },
        "stop-trigger": {
          "type": "number",
          "format": "double",
          "description": "The price trigger at which a stop or stop-limit order becomes valid."
        },
        "price": {
          "type": "number",
          "format": "double",
          "description": "The price of the Order. Required for limit and stop-limit orders."
        },
        "price-effect": {
          "type": "string",
          "description": "If pay or receive payment for placing the order. i.e. `Credit` or `Debit`",
          "enum": [
            "Credit",
            "Debit"
          ]
        },
        "value": {
          "type": "number",
          "format": "double",
          "description": "The notional value of the Order, required for notional market orders."
        },
        "value-effect": {
          "type": "string",
          "description": "If pay or receive payment for placing the notional market order. i.e. `Credit` or `Debit`",
          "enum": [
            "Credit",
            "Debit"
          ]
        },
        "automated-source": {
          "type": "boolean",
          "description": "If the order was placed from an automated source",
          "default": false
        },
        "external-identifier": {
          "type": "string",
          "description": "External identifier for the order"
        },
        "max-value-per-liquidity-allocation-fill": {
          "type": "number",
          "format": "double",
          "description": "Max value per liquidity allocation fill"
        },
        "partition-key": {
          "type": "string",
          "description": "Account partition key"
        },
        "preflight-id": {
          "type": "string",
          "description": "Transient order identifier used for matching preflight errors to an individual order"
        },
        "source": {
          "type": "string",
          "description": "The source the order is coming from"
        },
        "legs": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "action": {
                "type": "string",
                "description": "The directional action of the leg. i.e.\n                                  `Allocate`, `Buy`, `Buy to Close`, `Buy to Open`, `Sell`, `Sell to Close` or `Sell to Open`.\n                                  Note: `Buy` and `Sell` are only applicable to Futures orders.",
                "enum": [
                  "Allocate",
                  "Buy",
                  "Buy to Close",
                  "Buy to Open",
                  "Sell",
                  "Sell to Close",
                  "Sell to Open"
                ]
              },
              "instrument-type": {
                "type": "string",
                "description": "The type of Instrument. i.e.\n                                           `Cryptocurrency`, `Equity`, `Equity Offering`, `Equity Option`, `Fixed Income Security`, `Future`, `Future Option` or `Liquidity Pool`",
                "enum": [
                  "Cryptocurrency",
                  "Equity",
                  "Equity Offering",
                  "Equity Option",
                  "Fixed Income Security",
                  "Future",
                  "Future Option",
                  "Liquidity Pool"
                ]
              },
              "quantity": {
                "type": "number",
                "format": "double",
                "description": "The size of the contract. Required for all orders but notional market."
              },
              "symbol": {
                "type": "string",
                "description": "The Stock Ticker Symbol `AAPL`, OCC Option Symbol `AAPL  191004P00275000`, \\\n                                    TW Future Symbol `/ESZ9`, or TW Future Option Symbol `./ESZ9 EW4U9 190927P2975`"
              }
            },
            "required": [
              "action",
              "instrument-type",
              "symbol"
            ]
          }
        },
        "rules": {
          "type": "object",
          "properties": {
            "cancel-at": {
              "type": "string",
              "format": "date-time",
              "description": "Latest time an order should be canceled at"
            },
            "conditions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "The action in which the trigger is enacted. i.e.\n                                    `cancel` and `route`",
                    "enum": [
                      "cancel",
                      "route"
                    ]
                  },
                  "instrument-type": {
                    "type": "string",
                    "description": "The instrument's type in relation to the condition. i.e. \\\n                                              `Equity` or `Future`",
                    "enum": [
                      "Equity",
                      "Future"
                    ]
                  },
                  "symbol": {
                    "type": "string",
                    "description": "The symbol to apply the condition to. \\\n                                      i.e. Stock Ticker Symbol `AAPL` or the TW Future Symbol `/ESZ9`"
                  },
                  "comparator": {
                    "type": "string",
                    "description": "How to compare against the threshold. \\\n                                        Currently Supports `gte` (Greater than or Equal To) or `lte` (Less than or Equal to)",
                    "enum": [
                      "gte",
                      "lte"
                    ]
                  },
                  "indicator": {
                    "type": "string",
                    "description": "The indicator for the trigger, currently only supports `last`",
                    "enum": [
                      "last",
                      "nat"
                    ]
                  },
                  "threshold": {
                    "type": "number",
                    "format": "double",
                    "description": "The price at which the condition triggers."
                  },
                  "price-components": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "instrument-type": {
                          "type": "string",
                          "description": "The instrument's type in relation to the symbol.",
                          "enum": [
                            "Bond",
                            "Cryptocurrency",
                            "Currency Pair",
                            "Equity",
                            "Equity Offering",
                            "Equity Option",
                            "Fixed Income Security",
                            "Future",
                            "Future Option",
                            "Index",
                            "Liquidity Pool",
                            "Unknown",
                            "Warrant"
                          ]
                        },
                        "quantity": {
                          "type": "number",
                          "format": "double",
                          "description": "The Ratio quantity in relation to the symbol"
                        },
                        "quantity-direction": {
                          "type": "string",
                          "description": "The quantity direction(ie Long or Short) in relation to the symbol",
                          "enum": [
                            "Long",
                            "Short"
                          ]
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The symbol to apply the condition to. \\\n                                      i.e. Stock Ticker Symbol `AAPL` or the TW Future Symbol `/ESZ9`"
                        }
                      },
                      "required": [
                        "instrument-type",
                        "quantity",
                        "quantity-direction",
                        "symbol"
                      ]
                    }
                  }
                },
                "required": [
                  "action",
                  "comparator",
                  "indicator",
                  "threshold"
                ]
              }
            },
            "route-after": {
              "type": "string",
              "format": "date-time",
              "description": "Earliest time an order should route at"
            }
          }
        },
        "advanced-instructions": {
          "type": "object",
          "properties": {
            "strict-position-effect-validation": {
              "type": "boolean",
              "description": "If the order should be rejected the open/close position effect is not valid",
              "default": false
            }
          }
        }
      },
      "required": [
        "order-type",
        "time-in-force",
        "stop-trigger",
        "price-effect",
        "value-effect",
        "legs"
      ],
      "description": "Accepts a json document containing parameters to create an order and \\\n          then runs the prefights without placing the order."
    },
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "account-number": {
          "description": "",
          "type": "string"
        },
        "cancel-user-id": {
          "description": "",
          "type": "string"
        },
        "cancel-username": {
          "description": "",
          "type": "string"
        },
        "cancellable": {
          "description": "",
          "type": "boolean"
        },
        "cancelled-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "complex-order-id": {
          "description": "",
          "type": "string"
        },
        "complex-order-tag": {
          "description": "",
          "type": "string"
        },
        "confirmation-status": {
          "description": "",
          "type": "string"
        },
        "contingent-status": {
          "description": "",
          "type": "string"
        },
        "editable": {
          "description": "",
          "type": "boolean"
        },
        "edited": {
          "description": "",
          "type": "boolean"
        },
        "external-identifier": {
          "description": "",
          "type": "string"
        },
        "global-request-id": {
          "description": "",
          "type": "string"
        },
        "gtc-date": {
          "description": "",
          "type": "string",
          "format": "date"
        },
        "in-flight-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "liquidity-pool-instrument-type": {
          "description": "",
          "type": "string"
        },
        "live-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "max-value-per-liquidity-allocation-fill": {
          "description": "",
          "type": "string"
        },
        "order-type": {
          "description": "",
          "type": "string"
        },
        "preflight-id": {
          "description": "",
          "type": "string"
        },
        "price": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "price-effect": {
          "description": "",
          "type": "string"
        },
        "received-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "reject-reason": {
          "description": "",
          "type": "string"
        },
        "replaces-order-id": {
          "description": "",
          "type": "string"
        },
        "replacing-order-id": {
          "description": "",
          "type": "string"
        },
        "size": {
          "description": "",
          "type": "string"
        },
        "source": {
          "description": "",
          "type": "string"
        },
        "status": {
          "description": "",
          "type": "string"
        },
        "stop-trigger": {
          "description": "",
          "type": "string"
        },
        "terminal-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "time-in-force": {
          "description": "",
          "type": "string"
        },
        "underlying-instrument-type": {
          "description": "",
          "type": "string"
        },
        "underlying-symbol": {
          "description": "",
          "type": "string"
        },
        "updated-at": {
          "description": "",
          "type": "string"
        },
        "user-id": {
          "description": "",
          "type": "string"
        },
        "username": {
          "description": "",
          "type": "string"
        },
        "value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "value-effect": {
          "description": "",
          "type": "string"
        },
        "legs": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "action": {
                "description": "",
                "type": "string"
              },
              "instrument-type": {
                "description": "",
                "type": "string"
              },
              "quantity": {
                "description": "",
                "type": "string"
              },
              "remaining-quantity": {
                "description": "",
                "type": "string"
              },
              "symbol": {
                "description": "",
                "type": "string"
              },
              "fills": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "destination-venue": {
                      "description": "",
                      "type": "string"
                    },
                    "ext-exec-id": {
                      "description": "",
                      "type": "string"
                    },
                    "ext-group-fill-id": {
                      "description": "",
                      "type": "string"
                    },
                    "fill-id": {
                      "description": "",
                      "type": "string"
                    },
                    "fill-price": {
                      "description": "",
                      "type": "number",
                      "format": "double"
                    },
                    "filled-at": {
                      "description": "",
                      "type": "string",
                      "format": "date-time"
                    },
                    "quantity": {
                      "description": "",
                      "type": "string"
                    }
                  },
                  "description": ""
                }
              }
            },
            "description": ""
          }
        },
        "order-rule": {
          "type": "object",
          "properties": {
            "cancel-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "cancelled-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "route-after": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "routed-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "order-conditions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "",
                    "type": "string"
                  },
                  "action": {
                    "description": "",
                    "type": "string"
                  },
                  "comparator": {
                    "description": "",
                    "type": "string"
                  },
                  "indicator": {
                    "description": "",
                    "type": "string"
                  },
                  "instrument-type": {
                    "description": "",
                    "type": "string"
                  },
                  "is-threshold-based-on-notional": {
                    "description": "",
                    "type": "boolean"
                  },
                  "symbol": {
                    "description": "",
                    "type": "string"
                  },
                  "threshold": {
                    "description": "",
                    "type": "number",
                    "format": "double"
                  },
                  "triggered-at": {
                    "description": "",
                    "type": "string",
                    "format": "date-time"
                  },
                  "triggered-value": {
                    "description": "",
                    "type": "number",
                    "format": "double"
                  },
                  "price-components": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "instrument-type": {
                          "description": "",
                          "type": "string"
                        },
                        "quantity": {
                          "description": "",
                          "type": "string"
                        },
                        "quantity-direction": {
                          "description": "",
                          "type": "string"
                        },
                        "symbol": {
                          "description": "",
                          "type": "string"
                        }
                      },
                      "description": ""
                    }
                  }
                },
                "description": ""
              }
            }
          },
          "description": ""
        }
      },
      "description": "Order model"
    },
    "patchAccountsAccountNumberOrdersId": {
      "type": "object",
      "properties": {
        "gtc-date": {
          "type": "string",
          "format": "date",
          "description": "The date in which a GTD order will expire. Can only be provided if time-in-force is GTD."
        },
        "order-type": {
          "type": "string",
          "description": "The type of order in regards to the price. i.e.\n                                    `Limit`, `Liquidity Allocation`, `Market`, `Marketable Limit`, `Notional Market`, `Stop` or `Stop Limit`",
          "enum": [
            "Limit",
            "Liquidity Allocation",
            "Market",
            "Marketable Limit",
            "Notional Market",
            "Stop",
            "Stop Limit"
          ]
        },
        "time-in-force": {
          "type": "string",
          "description": "The length in time before the order expires. i.e.\n                                       `Day`, `Ext`, `GTC`, `GTC Ext`, `GTD` or `IOC`",
          "enum": [
            "Day",
            "Ext",
            "GTC",
            "GTC Ext",
            "GTD",
            "IOC"
          ]
        },
        "stop-trigger": {
          "type": "number",
          "format": "double",
          "description": "The price trigger at which a stop or stop-limit order becomes valid."
        },
        "price": {
          "type": "number",
          "format": "double",
          "description": "The price of the Order. Required for limit and stop-limit orders."
        },
        "price-effect": {
          "type": "string",
          "description": "If pay or receive payment for placing the order. i.e. `Credit` or `Debit`",
          "enum": [
            "Credit",
            "Debit"
          ]
        },
        "value": {
          "type": "number",
          "format": "double",
          "description": "The notional value of the Order, required for notional market orders."
        },
        "value-effect": {
          "type": "string",
          "description": "If pay or receive payment for placing the notional market order. i.e. `Credit` or `Debit`",
          "enum": [
            "Credit",
            "Debit"
          ]
        },
        "automated-source": {
          "type": "boolean",
          "description": "If the order was placed from an automated source",
          "default": false
        },
        "external-identifier": {
          "type": "string",
          "description": "External identifier for the order"
        },
        "max-value-per-liquidity-allocation-fill": {
          "type": "number",
          "format": "double",
          "description": "Max value per liquidity allocation fill"
        },
        "partition-key": {
          "type": "string",
          "description": "Account partition key"
        },
        "preflight-id": {
          "type": "string",
          "description": "Transient order identifier used for matching preflight errors to an individual order"
        },
        "source": {
          "type": "string",
          "description": "The source the order is coming from"
        }
      },
      "required": [
        "order-type",
        "time-in-force",
        "stop-trigger",
        "price-effect",
        "value-effect"
      ],
      "description": "Edit price and execution properties of a live order by replacement. Subsequent fills of the original order\n      will abort the replacement."
    },
    "putAccountsAccountNumberOrdersId": {
      "type": "object",
      "properties": {
        "gtc-date": {
          "type": "string",
          "format": "date",
          "description": "The date in which a GTD order will expire. Can only be provided if time-in-force is GTD."
        },
        "order-type": {
          "type": "string",
          "description": "The type of order in regards to the price. i.e.\n                                    `Limit`, `Liquidity Allocation`, `Market`, `Marketable Limit`, `Notional Market`, `Stop` or `Stop Limit`",
          "enum": [
            "Limit",
            "Liquidity Allocation",
            "Market",
            "Marketable Limit",
            "Notional Market",
            "Stop",
            "Stop Limit"
          ]
        },
        "time-in-force": {
          "type": "string",
          "description": "The length in time before the order expires. i.e.\n                                       `Day`, `Ext`, `GTC`, `GTC Ext`, `GTD` or `IOC`",
          "enum": [
            "Day",
            "Ext",
            "GTC",
            "GTC Ext",
            "GTD",
            "IOC"
          ]
        },
        "stop-trigger": {
          "type": "number",
          "format": "double",
          "description": "The price trigger at which a stop or stop-limit order becomes valid."
        },
        "price": {
          "type": "number",
          "format": "double",
          "description": "The price of the Order. Required for limit and stop-limit orders."
        },
        "price-effect": {
          "type": "string",
          "description": "If pay or receive payment for placing the order. i.e. `Credit` or `Debit`",
          "enum": [
            "Credit",
            "Debit"
          ]
        },
        "value": {
          "type": "number",
          "format": "double",
          "description": "The notional value of the Order, required for notional market orders."
        },
        "value-effect": {
          "type": "string",
          "description": "If pay or receive payment for placing the notional market order. i.e. `Credit` or `Debit`",
          "enum": [
            "Credit",
            "Debit"
          ]
        },
        "automated-source": {
          "type": "boolean",
          "description": "If the order was placed from an automated source",
          "default": false
        },
        "external-identifier": {
          "type": "string",
          "description": "External identifier for the order"
        },
        "max-value-per-liquidity-allocation-fill": {
          "type": "number",
          "format": "double",
          "description": "Max value per liquidity allocation fill"
        },
        "partition-key": {
          "type": "string",
          "description": "Account partition key"
        },
        "preflight-id": {
          "type": "string",
          "description": "Transient order identifier used for matching preflight errors to an individual order"
        },
        "source": {
          "type": "string",
          "description": "The source the order is coming from"
        }
      },
      "required": [
        "order-type",
        "time-in-force",
        "stop-trigger",
        "price-effect",
        "value-effect"
      ],
      "description": "Replaces a live order with a new one. Subsequent fills of the original order will abort the replacement."
    },
    "postAccountsAccountNumberOrdersIdDryRun": {
      "type": "object",
      "properties": {
        "gtc-date": {
          "type": "string",
          "format": "date",
          "description": "The date in which a GTD order will expire. Can only be provided if time-in-force is GTD."
        },
        "order-type": {
          "type": "string",
          "description": "The type of order in regards to the price. i.e.\n                                    `Limit`, `Liquidity Allocation`, `Market`, `Marketable Limit`, `Notional Market`, `Stop` or `Stop Limit`",
          "enum": [
            "Limit",
            "Liquidity Allocation",
            "Market",
            "Marketable Limit",
            "Notional Market",
            "Stop",
            "Stop Limit"
          ]
        },
        "time-in-force": {
          "type": "string",
          "description": "The length in time before the order expires. i.e.\n                                       `Day`, `Ext`, `GTC`, `GTC Ext`, `GTD` or `IOC`",
          "enum": [
            "Day",
            "Ext",
            "GTC",
            "GTC Ext",
            "GTD",
            "IOC"
          ]
        },
        "stop-trigger": {
          "type": "number",
          "format": "double",
          "description": "The price trigger at which a stop or stop-limit order becomes valid."
        },
        "price": {
          "type": "number",
          "format": "double",
          "description": "The price of the Order. Required for limit and stop-limit orders."
        },
        "price-effect": {
          "type": "string",
          "description": "If pay or receive payment for placing the order. i.e. `Credit` or `Debit`",
          "enum": [
            "Credit",
            "Debit"
          ]
        },
        "value": {
          "type": "number",
          "format": "double",
          "description": "The notional value of the Order, required for notional market orders."
        },
        "value-effect": {
          "type": "string",
          "description": "If pay or receive payment for placing the notional market order. i.e. `Credit` or `Debit`",
          "enum": [
            "Credit",
            "Debit"
          ]
        },
        "automated-source": {
          "type": "boolean",
          "description": "If the order was placed from an automated source",
          "default": false
        },
        "external-identifier": {
          "type": "string",
          "description": "External identifier for the order"
        },
        "max-value-per-liquidity-allocation-fill": {
          "type": "number",
          "format": "double",
          "description": "Max value per liquidity allocation fill"
        },
        "partition-key": {
          "type": "string",
          "description": "Account partition key"
        },
        "preflight-id": {
          "type": "string",
          "description": "Transient order identifier used for matching preflight errors to an individual order"
        },
        "source": {
          "type": "string",
          "description": "The source the order is coming from"
        },
        "legs": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "action": {
                "type": "string",
                "description": "TODO",
                "enum": [
                  "Allocate",
                  "Buy",
                  "Buy to Close",
                  "Buy to Open",
                  "Sell",
                  "Sell to Close",
                  "Sell to Open"
                ]
              },
              "instrument-type": {
                "type": "string",
                "description": "The type of Instrument.",
                "enum": [
                  "Cryptocurrency",
                  "Equity",
                  "Equity Offering",
                  "Equity Option",
                  "Fixed Income Security",
                  "Future",
                  "Future Option",
                  "Liquidity Pool"
                ]
              },
              "quantity": {
                "type": "number",
                "format": "double",
                "description": "TODO"
              },
              "symbol": {
                "type": "string",
                "description": "Symbol for stock, specific option symbol in the\n          OCC symbology or specific future symbol. e.g. \"AAPL\", \"AAPL  150515C00120000\", \"/ESM5\""
              }
            },
            "required": [
              "action",
              "instrument-type",
              "symbol"
            ]
          }
        }
      },
      "required": [
        "order-type",
        "time-in-force",
        "stop-trigger",
        "price-effect",
        "value-effect"
      ],
      "description": "Runs through preflights for cancel-replace and edit without routing"
    },
    "NetLiqOhlc": {
      "type": "object",
      "properties": {
        "open": {
          "type": "number",
          "format": "double"
        },
        "high": {
          "type": "number",
          "format": "double"
        },
        "low": {
          "type": "number",
          "format": "double"
        },
        "close": {
          "type": "number",
          "format": "double"
        },
        "totalOpen": {
          "type": "number",
          "format": "double"
        },
        "totalHigh": {
          "type": "number",
          "format": "double"
        },
        "totalLow": {
          "type": "number",
          "format": "double"
        },
        "totalClose": {
          "type": "number",
          "format": "double"
        },
        "pendingCashOpen": {
          "type": "number",
          "format": "double"
        },
        "pendingCashHigh": {
          "type": "number",
          "format": "double"
        },
        "pendingCashLow": {
          "type": "number",
          "format": "double"
        },
        "pendingCashClose": {
          "type": "number",
          "format": "double"
        },
        "time": {
          "type": "string"
        }
      }
    },
    "postSessions": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string",
          "description": "The user name or email of the user."
        },
        "password": {
          "type": "string",
          "description": "The password for the user's account"
        },
        "remember-me": {
          "type": "boolean",
          "description": "If the session should be extended for longer than normal via remember token.\n                                        Defaults to `false`. ",
          "default": false
        },
        "remember-token": {
          "type": "string",
          "description": "The remember token. Allows skipping for 2 factor with in its window"
        }
      },
      "required": [
        "login"
      ],
      "description": "Create a new user session."
    },
    "SessionResponse": {
      "type": "object",
      "properties": {
        "user": {
          "type": "object",
          "properties": {
            "email": {
              "description": "",
              "type": "string"
            },
            "external-id": {
              "description": "",
              "type": "string"
            },
            "is-confirmed": {
              "description": "",
              "type": "string"
            },
            "name": {
              "description": "",
              "type": "string"
            },
            "nickname": {
              "description": "",
              "type": "string"
            },
            "username": {
              "description": "",
              "type": "string"
            }
          },
          "description": ""
        },
        "remember-token": {
          "description": "",
          "type": "string"
        },
        "session-expiration": {
          "description": "",
          "type": "string"
        },
        "session-token": {
          "description": "",
          "type": "string"
        }
      },
      "description": "SessionResponse model"
    },
    "CurrentPosition": {
      "type": "object",
      "properties": {
        "account-number": {
          "description": "",
          "type": "string"
        },
        "symbol": {
          "description": "",
          "type": "string"
        },
        "instrument-type": {
          "description": "",
          "type": "string"
        },
        "underlying-symbol": {
          "description": "",
          "type": "string"
        },
        "quantity": {
          "description": "",
          "type": "object"
        },
        "quantity-direction": {
          "description": "",
          "type": "string"
        },
        "close-price": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "average-open-price": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "average-yearly-market-close-price": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "average-daily-market-close-price": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "mark": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "mark-price": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "multiplier": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "cost-effect": {
          "description": "",
          "type": "string"
        },
        "is-suppressed": {
          "description": "",
          "type": "boolean"
        },
        "is-frozen": {
          "description": "",
          "type": "boolean"
        },
        "restricted-quantity": {
          "description": "",
          "type": "object"
        },
        "expires-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "fixing-price": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "deliverable-type": {
          "description": "",
          "type": "string"
        },
        "realized-day-gain": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "realized-day-gain-effect": {
          "description": "",
          "type": "string"
        },
        "realized-day-gain-date": {
          "description": "",
          "type": "string",
          "format": "date"
        },
        "realized-today": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "realized-today-effect": {
          "description": "",
          "type": "string"
        },
        "realized-today-date": {
          "description": "",
          "type": "string",
          "format": "date"
        },
        "created-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "updated-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "order-id": {
          "description": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "CurrentPosition model"
    },
    "AccountBalance": {
      "type": "object",
      "properties": {
        "account-number": {
          "description": "",
          "type": "string"
        },
        "currency": {
          "description": "",
          "type": "string"
        },
        "cash-balance": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "long-equity-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "short-equity-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "long-derivative-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "short-derivative-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "long-futures-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "short-futures-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "long-futures-derivative-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "short-futures-derivative-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "long-margineable-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "short-margineable-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "margin-equity": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "equity-buying-power": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "derivative-buying-power": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "day-trading-buying-power": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "futures-margin-requirement": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "available-trading-funds": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "maintenance-requirement": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "maintenance-call-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "reg-t-call-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "day-trading-call-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "day-equity-call-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "net-liquidating-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "cash-available-to-withdraw": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "day-trade-excess": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "pending-cash": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "pending-cash-effect": {
          "description": "",
          "type": "string"
        },
        "long-cryptocurrency-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "short-cryptocurrency-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "cryptocurrency-margin-requirement": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "unsettled-cryptocurrency-fiat-amount": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "unsettled-cryptocurrency-fiat-effect": {
          "description": "",
          "type": "string"
        },
        "closed-loop-available-balance": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "equity-offering-margin-requirement": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "long-bond-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "bond-margin-requirement": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "used-derivative-buying-power": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "special-memorandum-account-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "special-memorandum-account-apex-adjustment": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "total-settle-balance": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "margin-settle-balance": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "cash-settle-balance": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "sma-equity-option-buying-power": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "snapshot-date": {
          "description": "",
          "type": "string",
          "format": "date"
        },
        "time-of-day": {
          "description": "",
          "type": "string"
        },
        "reg-t-margin-requirement": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "futures-overnight-margin-requirement": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "futures-intraday-margin-requirement": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "maintenance-excess": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "pending-margin-interest": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "apex-starting-day-margin-equity": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "buying-power-adjustment": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "buying-power-adjustment-effect": {
          "description": "",
          "type": "string"
        },
        "effective-cryptocurrency-buying-power": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "updated-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "AccountBalance model"
    },
    "AccountBalanceSnapshot": {
      "type": "object",
      "properties": {
        "account-number": {
          "description": "",
          "type": "string"
        },
        "currency": {
          "description": "",
          "type": "string"
        },
        "cash-balance": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "long-equity-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "short-equity-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "long-derivative-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "short-derivative-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "long-futures-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "short-futures-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "long-futures-derivative-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "short-futures-derivative-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "long-margineable-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "short-margineable-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "margin-equity": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "equity-buying-power": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "derivative-buying-power": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "day-trading-buying-power": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "futures-margin-requirement": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "available-trading-funds": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "maintenance-requirement": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "maintenance-call-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "reg-t-call-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "day-trading-call-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "day-equity-call-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "net-liquidating-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "cash-available-to-withdraw": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "day-trade-excess": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "pending-cash": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "pending-cash-effect": {
          "description": "",
          "type": "string"
        },
        "long-cryptocurrency-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "short-cryptocurrency-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "cryptocurrency-margin-requirement": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "unsettled-cryptocurrency-fiat-amount": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "unsettled-cryptocurrency-fiat-effect": {
          "description": "",
          "type": "string"
        },
        "closed-loop-available-balance": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "equity-offering-margin-requirement": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "long-bond-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "bond-margin-requirement": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "used-derivative-buying-power": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "special-memorandum-account-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "special-memorandum-account-apex-adjustment": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "total-settle-balance": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "margin-settle-balance": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "cash-settle-balance": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "sma-equity-option-buying-power": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "snapshot-date": {
          "description": "",
          "type": "string",
          "format": "date"
        },
        "time-of-day": {
          "description": "",
          "type": "string"
        }
      },
      "description": "AccountBalanceSnapshot model"
    },
    "SymbolData": {
      "type": "object",
      "properties": {
        "symbol": {
          "type": "string",
          "description": "Symbol"
        },
        "description": {
          "type": "string",
          "description": "Company name"
        },
        "listed-market": {
          "type": "string",
          "description": "Listed Market"
        },
        "price-increments": {
          "type": "string",
          "description": "Price Increments"
        },
        "trading-hours": {
          "type": "string",
          "description": "Trading Hours"
        },
        "options": {
          "type": "boolean",
          "description": "Has listed options"
        },
        "instrument-type": {
          "type": "string",
          "description": "Instrument Type"
        }
      }
    },
    "QuoteStreamerTokenAuthResult": {
      "type": "object",
      "properties": {
        "dxlink-url": {
          "description": "",
          "type": "string"
        },
        "expires-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "issued-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "level": {
          "description": "",
          "type": "string"
        },
        "token": {
          "description": "",
          "type": "string"
        },
        "websocket-url": {
          "description": "",
          "type": "string"
        }
      },
      "description": "QuoteStreamerTokenAuthResult model"
    },
    "AccountAuthorityDecorator": {
      "type": "object",
      "properties": {
        "account": {
          "type": "object",
          "properties": {
            "account-number": {
              "description": "",
              "type": "string"
            },
            "account-type-name": {
              "description": "",
              "type": "string"
            },
            "closed-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "created-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "day-trader-status": {
              "description": "",
              "type": "string"
            },
            "ext-account-id": {
              "description": "",
              "type": "string"
            },
            "ext-crm-id": {
              "description": "",
              "type": "string"
            },
            "external-fdid": {
              "description": "",
              "type": "string"
            },
            "external-id": {
              "description": "",
              "type": "string"
            },
            "funding-date": {
              "description": "",
              "type": "string",
              "format": "date"
            },
            "futures-account-purpose": {
              "description": "",
              "type": "string"
            },
            "investment-objective": {
              "description": "",
              "type": "string"
            },
            "investment-time-horizon": {
              "description": "",
              "type": "string"
            },
            "is-closed": {
              "description": "",
              "type": "boolean"
            },
            "is-firm-error": {
              "description": "",
              "type": "boolean"
            },
            "is-firm-proprietary": {
              "description": "",
              "type": "boolean"
            },
            "is-foreign": {
              "description": "",
              "type": "string"
            },
            "is-futures-approved": {
              "description": "",
              "type": "boolean"
            },
            "liquidity-needs": {
              "description": "",
              "type": "string"
            },
            "margin-or-cash": {
              "description": "",
              "type": "string"
            },
            "nickname": {
              "description": "",
              "type": "string"
            },
            "opened-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "regulatory-domain": {
              "description": "",
              "type": "string"
            },
            "risk-tolerance": {
              "description": "",
              "type": "string"
            },
            "submitting-user-id": {
              "description": "",
              "type": "string"
            },
            "suitable-options-level": {
              "description": "",
              "type": "string"
            }
          },
          "description": ""
        },
        "authority-level": {
          "description": "",
          "type": "string"
        }
      },
      "description": "AccountAuthorityDecorator model"
    },
    "Account": {
      "type": "object",
      "properties": {
        "account-number": {
          "description": "",
          "type": "string"
        },
        "account-type-name": {
          "description": "",
          "type": "string"
        },
        "closed-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "created-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "day-trader-status": {
          "description": "",
          "type": "string"
        },
        "ext-account-id": {
          "description": "",
          "type": "string"
        },
        "ext-crm-id": {
          "description": "",
          "type": "string"
        },
        "external-fdid": {
          "description": "",
          "type": "string"
        },
        "external-id": {
          "description": "",
          "type": "string"
        },
        "funding-date": {
          "description": "",
          "type": "string",
          "format": "date"
        },
        "futures-account-purpose": {
          "description": "",
          "type": "string"
        },
        "investment-objective": {
          "description": "",
          "type": "string"
        },
        "investment-time-horizon": {
          "description": "",
          "type": "string"
        },
        "is-closed": {
          "description": "",
          "type": "boolean"
        },
        "is-firm-error": {
          "description": "",
          "type": "boolean"
        },
        "is-firm-proprietary": {
          "description": "",
          "type": "boolean"
        },
        "is-foreign": {
          "description": "",
          "type": "string"
        },
        "is-futures-approved": {
          "description": "",
          "type": "boolean"
        },
        "liquidity-needs": {
          "description": "",
          "type": "string"
        },
        "margin-or-cash": {
          "description": "",
          "type": "string"
        },
        "nickname": {
          "description": "",
          "type": "string"
        },
        "opened-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "regulatory-domain": {
          "description": "",
          "type": "string"
        },
        "risk-tolerance": {
          "description": "",
          "type": "string"
        },
        "submitting-user-id": {
          "description": "",
          "type": "string"
        },
        "suitable-options-level": {
          "description": "",
          "type": "string"
        }
      },
      "description": "Account model"
    },
    "Customer": {
      "type": "object",
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "first-name": {
          "description": "",
          "type": "string"
        },
        "first-surname": {
          "description": "",
          "type": "string"
        },
        "last-name": {
          "description": "",
          "type": "string"
        },
        "middle-name": {
          "description": "",
          "type": "string"
        },
        "prefix-name": {
          "description": "",
          "type": "string"
        },
        "second-surname": {
          "description": "",
          "type": "string"
        },
        "suffix-name": {
          "description": "",
          "type": "string"
        },
        "address": {
          "type": "object",
          "properties": {
            "city": {
              "description": "",
              "type": "string"
            },
            "country": {
              "description": "",
              "type": "string"
            },
            "is-domestic": {
              "description": "",
              "type": "string"
            },
            "is-foreign": {
              "description": "",
              "type": "string"
            },
            "postal-code": {
              "description": "",
              "type": "string"
            },
            "state-region": {
              "description": "",
              "type": "string"
            },
            "street-one": {
              "description": "",
              "type": "string"
            },
            "street-three": {
              "description": "",
              "type": "string"
            },
            "street-two": {
              "description": "",
              "type": "string"
            }
          },
          "description": ""
        },
        "customer-suitability": {
          "type": "object",
          "properties": {
            "id": {
              "description": "",
              "type": "string"
            },
            "annual-net-income": {
              "description": "",
              "type": "integer",
              "format": "int32"
            },
            "covered-options-trading-experience": {
              "description": "",
              "type": "string"
            },
            "customer-id": {
              "description": "",
              "type": "integer",
              "format": "int32"
            },
            "employer-name": {
              "description": "",
              "type": "string"
            },
            "employment-status": {
              "description": "",
              "type": "string"
            },
            "futures-trading-experience": {
              "description": "",
              "type": "string"
            },
            "job-title": {
              "description": "",
              "type": "string"
            },
            "liquid-net-worth": {
              "description": "",
              "type": "integer",
              "format": "int32"
            },
            "marital-status": {
              "description": "",
              "type": "string"
            },
            "net-worth": {
              "description": "",
              "type": "integer",
              "format": "int32"
            },
            "number-of-dependents": {
              "description": "",
              "type": "integer",
              "format": "int32"
            },
            "occupation": {
              "description": "",
              "type": "string"
            },
            "stock-trading-experience": {
              "description": "",
              "type": "string"
            },
            "tax-bracket": {
              "description": "",
              "type": "string"
            },
            "uncovered-options-trading-experience": {
              "description": "",
              "type": "string"
            }
          },
          "description": ""
        },
        "mailing-address": {
          "type": "object",
          "properties": {
            "city": {
              "description": "",
              "type": "string"
            },
            "country": {
              "description": "",
              "type": "string"
            },
            "is-domestic": {
              "description": "",
              "type": "string"
            },
            "is-foreign": {
              "description": "",
              "type": "string"
            },
            "postal-code": {
              "description": "",
              "type": "string"
            },
            "state-region": {
              "description": "",
              "type": "string"
            },
            "street-one": {
              "description": "",
              "type": "string"
            },
            "street-three": {
              "description": "",
              "type": "string"
            },
            "street-two": {
              "description": "",
              "type": "string"
            }
          },
          "description": ""
        },
        "is-foreign": {
          "description": "",
          "type": "string"
        },
        "regulatory-domain": {
          "description": "",
          "type": "string"
        },
        "usa-citizenship-type": {
          "description": "",
          "type": "string"
        },
        "home-phone-number": {
          "description": "",
          "type": "string"
        },
        "mobile-phone-number": {
          "description": "",
          "type": "string"
        },
        "work-phone-number": {
          "description": "",
          "type": "string"
        },
        "birth-date": {
          "description": "",
          "type": "string"
        },
        "email": {
          "description": "",
          "type": "string"
        },
        "external-id": {
          "description": "",
          "type": "string"
        },
        "foreign-tax-number": {
          "description": "",
          "type": "string"
        },
        "tax-number": {
          "description": "",
          "type": "string"
        },
        "tax-number-type": {
          "description": "",
          "type": "string"
        },
        "birth-country": {
          "description": "",
          "type": "string"
        },
        "citizenship-country": {
          "description": "",
          "type": "string"
        },
        "visa-expiration-date": {
          "description": "",
          "type": "string"
        },
        "visa-type": {
          "description": "",
          "type": "string"
        },
        "agreed-to-margining": {
          "description": "",
          "type": "boolean"
        },
        "subject-to-tax-withholding": {
          "description": "",
          "type": "boolean"
        },
        "agreed-to-terms": {
          "description": "",
          "type": "boolean"
        },
        "signature-of-agreement": {
          "description": "",
          "type": "boolean"
        },
        "desk-customer-id": {
          "description": "",
          "type": "string"
        },
        "ext-crm-id": {
          "description": "",
          "type": "string"
        },
        "family-member-names": {
          "description": "",
          "type": "string"
        },
        "gender": {
          "description": "",
          "type": "string"
        },
        "has-industry-affiliation": {
          "description": "",
          "type": "boolean"
        },
        "has-institutional-assets": {
          "description": "",
          "type": "string"
        },
        "has-listed-affiliation": {
          "description": "",
          "type": "boolean"
        },
        "has-political-affiliation": {
          "description": "",
          "type": "boolean"
        },
        "industry-affiliation-firm": {
          "description": "",
          "type": "string"
        },
        "is-investment-adviser": {
          "description": "",
          "type": "string"
        },
        "listed-affiliation-symbol": {
          "description": "",
          "type": "string"
        },
        "political-organization": {
          "description": "",
          "type": "string"
        },
        "user-id": {
          "description": "",
          "type": "string"
        },
        "has-delayed-quotes": {
          "description": "",
          "type": "boolean"
        },
        "has-pending-or-approved-application": {
          "description": "",
          "type": "string"
        },
        "is-professional": {
          "description": "",
          "type": "boolean"
        },
        "permitted-account-types": {
          "description": "",
          "type": "string"
        },
        "created-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "entity": {
          "type": "object",
          "properties": {
            "id": {
              "description": "",
              "type": "string"
            },
            "address": {
              "type": "object",
              "properties": {
                "city": {
                  "description": "",
                  "type": "string"
                },
                "country": {
                  "description": "",
                  "type": "string"
                },
                "is-domestic": {
                  "description": "",
                  "type": "string"
                },
                "is-foreign": {
                  "description": "",
                  "type": "string"
                },
                "postal-code": {
                  "description": "",
                  "type": "string"
                },
                "state-region": {
                  "description": "",
                  "type": "string"
                },
                "street-one": {
                  "description": "",
                  "type": "string"
                },
                "street-three": {
                  "description": "",
                  "type": "string"
                },
                "street-two": {
                  "description": "",
                  "type": "string"
                }
              },
              "description": ""
            },
            "business-nature": {
              "description": "",
              "type": "string"
            },
            "email": {
              "description": "",
              "type": "string"
            },
            "entity-officers": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "",
                    "type": "string"
                  },
                  "external-id": {
                    "description": "",
                    "type": "string"
                  },
                  "first-name": {
                    "description": "",
                    "type": "string"
                  },
                  "last-name": {
                    "description": "",
                    "type": "string"
                  },
                  "middle-name": {
                    "description": "",
                    "type": "string"
                  },
                  "prefix-name": {
                    "description": "",
                    "type": "string"
                  },
                  "suffix-name": {
                    "description": "",
                    "type": "string"
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "city": {
                        "description": "",
                        "type": "string"
                      },
                      "country": {
                        "description": "",
                        "type": "string"
                      },
                      "is-domestic": {
                        "description": "",
                        "type": "string"
                      },
                      "is-foreign": {
                        "description": "",
                        "type": "string"
                      },
                      "postal-code": {
                        "description": "",
                        "type": "string"
                      },
                      "state-region": {
                        "description": "",
                        "type": "string"
                      },
                      "street-one": {
                        "description": "",
                        "type": "string"
                      },
                      "street-three": {
                        "description": "",
                        "type": "string"
                      },
                      "street-two": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "description": ""
                  },
                  "birth-country": {
                    "description": "",
                    "type": "string"
                  },
                  "birth-date": {
                    "description": "",
                    "type": "string",
                    "format": "date"
                  },
                  "citizenship-country": {
                    "description": "",
                    "type": "string"
                  },
                  "email": {
                    "description": "",
                    "type": "string"
                  },
                  "employer-name": {
                    "description": "",
                    "type": "string"
                  },
                  "employment-status": {
                    "description": "",
                    "type": "string"
                  },
                  "home-phone-number": {
                    "description": "",
                    "type": "string"
                  },
                  "is-foreign": {
                    "description": "",
                    "type": "string"
                  },
                  "job-title": {
                    "description": "",
                    "type": "string"
                  },
                  "marital-status": {
                    "description": "",
                    "type": "string"
                  },
                  "mobile-phone-number": {
                    "description": "",
                    "type": "string"
                  },
                  "number-of-dependents": {
                    "description": "",
                    "type": "string"
                  },
                  "occupation": {
                    "description": "",
                    "type": "string"
                  },
                  "owner-of-record": {
                    "description": "",
                    "type": "boolean"
                  },
                  "relationship-to-entity": {
                    "description": "",
                    "type": "string"
                  },
                  "tax-number": {
                    "description": "",
                    "type": "string"
                  },
                  "tax-number-type": {
                    "description": "",
                    "type": "string"
                  },
                  "usa-citizenship-type": {
                    "description": "",
                    "type": "string"
                  },
                  "visa-expiration-date": {
                    "description": "",
                    "type": "string",
                    "format": "date"
                  },
                  "visa-type": {
                    "description": "",
                    "type": "string"
                  },
                  "work-phone-number": {
                    "description": "",
                    "type": "string"
                  }
                },
                "description": ""
              }
            },
            "entity-suitability": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "",
                  "type": "string"
                },
                "annual-net-income": {
                  "description": "",
                  "type": "integer",
                  "format": "int32"
                },
                "covered-options-trading-experience": {
                  "description": "",
                  "type": "string"
                },
                "entity-id": {
                  "description": "",
                  "type": "integer",
                  "format": "int32"
                },
                "futures-trading-experience": {
                  "description": "",
                  "type": "string"
                },
                "liquid-net-worth": {
                  "description": "",
                  "type": "integer",
                  "format": "int32"
                },
                "net-worth": {
                  "description": "",
                  "type": "integer",
                  "format": "int32"
                },
                "stock-trading-experience": {
                  "description": "",
                  "type": "string"
                },
                "tax-bracket": {
                  "description": "",
                  "type": "string"
                },
                "uncovered-options-trading-experience": {
                  "description": "",
                  "type": "string"
                }
              },
              "description": ""
            },
            "entity-type": {
              "description": "",
              "type": "string"
            },
            "foreign-institution": {
              "description": "",
              "type": "string"
            },
            "grantor-birth-date": {
              "description": "",
              "type": "string"
            },
            "grantor-email": {
              "description": "",
              "type": "string"
            },
            "grantor-first-name": {
              "description": "",
              "type": "string"
            },
            "grantor-last-name": {
              "description": "",
              "type": "string"
            },
            "grantor-middle-name": {
              "description": "",
              "type": "string"
            },
            "grantor-tax-number": {
              "description": "",
              "type": "string"
            },
            "has-foreign-bank-affiliation": {
              "description": "",
              "type": "string"
            },
            "has-foreign-institution-affiliation": {
              "description": "",
              "type": "string"
            },
            "is-domestic": {
              "description": "",
              "type": "string"
            },
            "legal-name": {
              "description": "",
              "type": "string"
            },
            "phone-number": {
              "description": "",
              "type": "string"
            },
            "tax-number": {
              "description": "",
              "type": "string"
            }
          },
          "description": ""
        },
        "identifiable-type": {
          "description": "",
          "type": "string"
        },
        "person": {
          "type": "object",
          "properties": {
            "external-id": {
              "description": "",
              "type": "string"
            },
            "first-name": {
              "description": "",
              "type": "string"
            },
            "last-name": {
              "description": "",
              "type": "string"
            },
            "middle-name": {
              "description": "",
              "type": "string"
            },
            "prefix-name": {
              "description": "",
              "type": "string"
            },
            "suffix-name": {
              "description": "",
              "type": "string"
            },
            "birth-country": {
              "description": "",
              "type": "string"
            },
            "birth-date": {
              "description": "",
              "type": "string",
              "format": "date"
            },
            "citizenship-country": {
              "description": "",
              "type": "string"
            },
            "usa-citizenship-type": {
              "description": "",
              "type": "string"
            },
            "visa-expiration-date": {
              "description": "",
              "type": "string",
              "format": "date"
            },
            "visa-type": {
              "description": "",
              "type": "string"
            },
            "employer-name": {
              "description": "",
              "type": "string"
            },
            "employment-status": {
              "description": "",
              "type": "string"
            },
            "job-title": {
              "description": "",
              "type": "string"
            },
            "marital-status": {
              "description": "",
              "type": "string"
            },
            "number-of-dependents": {
              "description": "",
              "type": "string"
            },
            "occupation": {
              "description": "",
              "type": "string"
            }
          },
          "description": ""
        }
      },
      "description": "Customer model"
    },
    "Watchlist": {
      "type": "object",
      "properties": {
        "name": {
          "description": "",
          "type": "string"
        },
        "watchlist-entries": {
          "description": "",
          "type": "object"
        },
        "cms-id": {
          "description": "",
          "type": "string"
        },
        "group-name": {
          "description": "",
          "type": "string"
        },
        "order-index": {
          "description": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Watchlist model"
    },
    "postWatchlists": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The watchlist name"
        },
        "group-name": {
          "type": "string",
          "description": "The group to which this watchlist belongs to"
        },
        "order-index": {
          "type": "integer",
          "format": "int32",
          "description": "The order index of the watchlist",
          "default": 9999
        },
        "watchlist-entries": {
          "type": "array",
          "description": "The instruments being watched",
          "items": {
            "type": "object",
            "properties": {
              "symbol": {
                "type": "string",
                "description": "The instrument symbol"
              },
              "instrument-type": {
                "type": "string",
                "description": "The instrument type"
              }
            },
            "required": [
              "symbol"
            ]
          }
        }
      },
      "required": [
        "name",
        "watchlist-entries"
      ],
      "description": "Create an account watchlist"
    },
    "putWatchlistsWatchlistName": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The watchlist name"
        },
        "group-name": {
          "type": "string",
          "description": "The group to which this watchlist belongs to"
        },
        "order-index": {
          "type": "integer",
          "format": "int32",
          "description": "The order index of the watchlist",
          "default": 9999
        },
        "watchlist-entries": {
          "type": "array",
          "description": "The instruments being watched",
          "items": {
            "type": "object",
            "properties": {
              "symbol": {
                "type": "string",
                "description": "The instrument symbol"
              },
              "instrument-type": {
                "type": "string",
                "description": "The instrument type"
              }
            },
            "required": [
              "symbol"
            ]
          }
        }
      },
      "required": [
        "name",
        "watchlist-entries"
      ],
      "description": "Replace all properties of an account watchlist"
    },
    "PairsWatchlist": {
      "type": "object",
      "properties": {
        "name": {
          "description": "",
          "type": "string"
        },
        "pairs-equations": {
          "description": "",
          "type": "object"
        },
        "order-index": {
          "description": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "PairsWatchlist model"
    },
    "Cryptocurrency": {
      "type": "object",
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "active": {
          "description": "",
          "type": "boolean"
        },
        "description": {
          "description": "",
          "type": "string"
        },
        "instrument-type": {
          "description": "",
          "type": "string"
        },
        "is-closing-only": {
          "description": "",
          "type": "boolean"
        },
        "short-description": {
          "description": "",
          "type": "string"
        },
        "streamer-symbol": {
          "description": "",
          "type": "string"
        },
        "symbol": {
          "description": "",
          "type": "string"
        },
        "tick-size": {
          "description": "",
          "type": "number",
          "format": "double"
        }
      },
      "description": "Cryptocurrency model"
    },
    "Equity": {
      "type": "object",
      "properties": {
        "active": {
          "description": "",
          "type": "boolean"
        },
        "borrow-rate": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "bypass-manual-review": {
          "description": "",
          "type": "boolean"
        },
        "country-of-incorporation": {
          "description": "",
          "type": "string"
        },
        "country-of-taxation": {
          "description": "",
          "type": "string"
        },
        "description": {
          "description": "",
          "type": "string"
        },
        "halted-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "instrument-sub-type": {
          "description": "",
          "type": "string"
        },
        "instrument-type": {
          "description": "",
          "type": "string"
        },
        "is-closing-only": {
          "description": "",
          "type": "boolean"
        },
        "is-etf": {
          "description": "",
          "type": "boolean"
        },
        "is-fractional-quantity-eligible": {
          "description": "",
          "type": "boolean"
        },
        "is-illiquid": {
          "description": "",
          "type": "boolean"
        },
        "is-index": {
          "description": "",
          "type": "boolean"
        },
        "is-options-closing-only": {
          "description": "",
          "type": "boolean"
        },
        "lendability": {
          "description": "",
          "type": "string"
        },
        "listed-market": {
          "description": "",
          "type": "string"
        },
        "market-time-instrument-collection": {
          "description": "",
          "type": "string"
        },
        "short-description": {
          "description": "",
          "type": "string"
        },
        "stops-trading-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "streamer-symbol": {
          "description": "",
          "type": "string"
        },
        "symbol": {
          "description": "",
          "type": "string"
        },
        "underlying-product-type": {
          "description": "",
          "type": "string"
        },
        "option-tick-sizes": {
          "description": "",
          "type": "object",
          "properties": {
            "symbol": {
              "description": "",
              "type": "string"
            },
            "threshold": {
              "description": "",
              "type": "number",
              "format": "double"
            },
            "value": {
              "description": "",
              "type": "number",
              "format": "double"
            }
          }
        },
        "tick-sizes": {
          "description": "",
          "type": "object",
          "properties": {
            "symbol": {
              "description": "",
              "type": "string"
            },
            "threshold": {
              "description": "",
              "type": "number",
              "format": "double"
            },
            "value": {
              "description": "",
              "type": "number",
              "format": "double"
            }
          }
        }
      },
      "description": "Equity model"
    },
    "EquityOption": {
      "type": "object",
      "properties": {
        "active": {
          "description": "",
          "type": "boolean"
        },
        "days-to-expiration": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "exercise-style": {
          "description": "",
          "type": "string"
        },
        "expiration-date": {
          "description": "",
          "type": "string",
          "format": "date"
        },
        "expiration-type": {
          "description": "",
          "type": "string"
        },
        "expires-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "halted-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "instrument-type": {
          "description": "",
          "type": "string"
        },
        "is-closing-only": {
          "description": "",
          "type": "boolean"
        },
        "listed-market": {
          "description": "",
          "type": "string"
        },
        "market-time-instrument-collection": {
          "description": "",
          "type": "string"
        },
        "old-security-number": {
          "description": "",
          "type": "string"
        },
        "option-chain-type": {
          "description": "",
          "type": "string"
        },
        "option-type": {
          "description": "",
          "type": "string"
        },
        "root-symbol": {
          "description": "",
          "type": "string"
        },
        "settlement-type": {
          "description": "",
          "type": "string"
        },
        "shares-per-contract": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "stops-trading-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "streamer-symbol": {
          "description": "",
          "type": "string"
        },
        "strike-price": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "symbol": {
          "description": "",
          "type": "string"
        },
        "underlying-symbol": {
          "description": "",
          "type": "string"
        }
      },
      "description": "EquityOption model"
    },
    "Future": {
      "type": "object",
      "properties": {
        "active": {
          "description": "",
          "type": "boolean"
        },
        "active-month": {
          "description": "",
          "type": "boolean"
        },
        "back-month-first-calendar-symbol": {
          "description": "",
          "type": "boolean"
        },
        "closing-only-date": {
          "description": "",
          "type": "string",
          "format": "date"
        },
        "contract-size": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "display-factor": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "exchange": {
          "description": "",
          "type": "string"
        },
        "exchange-data": {
          "description": "",
          "type": "object"
        },
        "expiration-date": {
          "description": "",
          "type": "string",
          "format": "date"
        },
        "expires-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "first-notice-date": {
          "description": "",
          "type": "string",
          "format": "date"
        },
        "product-group": {
          "description": "",
          "type": "string"
        },
        "is-closing-only": {
          "description": "",
          "type": "boolean"
        },
        "last-trade-date": {
          "description": "",
          "type": "string",
          "format": "date"
        },
        "main-fraction": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "next-active-month": {
          "description": "",
          "type": "boolean"
        },
        "notional-multiplier": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "product-code": {
          "description": "",
          "type": "string"
        },
        "roll-target-symbol": {
          "description": "",
          "type": "string"
        },
        "security-id": {
          "description": "",
          "type": "string"
        },
        "stops-trading-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "streamer-exchange-code": {
          "description": "",
          "type": "string"
        },
        "streamer-symbol": {
          "description": "",
          "type": "string"
        },
        "sub-fraction": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "symbol": {
          "description": "",
          "type": "string"
        },
        "tick-size": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "is-tradeable": {
          "description": "",
          "type": "boolean"
        },
        "true-underlying-symbol": {
          "description": "",
          "type": "string"
        },
        "future-etf-equivalent": {
          "description": "",
          "type": "object",
          "properties": {
            "share-quantity": {
              "description": "",
              "type": "integer",
              "format": "int32"
            },
            "symbol": {
              "description": "",
              "type": "string"
            }
          }
        },
        "future-product": {
          "description": "",
          "type": "object",
          "properties": {
            "active-months": {
              "description": "",
              "type": "string"
            },
            "back-month-first-calendar-symbol": {
              "description": "",
              "type": "boolean"
            },
            "base-tick": {
              "description": "",
              "type": "integer",
              "format": "int32"
            },
            "cash-settled": {
              "description": "",
              "type": "boolean"
            },
            "code": {
              "description": "",
              "type": "string"
            },
            "contract-limit": {
              "description": "",
              "type": "integer",
              "format": "int32"
            },
            "description": {
              "description": "",
              "type": "string"
            },
            "display-factor": {
              "description": "",
              "type": "number",
              "format": "double"
            },
            "exchange": {
              "description": "",
              "type": "string"
            },
            "first-notice": {
              "description": "",
              "type": "boolean"
            },
            "listed-months": {
              "description": "",
              "type": "string"
            },
            "market-sector": {
              "description": "",
              "type": "string"
            },
            "notional-multiplier": {
              "description": "",
              "type": "number",
              "format": "double"
            },
            "price-format": {
              "description": "",
              "type": "string"
            },
            "product-subtype": {
              "description": "",
              "type": "string"
            },
            "product-type": {
              "description": "",
              "type": "string"
            },
            "security-group": {
              "description": "",
              "type": "string"
            },
            "small-notional": {
              "description": "",
              "type": "boolean"
            },
            "streamer-exchange-code": {
              "description": "",
              "type": "string"
            },
            "sub-tick": {
              "description": "",
              "type": "integer",
              "format": "int32"
            },
            "supported": {
              "description": "",
              "type": "boolean"
            },
            "root-symbol": {
              "description": "",
              "type": "string"
            },
            "tick-size": {
              "description": "",
              "type": "number",
              "format": "double"
            },
            "true-underlying-code": {
              "description": "",
              "type": "string"
            },
            "underlying-description": {
              "description": "",
              "type": "string"
            },
            "underlying-identifier": {
              "description": "",
              "type": "string"
            }
          }
        },
        "option-tick-sizes": {
          "description": "",
          "type": "object",
          "properties": {
            "symbol": {
              "description": "",
              "type": "string"
            },
            "threshold": {
              "description": "",
              "type": "number",
              "format": "double"
            },
            "value": {
              "description": "",
              "type": "number",
              "format": "double"
            }
          }
        },
        "spread-tick-sizes": {
          "description": "",
          "type": "object",
          "properties": {
            "symbol": {
              "description": "",
              "type": "string"
            },
            "threshold": {
              "description": "",
              "type": "number",
              "format": "double"
            },
            "value": {
              "description": "",
              "type": "number",
              "format": "double"
            }
          }
        },
        "tick-sizes": {
          "description": "",
          "type": "object",
          "properties": {
            "symbol": {
              "description": "",
              "type": "string"
            },
            "threshold": {
              "description": "",
              "type": "number",
              "format": "double"
            },
            "value": {
              "description": "",
              "type": "number",
              "format": "double"
            }
          }
        }
      },
      "description": "Future model"
    },
    "FutureOptionProduct": {
      "type": "object",
      "properties": {
        "cash-settled": {
          "description": "",
          "type": "boolean"
        },
        "code": {
          "description": "",
          "type": "string"
        },
        "display-factor": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "exchange": {
          "description": "",
          "type": "string"
        },
        "expiration-type": {
          "description": "",
          "type": "string"
        },
        "is-am-settled": {
          "description": "",
          "type": "boolean"
        },
        "itm-rule": {
          "description": "",
          "type": "string"
        },
        "market-sector": {
          "description": "",
          "type": "string"
        },
        "product-subtype": {
          "description": "",
          "type": "string"
        },
        "product-type": {
          "description": "",
          "type": "string"
        },
        "root-symbol": {
          "description": "",
          "type": "string"
        },
        "settlement-delay-days": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "supported": {
          "description": "",
          "type": "boolean"
        }
      },
      "description": "FutureOptionProduct model"
    },
    "FutureOption": {
      "type": "object",
      "properties": {
        "active": {
          "description": "",
          "type": "boolean"
        },
        "days-to-expiration": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "display-factor": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "exchange": {
          "description": "",
          "type": "string"
        },
        "exercise-style": {
          "description": "",
          "type": "string"
        },
        "expiration-date": {
          "description": "",
          "type": "string",
          "format": "date"
        },
        "expires-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "future-price-ratio": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "is-closing-only": {
          "description": "",
          "type": "boolean"
        },
        "is-confirmed": {
          "description": "",
          "type": "boolean"
        },
        "is-exercisable-weekly": {
          "description": "",
          "type": "boolean"
        },
        "is-primary-deliverable": {
          "description": "",
          "type": "boolean"
        },
        "is-vanilla": {
          "description": "",
          "type": "boolean"
        },
        "last-trade-time": {
          "description": "",
          "type": "string"
        },
        "maturity-date": {
          "description": "",
          "type": "string",
          "format": "date"
        },
        "multiplier": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "notional-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "option-root-symbol": {
          "description": "",
          "type": "string"
        },
        "option-type": {
          "description": "",
          "type": "string"
        },
        "product-code": {
          "description": "",
          "type": "string"
        },
        "root-symbol": {
          "description": "",
          "type": "string"
        },
        "security-id": {
          "description": "",
          "type": "string"
        },
        "settlement-type": {
          "description": "",
          "type": "string"
        },
        "stops-trading-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "streamer-symbol": {
          "description": "",
          "type": "string"
        },
        "strike-factor": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "strike-price": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "symbol": {
          "description": "",
          "type": "string"
        },
        "underlying-count": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "underlying-symbol": {
          "description": "",
          "type": "string"
        },
        "future-option-product": {
          "description": "",
          "type": "object",
          "properties": {
            "cash-settled": {
              "description": "",
              "type": "boolean"
            },
            "code": {
              "description": "",
              "type": "string"
            },
            "display-factor": {
              "description": "",
              "type": "number",
              "format": "double"
            },
            "exchange": {
              "description": "",
              "type": "string"
            },
            "expiration-type": {
              "description": "",
              "type": "string"
            },
            "is-am-settled": {
              "description": "",
              "type": "boolean"
            },
            "itm-rule": {
              "description": "",
              "type": "string"
            },
            "market-sector": {
              "description": "",
              "type": "string"
            },
            "product-subtype": {
              "description": "",
              "type": "string"
            },
            "product-type": {
              "description": "",
              "type": "string"
            },
            "root-symbol": {
              "description": "",
              "type": "string"
            },
            "settlement-delay-days": {
              "description": "",
              "type": "integer",
              "format": "int32"
            },
            "supported": {
              "description": "",
              "type": "boolean"
            }
          }
        }
      },
      "description": "FutureOption model"
    },
    "FutureProduct": {
      "type": "object",
      "properties": {
        "active-months": {
          "description": "",
          "type": "string"
        },
        "back-month-first-calendar-symbol": {
          "description": "",
          "type": "boolean"
        },
        "base-tick": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "cash-settled": {
          "description": "",
          "type": "boolean"
        },
        "code": {
          "description": "",
          "type": "string"
        },
        "contract-limit": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "description": "",
          "type": "string"
        },
        "display-factor": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "exchange": {
          "description": "",
          "type": "string"
        },
        "first-notice": {
          "description": "",
          "type": "boolean"
        },
        "listed-months": {
          "description": "",
          "type": "string"
        },
        "market-sector": {
          "description": "",
          "type": "string"
        },
        "notional-multiplier": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "price-format": {
          "description": "",
          "type": "string"
        },
        "product-subtype": {
          "description": "",
          "type": "string"
        },
        "product-type": {
          "description": "",
          "type": "string"
        },
        "security-group": {
          "description": "",
          "type": "string"
        },
        "small-notional": {
          "description": "",
          "type": "boolean"
        },
        "streamer-exchange-code": {
          "description": "",
          "type": "string"
        },
        "sub-tick": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "supported": {
          "description": "",
          "type": "boolean"
        },
        "root-symbol": {
          "description": "",
          "type": "string"
        },
        "tick-size": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "true-underlying-code": {
          "description": "",
          "type": "string"
        },
        "underlying-description": {
          "description": "",
          "type": "string"
        },
        "underlying-identifier": {
          "description": "",
          "type": "string"
        }
      },
      "description": "FutureProduct model"
    },
    "QuantityDecimalPrecision": {
      "type": "object",
      "properties": {
        "instrument-type": {
          "description": "",
          "type": "string"
        },
        "minimum-increment-precision": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "symbol": {
          "description": "",
          "type": "string"
        },
        "value": {
          "description": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "QuantityDecimalPrecision model"
    },
    "Warrant": {
      "type": "object",
      "properties": {
        "active": {
          "description": "",
          "type": "boolean"
        },
        "cusip": {
          "description": "",
          "type": "string"
        },
        "description": {
          "description": "",
          "type": "string"
        },
        "instrument-type": {
          "description": "",
          "type": "string"
        },
        "is-closing-only": {
          "description": "",
          "type": "boolean"
        },
        "listed-market": {
          "description": "",
          "type": "string"
        },
        "symbol": {
          "description": "",
          "type": "string"
        }
      },
      "description": "Warrant model"
    },
    "FuturesNestedOptionChainSerializer": {
      "type": "object",
      "properties": {
        "futures": {
          "description": "",
          "type": "object",
          "properties": {
            "symbol": {
              "description": "",
              "type": "string"
            },
            "root-symbol": {
              "description": "",
              "type": "string"
            },
            "maturity-date": {
              "description": "",
              "type": "string",
              "format": "date"
            },
            "expiration-date": {
              "description": "",
              "type": "string",
              "format": "date"
            },
            "days-to-expiration": {
              "description": "",
              "type": "integer",
              "format": "int32"
            },
            "active-month": {
              "description": "",
              "type": "boolean"
            },
            "next-active-month": {
              "description": "",
              "type": "boolean"
            },
            "stops-trading-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "expires-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "option-chains": {
          "description": "",
          "type": "object",
          "properties": {
            "underlying-symbol": {
              "description": "",
              "type": "string"
            },
            "root-symbol": {
              "description": "",
              "type": "string"
            },
            "exercise-style": {
              "description": "",
              "type": "string"
            },
            "expirations": {
              "description": "",
              "type": "object",
              "properties": {
                "underlying-symbol": {
                  "description": "",
                  "type": "string"
                },
                "root-symbol": {
                  "description": "",
                  "type": "string"
                },
                "option-root-symbol": {
                  "description": "",
                  "type": "string"
                },
                "option-contract-symbol": {
                  "description": "",
                  "type": "string"
                },
                "asset": {
                  "description": "",
                  "type": "string"
                },
                "expiration-date": {
                  "description": "",
                  "type": "string",
                  "format": "date"
                },
                "days-to-expiration": {
                  "description": "",
                  "type": "integer",
                  "format": "int32"
                },
                "expiration-type": {
                  "description": "",
                  "type": "string"
                },
                "settlement-type": {
                  "description": "",
                  "type": "string"
                },
                "notional-value": {
                  "description": "",
                  "type": "number",
                  "format": "double"
                },
                "display-factor": {
                  "description": "",
                  "type": "number",
                  "format": "double"
                },
                "strike-factor": {
                  "description": "",
                  "type": "number",
                  "format": "double"
                },
                "stops-trading-at": {
                  "description": "",
                  "type": "string",
                  "format": "date-time"
                },
                "expires-at": {
                  "description": "",
                  "type": "string",
                  "format": "date-time"
                },
                "tick-sizes": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "symbol": {
                      "description": "",
                      "type": "string"
                    },
                    "threshold": {
                      "description": "",
                      "type": "number",
                      "format": "double"
                    },
                    "value": {
                      "description": "",
                      "type": "number",
                      "format": "double"
                    }
                  }
                },
                "strikes": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "strike-price": {
                      "description": "",
                      "type": "number",
                      "format": "double"
                    },
                    "call": {
                      "description": "",
                      "type": "string"
                    },
                    "call-streamer-symbol": {
                      "description": "",
                      "type": "string"
                    },
                    "put": {
                      "description": "",
                      "type": "string"
                    },
                    "put-streamer-symbol": {
                      "description": "",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "description": "FuturesNestedOptionChainSerializer model"
    },
    "CompactOptionChainSerializer": {
      "type": "object",
      "properties": {
        "underlying-symbol": {
          "description": "",
          "type": "string"
        },
        "root-symbol": {
          "description": "",
          "type": "string"
        },
        "option-chain-type": {
          "description": "",
          "type": "string"
        },
        "settlement-type": {
          "description": "",
          "type": "string"
        },
        "shares-per-contract": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "expiration-type": {
          "description": "",
          "type": "string"
        },
        "deliverables": {
          "description": "",
          "type": "object",
          "properties": {
            "id": {
              "description": "",
              "type": "integer",
              "format": "int32"
            },
            "amount": {
              "description": "",
              "type": "number",
              "format": "double"
            },
            "deliverable-type": {
              "description": "",
              "type": "string"
            },
            "description": {
              "description": "",
              "type": "string"
            },
            "instrument-type": {
              "description": "",
              "type": "string"
            },
            "percent": {
              "description": "",
              "type": "string"
            },
            "root-symbol": {
              "description": "",
              "type": "string"
            },
            "symbol": {
              "description": "",
              "type": "string"
            }
          }
        },
        "symbols": {
          "description": "",
          "type": "string"
        },
        "streamer-symbols": {
          "description": "",
          "type": "string"
        }
      },
      "description": "CompactOptionChainSerializer model"
    },
    "NestedOptionChainSerializer": {
      "type": "object",
      "properties": {
        "underlying-symbol": {
          "description": "",
          "type": "string"
        },
        "root-symbol": {
          "description": "",
          "type": "string"
        },
        "option-chain-type": {
          "description": "",
          "type": "string"
        },
        "shares-per-contract": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "tick-sizes": {
          "description": "",
          "type": "object",
          "properties": {
            "symbol": {
              "description": "",
              "type": "string"
            },
            "threshold": {
              "description": "",
              "type": "number",
              "format": "double"
            },
            "value": {
              "description": "",
              "type": "number",
              "format": "double"
            }
          }
        },
        "deliverables": {
          "description": "",
          "type": "object",
          "properties": {
            "id": {
              "description": "",
              "type": "integer",
              "format": "int32"
            },
            "amount": {
              "description": "",
              "type": "number",
              "format": "double"
            },
            "deliverable-type": {
              "description": "",
              "type": "string"
            },
            "description": {
              "description": "",
              "type": "string"
            },
            "instrument-type": {
              "description": "",
              "type": "string"
            },
            "percent": {
              "description": "",
              "type": "string"
            },
            "root-symbol": {
              "description": "",
              "type": "string"
            },
            "symbol": {
              "description": "",
              "type": "string"
            }
          }
        },
        "expirations": {
          "description": "",
          "type": "object",
          "properties": {
            "expiration-type": {
              "description": "",
              "type": "string"
            },
            "expiration-date": {
              "description": "",
              "type": "string",
              "format": "date"
            },
            "days-to-expiration": {
              "description": "",
              "type": "integer",
              "format": "int32"
            },
            "settlement-type": {
              "description": "",
              "type": "string"
            },
            "strikes": {
              "description": "",
              "type": "object",
              "properties": {
                "strike-price": {
                  "description": "",
                  "type": "number",
                  "format": "double"
                },
                "call": {
                  "description": "",
                  "type": "string"
                },
                "call-streamer-symbol": {
                  "description": "",
                  "type": "string"
                },
                "put": {
                  "description": "",
                  "type": "string"
                },
                "put-streamer-symbol": {
                  "description": "",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "description": "NestedOptionChainSerializer model"
    },
    "BacktestPost": {
      "type": "object",
      "properties": {
        "symbol": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "legs": {
          "type": "array",
          "items": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/Leg"
              }
            ]
          }
        },
        "entryConditions": {
          "allOf": [
            {
              "$ref": "#/components/schemas/EntryConditions"
            }
          ]
        },
        "exitConditions": {
          "allOf": [
            {
              "$ref": "#/components/schemas/ExitConditions"
            }
          ]
        }
      }
    },
    "BacktestGet": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "symbol": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "legs": {
          "type": "array",
          "items": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/Leg"
              }
            ]
          }
        },
        "entryConditions": {
          "allOf": [
            {
              "$ref": "#/components/schemas/EntryConditions"
            }
          ]
        },
        "exitConditions": {
          "allOf": [
            {
              "$ref": "#/components/schemas/ExitConditions"
            }
          ]
        },
        "ETA": {
          "type": "number"
        },
        "progress": {
          "type": "number"
        },
        "status": {
          "type": "string",
          "oneOf": [
            {
              "title": "Pending",
              "const": "pending"
            },
            {
              "title": "Running",
              "const": "running"
            },
            {
              "title": "Completed",
              "const": "completed"
            }
          ]
        },
        "statistics": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "trials": {
          "type": "array",
          "items": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Trial"
              }
            ]
          }
        },
        "snapshots": {
          "type": "array",
          "items": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Snapshot"
              }
            ]
          }
        },
        "notices": {
          "description": "Conditional annotations appearing if specific conditions are met (e.g. overlapping due to stock split)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Snapshot": {
      "type": "object",
      "properties": {
        "dateTime": {
          "type": "string"
        },
        "profitLoss": {
          "type": "number"
        },
        "underlyingPrice": {
          "type": "number"
        }
      }
    },
    "Trial": {
      "type": "object",
      "properties": {
        "openDateTime": {
          "type": "string"
        },
        "closeDateTime": {
          "type": "string"
        },
        "profitLoss": {
          "type": "number"
        }
      }
    },
    "Leg": {
      "type": "object",
      "properties": {
        "direction": {
          "type": "string",
          "oneOf": [
            {
              "title": "Buy",
              "const": "buy"
            },
            {
              "title": "Sell",
              "const": "sell"
            }
          ]
        },
        "side": {
          "type": "integer",
          "oneOf": [
            {
              "title": "None,",
              "const": 0
            },
            {
              "title": "Call,",
              "const": 1
            },
            {
              "title": "Put,",
              "const": 2
            }
          ]
        },
        "quantity": {
          "type": "integer"
        },
        "delta": {
          "type": "integer"
        },
        "daysUntilExpiration": {
          "type": "integer"
        }
      }
    },
    "EntryConditions": {
      "type": "object",
      "properties": {
        "frequency": {
          "type": [
            "string",
            "null"
          ],
          "oneOf": [
            {
              "title": "Every day",
              "const": "every day"
            },
            {
              "title": "On specific days",
              "const": "on specific days of the week"
            },
            {
              "title": "On exact days",
              "const": "on exact days to expiration match"
            }
          ]
        },
        "specificDays": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "integer"
          }
        },
        "maximumActiveTrials": {
          "type": [
            "integer",
            "null"
          ]
        },
        "maximumActiveTrialsBehavior": {
          "type": [
            "string",
            "null"
          ],
          "oneOf": [
            {
              "title": "Don't enter",
              "const": "don't enter"
            },
            {
              "title": "Close oldest",
              "const": "close oldest"
            }
          ]
        },
        "minimumVIX": {
          "type": [
            "integer",
            "null"
          ]
        },
        "maximumVIX": {
          "type": [
            "integer",
            "null"
          ]
        }
      }
    },
    "ExitConditions": {
      "type": "object",
      "properties": {
        "takeProfitPercentage": {
          "type": [
            "integer",
            "null"
          ]
        },
        "stopLossPercentage": {
          "type": [
            "integer",
            "null"
          ]
        },
        "afterDaysInTrade": {
          "type": [
            "integer",
            "null"
          ]
        },
        "atDaysToExpiration": {
          "type": [
            "integer",
            "null"
          ]
        },
        "minimumVIX": {
          "type": [
            "integer",
            "null"
          ]
        }
      }
    },
    "AvailableSymbolDates": {
      "type": "object",
      "properties": {
        "symbol": {
          "type": "string"
        },
        "startDate": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        }
      }
    },
    "SimpleSessionDeserializer": {
      "type": "object",
      "properties": {
        "close-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "close-at-ext": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "instrument-collection": {
          "description": "",
          "type": "string"
        },
        "open-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "start-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "SimpleSessionDeserializer model"
    },
    "CurrentSessionDeserializer": {
      "type": "object",
      "properties": {
        "close-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "close-at-ext": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "instrument-collection": {
          "description": "",
          "type": "string"
        },
        "open-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "start-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "next-session": {
          "description": "",
          "type": "object",
          "properties": {
            "close-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "close-at-ext": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "instrument-collection": {
              "description": "",
              "type": "string"
            },
            "open-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "session-date": {
              "description": "",
              "type": "string",
              "format": "date"
            },
            "start-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "previous-session": {
          "description": "",
          "type": "object",
          "properties": {
            "close-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "close-at-ext": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "instrument-collection": {
              "description": "",
              "type": "string"
            },
            "open-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "session-date": {
              "description": "",
              "type": "string",
              "format": "date"
            },
            "start-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "state": {
          "description": "",
          "type": "string"
        }
      },
      "description": "CurrentSessionDeserializer model"
    },
    "CurrentSession": {
      "type": "object",
      "properties": {
        "close-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "close-at-ext": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "instrument-collection": {
          "description": "",
          "type": "string"
        },
        "open-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "start-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "next-session": {
          "description": "",
          "type": "object",
          "properties": {
            "close-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "close-at-ext": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "instrument-collection": {
              "description": "",
              "type": "string"
            },
            "open-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "session-date": {
              "description": "",
              "type": "string",
              "format": "date"
            },
            "start-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "previous-session": {
          "description": "",
          "type": "object",
          "properties": {
            "close-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "close-at-ext": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "instrument-collection": {
              "description": "",
              "type": "string"
            },
            "open-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "session-date": {
              "description": "",
              "type": "string",
              "format": "date"
            },
            "start-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "state": {
          "description": "",
          "type": "string"
        }
      },
      "description": "CurrentSession model"
    },
    "NextSession": {
      "type": "object",
      "properties": {
        "close-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "close-at-ext": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "instrument-collection": {
          "description": "",
          "type": "string"
        },
        "open-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "session-date": {
          "description": "",
          "type": "string",
          "format": "date"
        },
        "start-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "NextSession model"
    },
    "PreviousSession": {
      "type": "object",
      "properties": {
        "close-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "close-at-ext": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "instrument-collection": {
          "description": "",
          "type": "string"
        },
        "open-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "session-date": {
          "description": "",
          "type": "string",
          "format": "date"
        },
        "start-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "PreviousSession model"
    },
    "MarketCalendarDeserializer": {
      "type": "object",
      "properties": {
        "market-half-days": {
          "description": "",
          "type": "object"
        },
        "market-holidays": {
          "description": "",
          "type": "object"
        }
      },
      "description": "MarketCalendarDeserializer model"
    },
    "Transaction": {
      "type": "object",
      "properties": {
        "id": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "account-number": {
          "description": "",
          "type": "string"
        },
        "action": {
          "description": "",
          "type": "string"
        },
        "agency-price": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "clearing-fees": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "clearing-fees-effect": {
          "description": "",
          "type": "string"
        },
        "commission": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "commission-effect": {
          "description": "",
          "type": "string"
        },
        "lots": {
          "description": "",
          "type": "object",
          "properties": {
            "id": {
              "description": "",
              "type": "string"
            },
            "executed-at": {
              "description": "",
              "type": "string",
              "format": "date-time"
            },
            "price": {
              "description": "",
              "type": "number",
              "format": "double"
            },
            "quantity": {
              "description": "",
              "type": "number",
              "format": "double"
            },
            "quantity-direction": {
              "description": "",
              "type": "string"
            },
            "transaction-date": {
              "description": "",
              "type": "string",
              "format": "date"
            },
            "transaction-id": {
              "description": "",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "cost-basis-reconciliation-date": {
          "description": "",
          "type": "string",
          "format": "date"
        },
        "currency": {
          "description": "",
          "type": "string"
        },
        "currency-conversion-fees": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "currency-conversion-fees-effect": {
          "description": "",
          "type": "string"
        },
        "description": {
          "description": "",
          "type": "string"
        },
        "destination-venue": {
          "description": "",
          "type": "string"
        },
        "exchange": {
          "description": "",
          "type": "string"
        },
        "exchange-affiliation-identifier": {
          "description": "",
          "type": "string"
        },
        "exec-id": {
          "description": "",
          "type": "string"
        },
        "executed-at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "ext-exchange-order-number": {
          "description": "",
          "type": "string"
        },
        "ext-exec-id": {
          "description": "",
          "type": "string"
        },
        "ext-global-order-number": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "ext-group-fill-id": {
          "description": "",
          "type": "string"
        },
        "ext-group-id": {
          "description": "",
          "type": "string"
        },
        "instrument-type": {
          "description": "",
          "type": "string"
        },
        "is-estimated-fee": {
          "description": "",
          "type": "boolean"
        },
        "leg-count": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "net-value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "net-value-effect": {
          "description": "",
          "type": "string"
        },
        "order-id": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "other-charge": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "other-charge-description": {
          "description": "",
          "type": "string"
        },
        "other-charge-effect": {
          "description": "",
          "type": "string"
        },
        "price": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "principal-price": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "proprietary-index-option-fees": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "proprietary-index-option-fees-effect": {
          "description": "",
          "type": "string"
        },
        "quantity": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "regulatory-fees": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "regulatory-fees-effect": {
          "description": "",
          "type": "string"
        },
        "reverses-id": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "symbol": {
          "description": "",
          "type": "string"
        },
        "transaction-date": {
          "description": "",
          "type": "string",
          "format": "date"
        },
        "transaction-sub-type": {
          "description": "",
          "type": "string"
        },
        "transaction-type": {
          "description": "",
          "type": "string"
        },
        "underlying-symbol": {
          "description": "",
          "type": "string"
        },
        "value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "value-effect": {
          "description": "",
          "type": "string"
        }
      },
      "description": "Transaction model"
    }
  }
}